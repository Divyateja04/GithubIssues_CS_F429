[
    {
        "fileName": "doc/examples/PullRequest.rst",
        "commits": [
            "Fix parameter order according to Version 2.1.0 (#2786)  Version 2.1.0 introduced a breaking change to the `Repository.create_pull` method. This PR updates the example provided in the docs: https://pygithub.readthedocs.io/en/latest/examples/PullRequest.html#create-a-new-pull-request",
            "Add example for Pull Request comments to documentation (#2390)",
            "Fix typo in PullRequest.rst (#1494)",
            "doc: example of Pull Request creation (#1344)  Add an example of creating a pull request",
            "Add Pull Request Examples (#875)  Per @sfdye request, here is an example to acquire Pull Requests."
        ]
    },
    {
        "fileName": ".readthedocs.yml",
        "commits": [
            "Add missing GitHub classes to docs (#2783)",
            "RTD: install current project",
            "Move lint and docs to Python 3.8 (#2077)  With Python 3.6 rapidly approaching end of life, move the docs and lint tox targets to Python 3.8, and also switch readthedocs to match.",
            "Correct reqirements.txt path in RTD config",
            "Add configuration for Read the Docs (#1347)  Read the Docs defaults to using Python 2 to build the documentation, so add a configuration file so we use a supported (upstream and by us) version.  Fixes #1341"
        ]
    },
    {
        "fileName": "doc/conf.py",
        "commits": [
            "Add missing GitHub classes to docs (#2783)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "RTD: install current project",
            "Add current dir sys.path as well",
            "Fix package name again",
            "Fix sphinx package name",
            "Use use_scm_version to get current version from git tag (#2429)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Fix rtd build",
            "Apply black to whole codebase (#1303)",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores.",
            "Sync copyright header",
            "docs: sort the Github Objects (#735)  It's difficult to follow the API docs when the order isn't alphabetical. This seems like the simplest fix, and worked well locally.",
            "Apply fix_headers script to update copyright info",
            "Update Sphinx conf",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Use a more modern sphinx theme",
            "Remove contributing from readthedocs, closes #714",
            "Make sphinx work again",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Publish version 1.21.0",
            "Twitt about releases",
            "Merge branch 'develop'",
            "Fix doc generation",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Generate doc/apis.rst instead of checking it",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Add a script to fix file headers",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Fix doc for raw_data (issue #144)",
            "Merge branch 'topic/Notifications' into develop",
            "Fix documentation (pull #148)  I had to separate class NotificationSubject in its own file, to cope with my basic doc generation.",
            "Merge branch 'develop'",
            "Improve documentation",
            "Generate some repetitive doc files",
            "Improve",
            "Use version from setup.py in documentation",
            "Re-organize doc"
        ]
    },
    {
        "fileName": "doc/examples/MainClass.rst",
        "commits": [
            "Add missing GitHub classes to docs (#2783)",
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add examples for searching repositories (#874) (#918)",
            "Set up example docs skeleton"
        ]
    },
    {
        "fileName": "doc/github_integration.rst",
        "commits": [
            "Add missing GitHub classes to docs (#2783)"
        ]
    },
    {
        "fileName": "doc/reference.rst",
        "commits": [
            "Add missing GitHub classes to docs (#2783)",
            "Merge branch 'develop'",
            "Improve docs",
            "Improve"
        ]
    },
    {
        "fileName": "doc/utilities.rst",
        "commits": [
            "Add missing GitHub classes to docs (#2783)",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)",
            "Publish version 1.15.0",
            "Prepare version 1.14.0",
            "Merge branch 'topic/SpecificExceptions' into develop",
            "Add (a bit of) documentation about error handling and exceptions",
            "Merge branch 'develop'",
            "Typo",
            "Improve docs",
            "Improve"
        ]
    },
    {
        "fileName": "github/Auth.py",
        "commits": [
            "Add missing GitHub classes to docs (#2783)",
            "Suppress `requests` fallback to netrc, provide `github.Auth.Netrc` (#2739)",
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Test and fix UTC issue with AppInstallationAuth (#2561)",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`."
        ]
    },
    {
        "fileName": "github/RepositoryAdvisory.py",
        "commits": [
            "Add missing GitHub classes to docs (#2783)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "github/GithubRetry.py",
        "commits": [
            "Fix mypy error with urllib3>=2.0.0a1 by ignoring (#2779)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add retry issue to GithubException, don't log it (#2611)",
            "Use timezone-aware reset datetime in GithubRetry.py (#2610)  Co-authored-by: Patryk Szulczyk <patryk.szulczyk@skyscanner.net> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Retry retryable 403 (rate limit) (#2387)"
        ]
    },
    {
        "fileName": "doc/changes.rst",
        "commits": [
            "Release 2.1.1 (#2777)",
            "Fix rst format in `doc/changes.rst` (#2776)",
            "Release 2.1.0 (#2770)",
            "Suppress `requests` fallback to netrc, provide `github.Auth.Netrc` (#2739)",
            "Publish version 2.0.0 (#2583)",
            "Release 1.59.0 (#2563)",
            "Merging 1.58.x patch release notes into master (#2525)  Co-authored-by: Steve Kowalik <steven@wedontsleep.org>",
            "Use use_scm_version to get current version from git tag (#2429)",
            "Publish version 1.57",
            "Publish version 1.56",
            "Adding headers in GithubException is a breaking change (#1931)  Since exporting headers in GithubException might require passing them in a constructor for client code, shift it as a breaking change so users watch out for it.",
            "Fix commit message typo in changelog (#1930)  It appears we run codespell over all documentation, so common typos are picked up by CI. In other news, I must remember to run lint before creating a release.",
            "Publish version 1.55",
            "Publish version 1.54.1",
            "Publish version 1.54",
            "Publish version 1.53",
            "Publish version 1.52",
            "Publish version 1.51",
            "Publish version 1.50",
            "Correct typos found with codespell (#1467)  Correct misspellings and typos located using the codespell tool. Add codespell to pre-commit to avoid further regressions.  Fixes #1459",
            "Publish version 1.47",
            "Publish version 1.46",
            "Publish version 1.45",
            "Publish version 1.44.1",
            "Update changes.rst (#1263)",
            "Publish version 1.44",
            "Update changes.rst (#1223)  * Update changes.rst  * Update changes.rst",
            "Publish version 1.43.8",
            "Publish version 1.43.7",
            "Publish version 1.43.6",
            "Publish version 1.43.5",
            "Publish version 1.43.4",
            "Publish version 1.43.3",
            "Expand nature of rate limit changes in 1.43 (#902)  Document breaking API changes as well as new API additions",
            "Publish version 1.43.2",
            "Publish version 1.43.1",
            "Adding actual v1.43 change log",
            "Publish version 1.43",
            "Publish version 1.42",
            "Publish version 1.41",
            "Publish version 1.40",
            "Publish version 1.40a4",
            "Publish version 1.40a3",
            "Publish version 1.40a2",
            "Publish version 1.40a1",
            "Publish version 1.39",
            "Fix typo",
            "Publish version 1.38",
            "Publish version 1.37",
            "Fix changelog formatting",
            "Publish version 1.36",
            "new release, 1.35",
            "reformat changelog",
            "Publish version 1.34",
            "Publish version",
            "Publish version 1.33",
            "new release 1.32",
            "Merge pull request #518 from khornberg/patch-1  Correct stable version in documentation",
            "Correct stable version in documentation",
            "new release 1.31",
            "Merge pull request #474 from jwilk/rst-formatting  Fix changelog formatting glitch",
            "Fix changelog formatting glitch  reStructuredText parser doesn't consider backquote as closing if it's immediately followed by a letter.",
            "Publish version 1.29",
            "Publish version 1.28",
            "Publish version 1.27.1",
            "Publish version 1.27.0",
            "add changelog entry for 1.26.0",
            "Publish version 1.25.2",
            "Publish version 1.25.1",
            "Publish version 1.25.0",
            "Publish version 1.24.1",
            "Publish version 1.24.0",
            "Publish version 1.23.0",
            "Publish version 1.22.0",
            "Publish version 1.21.0",
            "Publish version 1.20.0",
            "Publish version 1.19.0",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Fix date of 1.18.0",
            "Publish version 1.18.0",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'develop'",
            "Prepare version 1.17.0",
            "Publish version 1.16.0",
            "Publish version 1.15.0",
            "Publish version 1.14.2",
            "Small fixes in doc",
            "Fix link to milestone",
            "Prepare version 1.14.1",
            "Prepare version 1.14.0",
            "Publish version 1.13.1",
            "Publish version 1.13.0",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/FixPythonVersions' into develop",
            "Avoid confusion between github/ and Github.py on case-insensitive file systems (#143)",
            "Merge branch 'master' into develop",
            "Publish version 1.12.2",
            "Publish version 1.12.1",
            "Merge branch 'develop'",
            "Improve publish.sh",
            "Improve documentation",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Fix nested bulleted lists",
            "Improve",
            "Re-organize doc"
        ]
    },
    {
        "fileName": "setup.py",
        "commits": [
            "Fix rst format in `doc/changes.rst` (#2776)",
            "Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>",
            "Merge `Branch` type stubs back to source (#2571)  Introduces new helper methods `is_defined`, `is_undefined`, `is_optional`, `is_optional_list` that is going to simplify input assertions in all our methods.  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Link to stable docs, update introduction in package used by pypi, move auth arg front (#2557)",
            "Add crypto extras to pyjwt, which pulls in cryptogaphy package (#2443)  * Add crypto extras to pyjwt, which pulls in cryptogaphy package * Remove cryptography dependency from more places * Remove integrations extra from docs",
            "Use use_scm_version to get current version from git tag (#2429)",
            "Bump version to 1.58.0",
            "Publish version 1.57",
            "Require pyjwt>=2.4.0 to avoid CVE-2022-29217 (#2333)",
            "Add support for Python 3.11, drop EOL 3.6 (#2332)",
            "Publish version 1.56",
            "Add support for Python 3.10 (#2073)  Now that Python 3.10 has been released, we should test it in CI.",
            "Publish version 1.55",
            "Update PyJWT Version to 2.0+ (#1891)  * Update PyJWT version * Fix `GitRelease.testUploadAssetWithName` test   MIME type wasn't as expected  Fixes #1832",
            "Add missing links to project metadata (#1789)  Fixes: #1788",
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Publish version 1.54.1",
            "Pin pyjwt version (#1797)  * Pin pyjwt version  Pyjwt version is not fixed, which can cause syntax error for user since the release of breaking changes from pyjwt (https://pypi.org/project/PyJWT/#history)  * Update setup.py  Fixes #1796",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop support for Python 3.5 (#1770)  In preperation for starting to use 3.6+ only features, stop testing Python 3.5 in our CI, and bump our minimum required version.",
            "Revert \"Pin requests to <2.25 as well (#1757)\" (#1763)  * Revert \"Pin requests to <2.25 as well (#1757)\" * Ensure httpretty is more recent than 1.0.3  This reverts commit d159425f36dc7f68766cc980e262e9287e5f111c.",
            "Publish version 1.54",
            "Pin requests to <2.25 as well (#1757)  requests 2.26 and its requirements break httpretty (see gabrielfalcao/HTTPretty#409), so pin for the time being. Thanks to S\u00e9bastien Besson and Dhruv Manilawala for the debugging assistance.",
            "Add support for Python 3.9 (#1735)  With Python 3.9 released, we should support it. A later commit will remove support for Python 3.5.",
            "Publish version 1.53",
            "Publish version 1.52",
            "Publish version 1.51",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Publish version 1.50",
            "Use pytest to parametrize tests (#1438)  * Use pytest to parametrize tests  Use built-in pytest test case parametrization support over external 'parameterize' package.  The latter is not well maintained, and has known Python 3.8 failures unsolved since November 2019.  Since pytest fixtures are incompatible with unittest-style tests, rewrite the relevant test case to use pytest-style asserts.  This also makes the resulting code simpler, as we no longer have to pass TestCase to the helper classes.  * Refactor input cleaning in ReplayingConnection.__readNextRequest()",
            "Publish version 1.47",
            "Switch to using pytest (#1423)  Due to the recent deprecation of setup.py test, we should move with the times, and switch to a non-deprecated test runner.  Add configuration for pytest, and switch tox to using it. Remove AllTests, since it is no longer required to locate test classes, and rewrite tests/__main__.py as a pytest conftest plugin.  Also drop the test function from manage.sh, tox does a much better job.",
            "Publish version 1.46",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Publish version 1.45",
            "Apply black to whole codebase (#1303)",
            "Use inclusive ordered comparison for 'parameterized' requirement (#1281)",
            "Publish version 1.44.1",
            "Add Python 3.8 to classifiers list (#1280)  Add 3.8 to the classifiers list, drop the use of 2to3, and run tests against 3.8.",
            "Handle unicode strings when recording responses (#1253) (#1254)  * Handle unicode strings when recording responses (#1253)  * Add new test requirements  * Make requirement conditional  * Fix flake8 error  * Compare dict values without worrying about key order  * Improve readability",
            "Publish version 1.44",
            "Bump httpretty to be a greater or equal to (#1262)  Some distributions do not include httpretty 0.9.6 as is required by setup.py. Set it to >= rather than ==.",
            "Add six to install_requires (#1245)  dc2f2ad8 introduced a dependancy on six, and added it to requirements, but not to setup.py, add it.",
            "Publish version 1.43.8",
            "Publish version 1.43.7",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_",
            "Publish version 1.43.6",
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860",
            "Travis CI: Add Python 3.7 to the testing (#1028)  Also: * Python 3.4 reaches its end of life in 44 days so let's remove it from the testing.  https://devguide.python.org/#branchstatus * [Travis are now recommending removing the __sudo__ tag](https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration).",
            "resolves #1023 (#1042)  resolves #1023",
            "Publish version 1.43.5",
            "Publish version 1.43.4",
            "Publish version 1.43.3",
            "Publish version 1.43.2",
            "Restore RateLimit.rate attribute, raise deprecation warning instead",
            "Publish version 1.43.1",
            "Publish version 1.43",
            "Publish version 1.42",
            "Publish version 1.41",
            "Sync copyright header",
            "Publish version 1.40",
            "Publish version 1.40a4",
            "Publish version 1.40a3",
            "Publish version 1.40a2",
            "Publish version 1.40a1",
            "Use 'requests' instead of 'httplib' (#664)  * works (but tests fail)  * Refactor to use python requests rather than httplib  * add requests dependency in setup.py  * touch so travis-ci will run  * clean up some unused comments  * Handle HTTP vs HTTPS; handle custom base_url  * Use requests session  * Don't use a persistent session in tests (which don't use the real requests library)  * Use an older version of requests for python 3.2  Requests dropped support for Python 3.2 in the 2.10 series (though it didn't detect this until 2.11).  PyGithub probably doesn't need to support Python 3.2 at all; it's quite old, with negligably few users, but that should be addressed elsewhere.  * Revert \"Use an older version of requests for python 3.2\"  This reverts commit fb0367614f5413968eeab98f4094e710aa1bc2d1.  * Improve readability  * Update requirements.txt  * Disable custom proxy handling code (unneeded and broken); use requests'  * Remove comment and superflous code  * Fix iteritems() removal from Python3  * pin requests to 2.14.0 or greater in prep for no_proxy  * pin requests to 2.14.0 or greater in prep for no_proxy",
            "Publish version 1.39",
            "Publish version 1.38",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Update doc link for PyPI",
            "Publish version 1.37",
            "Publish version 1.36",
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "Merge pull request #643 from hugovk/patch-1  Add Python 3.6",
            "Add Python 3.6",
            "new release, 1.35",
            "Merge pull request #557 from paulortman/master  add \"integration\" install option with minimal docs",
            "add \"integration\" install option with minimal docs",
            "Publish version 1.34",
            "Publish version",
            "Publish version 1.33",
            "switch to pyjwt, python-jose is not secure",
            "new release 1.32",
            "new release 1.31",
            "Merge pull request #449 from PyGithub/integrations  GitHub integrations support",
            "Merge pull request #357 from felixonmars/master  Note explicit support for Python 3.5",
            "Note explicit support for Python 3.5",
            "Merge pull request #476 from jwilk/unused-imports  Removed unused imports",
            "Removed unused imports  Since 1d9ad14fa918, the setup script no longer uses subprocess, shutil and os modules.",
            "Publish version 1.29",
            "adds GitHub integrations",
            "Publish version 1.28",
            "Publish version 1.27.1",
            "Publish version 1.27.0",
            "update doc url everywhere (#420)",
            "Publish version",
            "Publish version 1.25.2",
            "Merge commit 'refs/pull/277/head'",
            "Added MANIFEST.in",
            "Publish version 1.25.1",
            "Publish version 1.25.0",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Publish version 1.24.1",
            "Publish version 1.24.0",
            "Publish version 1.23.0",
            "Publish version 1.22.0",
            "Publish version 1.21.0",
            "Publish version 1.20.0",
            "Publish version 1.19.0",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Publish version 1.18.0",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Publish version 1.17.0",
            "Publish version 1.16.0",
            "Publish version 1.15.0",
            "Publish version 1.14.2",
            "Publish version 1.14.1",
            "Revert \"Incremented version.\"  This reverts commit ff0cf4150295bfdc6d3d4f09f57878dbd9095b16.",
            "Incremented version.",
            "Publish version 1.14.0",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Publish version 1.13.1",
            "List all versions of Python in setup.py",
            "Publish version 1.13.0",
            "Use bash for manage.sh",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/FixPythonVersions' into develop",
            "Fix for Python 2.5",
            "Merge branch 'master' into develop",
            "Publish version 1.12.2",
            "Publish version 1.12.1",
            "Publish version 1.12.0",
            "Merge branch 'develop'",
            "Improve publish.sh",
            "On the way to replace publish.sh by setup.py publish",
            "Improve documentation",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Publish version 1.11.1",
            "Publish version 1.11.0",
            "Mark urls to be completed",
            "Improve",
            "Publish version 1.10.0",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Use version from setup.py in documentation",
            "Simplify",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Add the Python 3 classifier",
            "Further simplify",
            "pep8 + readme",
            "Fixes for Python 3: setup.py install will call 2to3  We temporary loose coverage measurement... again!",
            "Publish version 1.9.1",
            "Publish version 1.9.0",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Simplify",
            "Restore measure of test coverage",
            "Publish version 1.8.1",
            "Publish version 1.8.0",
            "Fixes for issue #86",
            "Use the ./setup.py test convention",
            "Publish version 1.7",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Publish version 1.6",
            "Publish version 1.5",
            "Publish version 1.4",
            "dos2unix, chmod +x",
            "Publish version 1.3",
            "Merge branch 'develop'",
            "Fix(?) problem with documentation install path (Issue #48)",
            "Publish version 1.2",
            "Try to fix location of installed documentation (Issue #48)  I hope I've understood well http://docs.python.org/distutils/setupscript.html#installing-package-data",
            "Prepare version 1.1",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Prepare setup.py for version 1.0",
            "Add a copyright and license notice (issue #16)",
            "Set attributes of executable files",
            "Prepare version 1.0",
            "Fix tutorial",
            "Merge branch 'master' into topic/RewriteWithGeneratedCode  Conflicts: \tgithub/Github.py \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Publish version 0.7",
            "Merge branch 'develop'",
            "Publish version 0.6",
            "Merge branch 'develop'",
            "Publish version 0.5",
            "Publish version 0.4",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Anticipate version 0.3",
            "Typo",
            "Merge branch 'topic/Refactor' into develop",
            "dos2unix",
            "Fix version 0.2 :-$",
            "Publish version 0.2",
            "Publish version 0.1",
            "Upload to the Python Package Index"
        ]
    },
    {
        "fileName": "requirements.txt",
        "commits": [
            "Require urllib 1.26.0 or greater (#2774)",
            "Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Retry retryable 403 (rate limit) (#2387)",
            "Add crypto extras to pyjwt, which pulls in cryptogaphy package (#2443)  * Add crypto extras to pyjwt, which pulls in cryptogaphy package * Remove cryptography dependency from more places * Remove integrations extra from docs",
            "Require pyjwt>=2.4.0 to avoid CVE-2022-29217 (#2333)",
            "Fix CI (#2330)",
            "Update sphinx-rtd-theme requirement from <0.6 to <1.1 (#2059)  Updates the requirements on [sphinx-rtd-theme](https://github.com/readthedocs/sphinx_rtd_theme) to permit the latest version. - [Release notes](https://github.com/readthedocs/sphinx_rtd_theme/releases) - [Changelog](https://github.com/readthedocs/sphinx_rtd_theme/blob/master/docs/changelog.rst) - [Commits](https://github.com/readthedocs/sphinx_rtd_theme/compare/0.1.8...1.0.0)  --- updated-dependencies: - dependency-name: sphinx-rtd-theme   dependency-type: direct:production ...  Signed-off-by: dependabot[bot] <support@github.com>  Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
            "Update PyJWT Version to 2.0+ (#1891)  * Update PyJWT version * Fix `GitRelease.testUploadAssetWithName` test   MIME type wasn't as expected  Fixes #1832",
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Pin pyjwt version (#1797)  * Pin pyjwt version  Pyjwt version is not fixed, which can cause syntax error for user since the release of breaking changes from pyjwt (https://pypi.org/project/PyJWT/#history)  * Update setup.py  Fixes #1796",
            "Revert \"Pin requests to <2.25 as well (#1757)\" (#1763)  * Revert \"Pin requests to <2.25 as well (#1757)\" * Ensure httpretty is more recent than 1.0.3  This reverts commit d159425f36dc7f68766cc980e262e9287e5f111c.",
            "Pin requests to <2.25 as well (#1757)  requests 2.26 and its requirements break httpretty (see gabrielfalcao/HTTPretty#409), so pin for the time being. Thanks to S\u00e9bastien Besson and Dhruv Manilawala for the debugging assistance.",
            "Update sphinx-rtd-theme requirement from <0.5 to <0.6 (#1563)  Updates the requirements on [sphinx-rtd-theme](https://github.com/rtfd/sphinx_rtd_theme) to permit the latest version. - [Release notes](https://github.com/rtfd/sphinx_rtd_theme/releases) - [Changelog](https://github.com/readthedocs/sphinx_rtd_theme/blob/master/docs/changelog.rst) - [Commits](https://github.com/rtfd/sphinx_rtd_theme/compare/0.1.8...0.5.0)  Signed-off-by: dependabot-preview[bot] <support@dependabot.com>  Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>",
            "More precise typing for MainClass.get_user() (#1575)  Use typing.overload for MainClass.get_user() since it can return two disparate types. Correct the docstring for it, as well as locking down Sphinx to <3 due to built docs issue and drive-by link correction.  Fixes #1550",
            "Unpin sphinx requirement (#1370)  Now that we support Python 3, we can stop pinning sphinx to the last version with Python 2 support.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add cryptography to test-requirements.txt (#1165)",
            "Restore RateLimit.rate attribute, raise deprecation warning instead",
            "Add sphinx setup instruction",
            "Use 'requests' instead of 'httplib' (#664)  * works (but tests fail)  * Refactor to use python requests rather than httplib  * add requests dependency in setup.py  * touch so travis-ci will run  * clean up some unused comments  * Handle HTTP vs HTTPS; handle custom base_url  * Use requests session  * Don't use a persistent session in tests (which don't use the real requests library)  * Use an older version of requests for python 3.2  Requests dropped support for Python 3.2 in the 2.10 series (though it didn't detect this until 2.11).  PyGithub probably doesn't need to support Python 3.2 at all; it's quite old, with negligably few users, but that should be addressed elsewhere.  * Revert \"Use an older version of requests for python 3.2\"  This reverts commit fb0367614f5413968eeab98f4094e710aa1bc2d1.  * Improve readability  * Update requirements.txt  * Disable custom proxy handling code (unneeded and broken); use requests'  * Remove comment and superflous code  * Fix iteritems() removal from Python3  * pin requests to 2.14.0 or greater in prep for no_proxy  * pin requests to 2.14.0 or greater in prep for no_proxy",
            "Merge pull request #544 from felixonmars/patch-1  Update requirements to match the latest pyjwt switch",
            "Update requirements to match the latest pyjwt switch",
            "Merge pull request #449 from PyGithub/integrations  GitHub integrations support",
            "adds GitHub integrations"
        ]
    },
    {
        "fileName": ".github/workflows/pypi-release.yml",
        "commits": [
            "Fix pypi-release workflow, allow for manual run (#2771)",
            "CI: Build and check package before release (#2593)",
            "CI: Update action actions/setup-python (#2382)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Bump actions/checkout from 2 to 3.1.0 (#2327)  Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
            "Add release drafter and pubilsh on tag creation (#2428)",
            "Various Github Action improvement (#1610)"
        ]
    },
    {
        "fileName": "github/StatsContributor.py",
        "commits": [
            "Merge `StatsContributor.pyi` back to source (#2761)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Correct typos found with codespell (#1467)  Correct misspellings and typos located using the codespell tool. Add codespell to pre-commit to avoid further regressions.  Fixes #1459",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Finish .../stats/... (#203)",
            "Fix copyright headers",
            "First step of implementation of Repository.get_stats_xxx (#203)"
        ]
    },
    {
        "fileName": "github/StatsContributor.pyi",
        "commits": [
            "Merge `StatsContributor.pyi` back to source (#2761)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Fix CI (#2330)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Repository.py",
        "commits": [
            "Merge `Repository.pyi` back to source (#2749)",
            "Add `license` attribute to `Repository` (#2721)",
            "Add missing attributes to `Repository`  (#2742)",
            "Add `is_alphanumeric` attribute to Autolink and `Repository.create_autolink` (#2630)",
            "Search Workflows by Name (#2711)",
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Add support for repo and org level actions variables (#2580)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Add support for environments (#2223)",
            "Add support for new RepositoryAdvisories API :tada: (#2483)",
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`",
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Fix broken urls in docstrings (#2393)",
            "Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>",
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "Add allow_auto_merge support to Repository (#2477)  Co-authored-by: Glenn McDonald <testworksau@users.noreply.github.com>",
            "Fixes issue #2521 (#2529)",
            "Add allow_update_branch option to Organization (#2465)",
            "Add parameters to Repository.get_workflow_runs (#2408)",
            "Add unarchiving support (#2391)",
            "feat: add allow_forking to Repository (#2380)  * chore(dependency): flake8 has moved to github  * feat: add allow_forking to Repository  * chore: linting  Co-authored-by: hussaiia <ibrahim.hussaini@cba.com.au>",
            "Add code scanning alerts (#2227)",
            "Add support for repository autolink references (#2016)",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>",
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Improve signature of Repository.create_repo (#2118)  The docstring stated that `\"*\"` and `\"none\"` were valid values for the organization, but neither was actually supported (unless your organization was called `\"none\"`).  Remove the misleading information from the docstring, and add support for passing in an actual `Organization` object, for better typing and reliability properties.  Fixes #2116",
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add Repository.rename_branch method (#2089)  The GitHub API exposes an endpoint to rename a branch, so we should support calling it. Sadly, there is not enough information to add that method to the Branch class, so expose it in the Repository object.  Fixes #1901",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Updating links to Github documentation for deploy keys (#1850)  * Updating links to Github documentation for deploy keys  There are a couple of links to http://developer.github.com/v3/repos/keys/ and I believe these should be going to http://developer.github.com/v3/repos/#deploy-keys. I've updated the docstrings in this file appropriately.",
            "Add support for deleting repository secrets (#1868)  When a previous commit added support for creating secrets on repository objects, support was not added to also remove them. Since the GitHub API does support that, add a method to do so.",
            "Switch repository secrets to using f-strings (#1867)  New code written before we switched to f-strings need to get updated to using them, so do so.",
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners",
            "Added support for `Repository.get_workflow_runs` parameters (#1682)  * Added support for `Repository.get_workflow_runs` parameters  * Added anchor tag to docstring link  * Tests",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow.",
            "More precise typing for MainClass.get_user() (#1575)  Use typing.overload for MainClass.get_user() since it can return two disparate types. Correct the docstring for it, as well as locking down Sphinx to <3 due to built docs issue and drive-by link correction.  Fixes #1550",
            "Small documentation correction in Repository.py (#1565)  Class `github.Clone.Clone` doesn't exist and should reference `github.Clones.Clones` instead.",
            "Fixed formatting of docstrings for `Repository.create_git_tag_and_release()` and `StatsPunchCard`. (#1520)",
            "Remove Repository.topics (#1505)  The topics attribute has been replaced by Repository.get_topics(). To reduce user confusion, delete the attribute.  Fixes #1504",
            "Correct Repository.get_workflows() (#1518)  The API endpoint Repository.get_workflows() calls returns data in a list item, not directly, leading to some head scratching when calling it against GitHub. Re-record the replay data.",
            "docs(repository): correct releases link (#1514)",
            "Add support for Workflows (#1496)  To start supporting GitHub Actions, add the first part of that, Workflow, which encapsulates a workflow over the API, along with two methods on Repository to query them.",
            "Drop use of shadow-cat for draft PRs (#1469)",
            "List matching references (#1471)",
            "Add create_repository_dispatch (#1449)",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test.",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>",
            "Docstring for Repository.create_git_tag_and_release (#1425)  The function create_git_tag_and_release had no docstring, so it didn't appear anywhere in our docs. Add a short one linking to the two methods it calls.  Fixes #1402",
            "Add Deployments API (#1424)  Add a new class, Deployment to describe a deployment performed utilising GitHub. Add three methods onto Repository to list them and create them.  Fixes #1117",
            "Merge pull request #1422 from ahhda/draft_pull_request  Add support for draft pull request",
            "Add draft flag parameter, update tests",
            "Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge",
            "Fix mistake in Repository.create_fork() (#1383)  I modified #1306 to use the NotSet parameter after it was pointed out this was more appropriate however I did not also update the conditional.",
            "Search repo issues by string label (#1379)  * Allow use of strings for labels in Repository.get_issues  * Fix unittests  * Update docstring  * Removed brackets from \"list of...\"",
            "Correct Repository.create_git_tag_and_release() (#1362)  Repository.create_git_tag_and_release() is a convience function that creates a git tag and then a release. It was not passing the SHA1 of the commit to the release function, resulting in incorrect releases.  Fixes #1336",
            "Repository.create_project() body is optional (#1359)  The POST parameters passed to the create_project API call did not consider the body optional, and always included it. Fix up a formatting error in the docstring for good measure.  Fixes #1357",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "black",
            "Apply black to whole codebase (#1303)",
            "Fix class used returning pull request comments (#1307)  Repository.get_pull_request_comments() was returning the wrong type.",
            "Support for create_fork (#1306)  * Support for create_fork  http://developer.github.com/v3/repos/forks  * Add test case for create_fork  * Add param doc and fix extra line  * Specify the organization to increase line coverage  * Update test data  * Add type assert for organization param",
            "Deprecate Repository.get_dir_contents() (#1285)  Repository.get_contents() and Repository.get_dir_contents() call the same endpoint, with slightly different error handling, and with the difference that get_dir_contents() throws an odd exception if you call it with a file. get_contents() already even handles being called for a directory anyway, so deprecate get_dir_contents(), and refactor the code so the tests pass.  Fixes #1283",
            "Encode content for {create,update}_file (#1267)  If a byte object (for Python 3) was passed into either create_file or update_file, it was attempted to be co-erced into a bytearray, which failed. Check for encoded content before we encode it into bytes and then base64 encode it.  Fixes #1266",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Jump from notifications to related PRs/issues. (#1168)  * Jump from notifications to related PRs/issues.  * Add test case for jumping to related PRs/issues.  Also another method to get notifications scoped to a repository, otherwise it's hard to keep out sensitive information from the test cases.",
            "Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods.",
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement",
            "Delete Legacy submodule (#1192)  Since the only part of the Legacy submodule that is used and tested is the transform issue function, refactor it into a Repository method and delete it.",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Update Repository.update_file() docstring (#1186)  The docstring for Repository.update_file() insisted that content be base64 encoded, which is not quite correct, update it.  Closes #1069",
            "Add Repository methods for pending invitations (#1159)  Make a start on implementing more of the invitations API, by adding methods to Repository to list and remove pending invitations.  Closes #1120",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Handle a path of / in Repository.get_contents() (#1070)  The path requested in Repository.get_contents() is appended to the URL, so the root path should be requested with the empty string. If path is '/', set it to the empty string. Copy the replay data from the original test, since it is identical.  Drive-by renaming the test to include the missing 's'.  Closes #1059",
            "update doc, fix #1123",
            "Merge `get_file_contents` with `get_contents`",
            "Add url parameter to include anonymous contributors in get_contributors() (#1075)  Add the anon parameter missing from get_contributors() so anonymous contributors can be included in results as specified in the [Github REST API Reference](https://developer.github.com/v3/repos/#list-contributors).",
            "Add \"create repository project\" and \"create project column\" methods (#995)  Added the two methods:  - Create a project for a given repo  - Create a column for a given project   Tests are basics but done :)",
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926",
            "get_issues documentation for state (#961)  Closes #835",
            "Ability to filter repository collaborators (#938)  ## Changes - Add `affiliation` parameter to `get_collaborators()` and use it to filter collaborators through the API - Resolves #937   PS: Would have loved to add a simple test for this but there seems to be a problem on my end using OAuth as I'm just not able to authenticate to the API during tests.",
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead.",
            "Add a trailing slash to URL when updating or deleting a file (tests fixed) (#931)  * Add a trailing slash to URL when updating or deleting a file.  * Update test files to match new create/update/delete_file Repo methods  * Add trailing slash to get_contents() method  * update tests  * add missing slash in get_dir_contents  * add example usage  * remove dup slashes in tests  * clarify example comments",
            "Fix Repository.edit (#904)  Allows to pass falsy values to the new arguments introduced in #844.  Closes #903",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card",
            "Implement Repository.get_collaborator_permission (#881)  Add a method to Repository, collaborator_permission that allows users with push access to repositories to query the permission level of collaborators.  Fixes #722",
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Refactor common header constants and custom media type",
            "Remove custom swamp-thing-preview header (#873)  The Repository Invitation API graduated on July 17, 2017, so the custom Accept header is no longer required.",
            "Remove Repository.get_protected_branch (#871)  With both the custom Accept header and the new code that supports the new Branch Protection API, Repository.get_protected_branch() is no longer required, and it also was never tested, so remove it.",
            "Fix a few docs error",
            "Sync copyright header",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Add missing arguments to Repository.edit (#844)  As promised in https://github.com/PyGithub/PyGithub/pull/842, here's a PR to update the `edit` method so that it allows editing the newly added properties.",
            "Add missing properties to Repository (#842)  Closes #784 Closes #785  First commit fixes a small bug that I observed while trying to record some new test fixtures: the stringification of the headers is not correctly printed as a list of tuples, but as an `iteritems` object, so I forced the list evaluation.  Second commit adds the missing properties `allow_merge_commit`, `allow_rebase_merge`, `allow_squash_merge`, and `has_projects` to the `Repository` class.  Note however that I ran into some trouble while modifying the `edit` method of the `Repository` class to make use of the new properties, specifically while writing tests, so I will fix the `edit` method in a future PR.",
            "Adding archival support for Repository.edit (#843)  Fixes ##840   Adding archival support to Repository.edit  No unit tests are included for this change because while you can archive a repository via the edit API, there is no way to un-archive a repository via the edit API.  (See: https://developer.github.com/v3/repos/#edit )",
            "Add support for getting / replacing topics (#634) (#832)  * Add support for getting and replacing topics on a repository #634  * Add / fix tests, accept list vs dict for replace_topics (#634)",
            "Fix incorrect formatting in docstrings (#816)",
            "Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header.",
            "Correct Repository.get_git_tree recursive use (#767)  The API docs for Repository.get_git_tree specify that the URL parameter for fetching a tree recursively should be ?recursive=1, not a truthy value. To not change the API we present, check if it is True before setting it to 1. Change another callsite of Repository.get_git_tree to specify recursive=False to make sure it doesn't appear in the query string.  Fixes #560",
            "Add documentation to github.Repository.Repository.create_git_release() (#747)",
            "Implement License API (#734)  * Implement License API  * Update copyright",
            "Fix delete method for RepositoryKey",
            "Labels API: support description (#738)  The description attribute handling requirement is   a custom media type in the Accept header:     application/vnd.github.symmetra-preview+json  Limitation: Repository.get_labels does not report description, possibly something has changed in the preview API.",
            "Source Import API (#673)  * add import source  * add import header  * create/get source import for repo, SourceImport class  * Corrected use_lfs, not considered completed with creation  * vcs creds optional  * SourceImport test, removed unneeded attributes  * create/get source import tests for repo  * Encoding and copyright comment  * styling fixes  * Update SourceImport.py  * Update SourceImport.py  * Update SourceImport.py",
            "Apply fix_headers script to update copyright info",
            "Added target_commitish option to Repository.create_git_release() (#625)  * Added is_draft and is_prerelease property to GitRelease  * Added target_commitish option to Repository.create_git_release()  * Added test for Repository.create_git_release()  * Renamed attr of GitRelease: is_draft, is_prerelease -> draft, prerelease",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Add maintainer can modify flag to create pull request (#703)  * Add flag for maintainer can modify when creating pull requests  * Change default to be None to let github decide the behaviour  * Update docstring  * Follow conventions from other functions",
            "Add collaborator permission support (#699)",
            "Use datetime object in create_milestone (#698)  Method create_milestone now uses datetime object to fit better with v3 API using ISO8601.  Date object still allowed for backward compatibility.",
            "Fix date format for milestone creation (#593)",
            "Add committer/author to Repository.delete_file (#678)",
            "Add method to get latest release of a repository (#609)",
            ":recycle: Fix all pep8 coding conventions",
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "Add Repository.archived property (#657)",
            "Add read_only attribute to Deploy Keys (#570)",
            "Fix uploading binary files on Python 3 (#621)  There is a bit of logic for Python 2 that detects if you're uploading string or bytes, but this is missing for Python 3.",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases",
            "Quote path for /contents API (#614)  This allows spaces and other special characters in the file path.  Fixes #613.",
            "added repository collaborator invitation",
            "fix repository",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Merge pull request #492 from Sylvus/master  Added support for subscribers_count",
            "Updated documentation",
            "Added a subscribers count field",
            "Added \"assignees\" argument in Repository.create_issue()",
            "Merge pull request #448 from PyGithub/contentfile-listing  Support directories in repo.get_contents",
            "adds support for content dirs",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "Merge pull request #438 from fukatani/fix-typo-repo  Fix small typo",
            "Fix small typo",
            "Merge pull request #436 from GHfan/unicode_content_file_support_py2  change file content encoding to support unicode(like chinese), py2",
            "change file content encoding to support unicode(like chinese), py2",
            "fixed file API return values  The returned objects were not correctly populated, leaving us with empty objects.  This is now fixed.",
            "assert by str and unicode to make it more py3 friendly",
            "Merge branch 'enix223-master'",
            "Merge branch 'master' of https://github.com/enix223/PyGithub into enix223-master",
            "update doc url everywhere (#420)",
            "Merge pull request #413 from proyvind/proyvind-fixes  fix wrong expectance on requestJsonAndCheck() returning {} if no data",
            "fix wrong expectance on requestJsonAndCheck() returning {} if no data  When there's no data, requestJsonAndCheck(), or rather __structuredFromJson() returns None rather than {}. As both None & {} evaluates to false, 'if not data:' will give the correct behaviour regardless of returning {} or None.",
            "fix update/create/delete file api return value issue",
            "fix typo",
            "Merge branch 'master' of https://github.com/enix223/PyGithub",
            "fix update/delete/create content return value invalid issue",
            "Merge pull request #384 from virtuald/patch-1  add support for the head parameter in Repository.get_pulls",
            "add support for the head parameter in Repository.get_pulls",
            "fix python3 compatibility issue for using json/base64",
            "Add repo content create/update/delete testcase",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint",
            "fix request parameters issue",
            "add content file create/update/delete api",
            "Merge pull request #360 from allevin/master  Add support for the \"base\" parameter in the repository get_pulls() method.",
            "Adding base parameter to get_pulls() method.",
            "Merge pull request #355 from kevinsl/master  add support for the direction parameter in Repository.get_pulls",
            "add support for the direction parameter in Repository.get_pulls",
            "Merge pull request #354 from jayfk/creator-parameter  Add creator to get_issues",
            "added creator parameter",
            "Merge pull request #347 from danvk/starred-at  Add repo.get_stargazers_with_dates()",
            "Add repo.get_stargazers_with_dates()",
            "Merge pull request #340 from crwilcox/master  Fixes #339 by allowing strings in the labels list.",
            "Fixes #339 by allowing strings in the labels list.",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet",
            "Merge pull request #292 from jondb/master  Added sort option to get_pulls.",
            "Added sort option to get_pulls.",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Acknowledge some lack of test coverage",
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "Fix #216: handle 'Link' header  Headers with capitals are returned by http.client (replacing httplib in Python 3)",
            "Now accepts strings for assignee.  When calling pygithub for calls associated with assignees you can now simply pass a string instead of a NamedUser object. This applies to the following methods: - issue.edit() - repo.create_issue() - repo.get_issues() - repo.has_in_assignees() - repo.has_in_collaborators() - repo.remove_from_collaborators() - repo.add_to_collaborators()",
            "Publish version 1.22.0",
            "Merge branch 'pr212' into develop",
            "Added 'stargazers_count' property to Repository",
            "Merge branch 'develop'",
            "Finish .../stats/... (#203)",
            "First step of implementation of Repository.get_stats_xxx (#203)",
            "Fix doc",
            "Add 'author' to 'Repository.get_commits' (#204)",
            "Merge branch 'develop'",
            "Remove Repository.create_download and NamedUser.create_gist",
            "Fix public/private in Repository.edit (#199)",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "./manage.sh fix_headers",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Run compare_to_api_ref_doc.py",
            "Fix copyrights (#181 #182 #184 #186 #187)",
            "Update copyright information",
            "Update Repository.py",
            "Update PullRequest.py",
            "Update Organization.py",
            "Update NamedUser.py",
            "Update Milestone.py",
            "Update Label.py",
            "Update IssueEvent.py",
            "Update Issue.py",
            "Update Hook.py",
            "Update GitTree",
            "Update GitTag.py",
            "Update GitRef.py",
            "Update GitBlob.py",
            "Update Download.py",
            "Update ContentFile.py",
            "Update Comparision.py",
            "Update CommitComment.py",
            "Update Commit.py and GitCommit.py",
            "Update RepositoryKey.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update Permissions.py",
            "Update Branch.py",
            "Merge branch 'topic/AddParamsToRepositoryGetCommits' into develop",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Adding since, until parameters to Repository.getCommits()",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge branch 'topic/HttpRedirect' into develop",
            "handle 302 responses in get_dir_contents requests",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Repository docstring",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Fix pep8 and coverage",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Implement Repository.get_dir_contents (issue #140)",
            "Merge branch 'develop'",
            "Refactor: put form/multipart encoding in Requester  And remove my fucking credentials from git! (Password changed, btw)",
            "Rename methods in Requester",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring.",
            "Generate some repetitive doc files",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Repository.get_issues_comments and Repository.get_pulls_comments (issue #126)",
            "Complete \"ref in Repository.get_contents and .get_readme\" (pull #124)  Add documentation and automated tests",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Added optional ref parameter for Repository.get_contents",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Implement default_branch in Repository.edit (issue #107)  See http://developer.github.com/changes/2012-10-24-set-default-branch/",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Implement optional revert of #102 (issue #104)",
            "Prepend \"/refs/\" in Repository.get_git_ref (issue #102)",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.merge (issue #69)",
            "Repository.get_branch",
            "Repository.get_archive_link (issue #65)",
            "Repository.get_readme and Repository.get_contents (issue #65)",
            "Small no-impact code improvements",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Implement assignees (issue #68)",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'",
            "Merge remote-tracking branch 'origin/topic/DeleteRepository' into develop",
            "Repository.delete",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Specify a server url for Github.  Allows connection to GitHub Enterprise installs on local URLs.",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Urlquote the keyword in legacy search APIs",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Implement legacy pagination",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination",
            "Convert legacy objects to v3 ones  Still needed: - test completion of objects returned by legacy API - implement legacy pagination",
            "Add 4 (failing) tests for legacy search API (issue #49)  Na\u00efve implementation done in this commit will not work: - pagination is managed another way - users, repositories and issues do not have the standard format",
            "Create documentation and method stubs for issue #49 (legacy search api)",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Fix tests after merging #50, and fix Repository.create_issue and .get_issues as well",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Repository.pyi",
        "commits": [
            "Merge `Repository.pyi` back to source (#2749)",
            "Add `license` attribute to `Repository` (#2721)",
            "Add missing attributes to `Repository`  (#2742)",
            "Add `is_alphanumeric` attribute to Autolink and `Repository.create_autolink` (#2630)",
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Merge `AuthenticatedUser` type stubs back to source (#2577)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Add support for repo and org level actions variables (#2580)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add more methods and attributes to Repository.pyi (#2581)",
            "Add support for environments (#2223)",
            "Add support for new RepositoryAdvisories API :tada: (#2483)",
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>",
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "fix: `Repository.get_artifact()` missing argument `artifact_id` (#2458)",
            "Fixes issue #2521 (#2529)",
            "Add parameters to Repository.get_workflow_runs (#2408)",
            "Add support for repository autolink references (#2016)",
            "Fix/types for repo topic team (#2341)  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>",
            "Fix CI (#2330)",
            "Improve signature of Repository.create_repo (#2118)  The docstring stated that `\"*\"` and `\"none\"` were valid values for the organization, but neither was actually supported (unless your organization was called `\"none\"`).  Remove the misleading information from the docstring, and add support for passing in an actual `Organization` object, for better typing and reliability properties.  Fixes #2116",
            "Add Repository.rename_branch method (#2089)  The GitHub API exposes an endpoint to rename a branch, so we should support calling it. Sadly, there is not enough information to add that method to the Branch class, so expose it in the Repository object.  Fixes #1901",
            "Add support for deleting repository secrets (#1868)  When a previous commit added support for creating secrets on repository objects, support was not added to also remove them. Since the GitHub API does support that, add a method to do so.",
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Merge pull request #1767 from pascal-hofmann/fix-repository-stubs  Fix stubs file for Repository",
            "Fix stubs file for Repository",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners",
            "Fix Repository.create_repository_dispatch type signature (#1643)  * Fix Repository.create_repository_dispatch type signature  * Change from object to Any",
            "Add delete_branch_on_merge arg to Repository.edit type stub (#1639)  Add missing delete_branch_on_merge argument to Repository.edit() stub",
            "Add type stub for Repository.create_fork (#1638)  Add type stub for Repository.create_fork()",
            "Correct Repository.create_pull typing harder (#1635)  It turns out if an argument is optional for an overloaded method, the type hints require the default argument specified to successfully match against the correct signature. Furthermore, the second kind of create_pull() does not support the draft argument at all, so remove it.  Fixes #1634",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow.",
            "More precise typing for Repository.create_pull (#1581)  The typing information for Repository.create_pull did no type checking of the arguments at all. Using the overload functionality, specify both styles of create_pull(). Drive-by a nearby function from using a generic dict to Dict[str, str].",
            "Repository.update_file() content also accepts bytes (#1543)  The typing information for the update_file() method's content parameter states it will only accept str, whereas it will accept both str and bytes.  Fixes #1542",
            "Fix Repository.get_issues stub (#1540)  Fixes #1539",
            "Correct Workflow typing (#1533)  When Workflow support was added, the method calls were not added to the typing file for Repository, and somehow the class name for the Workflow typing file was incorrect.",
            "Remove Repository.topics (#1505)  The topics attribute has been replaced by Repository.get_topics(). To reduce user confusion, delete the attribute.  Fixes #1504",
            "correct Repository.stargazers_count return type to int (#1513)  It appears this was a type annotation typo, as the type of the stargazers_count property has been int for a long time.",
            "Add create_repository_dispatch to typing files (#1502)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test.",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "pyproject.toml",
        "commits": [
            "Merge `Repository.pyi` back to source (#2749)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)"
        ]
    },
    {
        "fileName": "tests/Repository.py",
        "commits": [
            "Merge `Repository.pyi` back to source (#2749)",
            "Add `license` attribute to `Repository` (#2721)",
            "Add missing attributes to `Repository`  (#2742)",
            "Search Workflows by Name (#2711)",
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Add support for repo and org level actions variables (#2580)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "Add allow_auto_merge support to Repository (#2477)  Co-authored-by: Glenn McDonald <testworksau@users.noreply.github.com>",
            "Add allow_update_branch option to Organization (#2465)",
            "feat: add allow_forking to Repository (#2380)  * chore(dependency): flake8 has moved to github  * feat: add allow_forking to Repository  * chore: linting  Co-authored-by: hussaiia <ibrahim.hussaini@cba.com.au>",
            "Add code scanning alerts (#2227)",
            "Add support for repository autolink references (#2016)",
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Improve signature of Repository.create_repo (#2118)  The docstring stated that `\"*\"` and `\"none\"` were valid values for the organization, but neither was actually supported (unless your organization was called `\"none\"`).  Remove the misleading information from the docstring, and add support for passing in an actual `Organization` object, for better typing and reliability properties.  Fixes #2116",
            "Add Repository.rename_branch method (#2089)  The GitHub API exposes an endpoint to rename a branch, so we should support calling it. Sadly, there is not enough information to add that method to the Branch class, so expose it in the Repository object.  Fixes #1901",
            "Adding attributes \"maintain\" and \"triage\" to class \"Permissions\" (#1810)  * Adding attributes \"maintain\" and \"triage\" to class \"github.Permissions.Permissions\"  * Fix for failed test due to extended attribute list  * Adding new simplistic test case for class Permissions  Fixes #1809",
            "Add support for deleting repository secrets (#1868)  When a previous commit added support for creating secrets on repository objects, support was not added to also remove them. Since the GitHub API does support that, add a method to do so.",
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Remove Repository.topics (#1505)  The topics attribute has been replaced by Repository.get_topics(). To reduce user confusion, delete the attribute.  Fixes #1504",
            "Add support for Workflows (#1496)  To start supporting GitHub Actions, add the first part of that, Workflow, which encapsulates a workflow over the API, along with two methods on Repository to query them.",
            "List matching references (#1471)",
            "Add create_repository_dispatch (#1449)",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test.",
            "Split up Repository.testStatistics (#1440)  The testStatistics testcase takes over ten seconds to run on my laptop, and it does an awful lot of work. Split up the disparate parts into seperate testcases.",
            "Add Deployments API (#1424)  Add a new class, Deployment to describe a deployment performed utilising GitHub. Add three methods onto Repository to list them and create them.  Fixes #1117",
            "Assert on changed Repository attributes (#1390)  To increase code coverage, assert on more attributes of Repository during the testEditWithAllArguments testcase.",
            "Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge",
            "Search repo issues by string label (#1379)  * Allow use of strings for labels in Repository.get_issues  * Fix unittests  * Update docstring  * Removed brackets from \"list of...\"",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Run black and isort to prepare for release (#1328)  Run black and isort over github/*py and tests/*py to prepare for a new release.",
            "Allow sha=None for InputGitTreeElement (#1327)  InputGitTreeElement is used to build tree objects for Repository.create_git_tree(). However, the GitHub API allows passing sha=null to delete a file, which we don't allow. Extend the checking in InputGitTreeElement to also allow None, and add a test for good measure.  Fixes #1318",
            "black",
            "Apply black to whole codebase (#1303)",
            "Support for create_fork (#1306)  * Support for create_fork  http://developer.github.com/v3/repos/forks  * Add test case for create_fork  * Add param doc and fix extra line  * Specify the organization to increase line coverage  * Update test data  * Add type assert for organization param",
            "Encode content for {create,update}_file (#1267)  If a byte object (for Python 3) was passed into either create_file or update_file, it was attempted to be co-erced into a bytearray, which failed. Check for encoded content before we encode it into bytes and then base64 encode it.  Fixes #1266",
            "Drop use of assertEquals (#1194)  TestCase.assertEquals is deprecated, at least in modern Python 3, so which to assertEqual, which is used everywhere else.",
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add Repository methods for pending invitations (#1159)  Make a start on implementing more of the invitations API, by adding methods to Repository to list and remove pending invitations.  Closes #1120",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Handle a path of / in Repository.get_contents() (#1070)  The path requested in Repository.get_contents() is appended to the URL, so the root path should be requested with the empty string. If path is '/', set it to the empty string. Copy the replay data from the original test, since it is identical.  Drive-by renaming the test to include the missing 's'.  Closes #1059"
        ]
    },
    {
        "fileName": "github/Organization.py",
        "commits": [
            "Merge `github/Organization.pyi` back to source (#2744)",
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add support for repo and org level actions variables (#2580)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>",
            "Add allow_update_branch option to Organization (#2465)",
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Implement organization.cancel_invitation() (#2072)  Implement a new function cancel_invitation for github.Organization objects, allowing for cancellation of organization invitations.",
            "Add github actions secrets to org (#2006)  Add functionality to create and delete Secrets for Organizations.",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Added get_installations() to Organizations (#1695)  * Added get_installations() to Organizations  Fixes #1694",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test.",
            "Merge pull request #1437 from ahhda/create_org_project  Add support to create an organization project",
            "Add create project method and tests",
            "Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge",
            "Fix all but one sphinx warnings (#1346)  To hopefully correct our doc build, tidy up some of the warnings that sphinx complains about. The one remaining one is legitimate.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add two factor attributes on organizations (#1132)  * Add 2fa attribute on organizations  * Fix property name and test value",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Adding support for pending team invitations (#993)  * fixes issue#823  * Update GithubObject.py  * Added tests for Pending team invitations(Issue#823)   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>",
            "Fix assertion in add_to_members (#1146)  The role parameter is set to NotSet by default but the assertion only allowed str and unicode. So it would always fail. Add NotSet to the assertion to allow calling the function without a role.  Signed-off-by: Pascal Bach <pascal.bach@nextrem.ch>",
            "Add sorting capability to Organization.get_repos() (#1139)",
            "Add new Organization.get_team_by_slug method (#1144)  Add a new API call to Organization that allows fetching teams by slug.  Closes #1116",
            "Add description field when creating a new team (#1125)",
            "Fix Organization.add_to_members() role passing (#1039)  * Fix role passing  * Fix typo  * Fix another typo  * Move parameter to JSON payload  * Move parameter to JSON payload  * Add content type  * Add content type  * Double Quotes  * Double quotes",
            "Adding migration api wrapper (#899)  Closes #818",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card",
            "Implement Organization.invite_user (#880)  Utilize the API preview for the organization invite system to allow organization owners to invite outside colloborators either via passing in the user directly, or their email address.      Fixes #851",
            "Fix Organization display name",
            "Sync copyright header",
            "Add description to Organizations (#838)  As mentioned in https://developer.github.com/v3/orgs/, an organization also has a description. This PR adds this attribute to the `Organization` class, as well as modifies its `edit` method so that it's possible to update it.  I noticed too late the [`add_attribute.py` script](https://github.com/PyGithub/PyGithub/blob/8ae2bcb1e6f96beeec99fbbcf00f4af46bb38cde/scripts/add_attribute.py), so I did my modifications by hand, but I noticed that the output of the script and the style used for all the other attributes are different. I preferred the style that is prevalent in the file, rather than the output of the script.",
            "API outside collaborators (#533)  * API outside collaborators  * Include remaining to organization api calls.",
            "Add add_to_members() and remove_from_membership() (#741)  * Add methods add_to_members(), has_in_pending_members(), and remove_from_membership() methods to Organization class.  * Add scrubbed replay files used for testing  * More massaging of test data  * Fix URL to remove organization membership  * Remove `has_in_pending_members()` method",
            "Add team privacy parameter to create team (#702)  * Add team privacy and add additional parameter to test. Still requires replaydata  * Reorder parameters to not break existing code  * Update tests for #702",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add hook support for organizations (#729)  * Add hook support for organizations Specifically, the create_hook, get_hook, and get_hooks calls  * Added support for the edit and delete hook functions",
            "Added missing parameters for repo creation (#623)  * Added missing parameters to organisation repo creation  * team_id should already be an id not a team object  * Name arguments in the test  * Fixed assertion check  * Added missing parameters to user repo creation  * Fixed comments",
            "Support HTTP 302 redirect in Organization.has_in_members",
            "Add details of repo type for get_repos documentation  Taken from https://developer.github.com/v3/repos/#list-organization-repositories",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #334 from sbesson/org_members_filter_role  Add support for filter/role options in Organization.get_members()",
            "Add trailing underscore to filter_ and use {} as the default dict",
            "Add support for filter/role options in Organization.get_members()",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update Team.py",
            "Update Repository.py",
            "Update Organization.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update Plan.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Update Notification",
            "Organization docstring",
            "Merge branch 'develop'",
            "AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Add auto_init and gitignore_template to create_repo (issue #106)  http://developer.github.com/changes/2012-9-28-auto-init-for-repositories/",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Specify a server url for Github.  Allows connection to GitHub Enterprise installs on local URLs.",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Organization.pyi",
        "commits": [
            "Merge `github/Organization.pyi` back to source (#2744)",
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Add support for repo and org level actions variables (#2580)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>",
            "Fix CI (#2330)",
            "Implement organization.cancel_invitation() (#2072)  Implement a new function cancel_invitation for github.Organization objects, allowing for cancellation of organization invitations.",
            "Add github actions secrets to org (#2006)  Add functionality to create and delete Secrets for Organizations.",
            "Add type hint for Organization.create_project() (#2032)  Organization.create_project() did not have a type hint, add one, and a test case.",
            "Added get_installations() to Organizations (#1695)  * Added get_installations() to Organizations  Fixes #1694",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test.",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/PullRequest.py",
        "commits": [
            "Merge `PullRequest.pyi` back to source (#2743)",
            "Fix assertion creating pull request review comment (#2641)",
            "Fix assertion for subject_type in creating pull request review comment (#2642)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Publish version 2.0.0 (#2583)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Allow multiline comments in PullRequest (#2540)  - change deprecated parameter position to line - add a parameter to allow multiline comment: start_line - add a parameter to allow comment as suggestion: as_suggestion - add more missing parameters: side, start_side, in_reply_to, subject_type",
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`",
            "Speed up get requested reviewers and teams for pr (#2349)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "feat(pullrequest): add the rebaseable attribute (#1690)",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Add and handle the maintainer_can_modify attribute in PullRequest (#1465)",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>",
            "Don't transform completely in PullRequest.*assignees (#1428)  The two methods PullRequest.add_to_assignees() and PullRequest.remove_from_assignees() are special, in that they call POST/DELETE on the issue_url of the pull request, and then transform all their attributes based on what was returned. This has a number of effects, none of them any good for calling new methods on the same pull request object. Instead, only pull out the changed attribute and use that. Also change the returned URL for the POST call in the replay data to match what GitHub returns.  Fixes #1406",
            "Merge pull request #1427 from ahhda/list_draft_pull_request  Add draft attribute to PullRequest",
            "Add draft attribute, update test",
            "Add support to reply to a Pull request comment (#1374)  * Add create_review_comment_reply to PullRequest  * Add unit tests  * Add docs for comment_id param for create_review_comment_reply  * Update tests  * Fix pep8 styling issue  * Fix styling",
            "PullRequest.update_branch(): allow expected_head_sha to be empty (#1412)  * PullRequest.update_branch(): allow expected_head_sha to be empty  * PullRequest.testUpdateBranch(): test also with empty expected_head_sha  * Updated replay data for PullRequest.testUpdateBranch  * tox formatted changes",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Add support for update branch  (#1317)  * Add Support for PullRequest update-branch  * Add test case  * Fix test case  * Add test data record  * Update PullRequest.py  * Update PullRequest.py  * Support py2.7  * Assert response status is 202  * black + isort",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Correct URL for assignees on PRs (#1296)  The URL that was used for POST/DELETE when adding and removing assignees was the PR itself, when it should be the issue_url.  Fixes #1294",
            "Add assignee removal/addition support to PRs (#1241)  Add assignee removal/addition support to PRs Fixes #1109  Add test for new PR assignee functionality  Add record file  Addressed comments on #1016",
            "Code review bodies are optional in some cases. (#1169)  * Code review bodies are optional in some cases.  * Add test for approving PRs without body set.",
            "Fix PR review creation. (#1184)  Do not modify the attributes of a PR when creating a review.",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Adds `get_issue_events` to `PullRequest` object (#1154)  * Adds `get_issue_events` to `PullRequest` object  * Add unit test for  * Fix PullRequest.get_issue_events unit test  Use actual event ids...  * Fix missing import on PullRequest.  I wish the unit tests would run in Python3...  * Add PulReqeust.testGetIssueEvents ReplayData  * Updating replay data to use developer's personal credentials.",
            "[fix] the default vaule of 'PullRequest.create_review'`s commit param (#1058)  [fix] the default vaule of github.PullRequest.PullRequest.create_review`s input param commit.  In `POST /repos/:owner/:repo/pulls/:number/reviews`, 'commit_id' is not a necessary parameter.Reference [https://developer.github.com/v3/pulls/reviews/](https://developer.github.com/v3/pulls/reviews/)  Signed-off-by: MurphyZhao <d2014zjt@163.com>",
            "Add missing import to PullRequest (#1007)  PullRequest.get_review_comments() works with no arguments passed due to if short circuiting, but as soon as you pass since, you get an exception since datetime wasn't imported. Import it, and add a test case for good measure.  Closes #1004",
            "Line comments are not posted in create_review() (#909)  When create_review() is called with comments in the comments argument, they are not actually posted in the API call.",
            "Sync copyright header",
            "Fix incorrect formatting in docstrings (#816)",
            "Correct docstring for set_labels (#766)  Both Issue and PullRequest have a set_labels method whose docstring did not exactly describe the parameter, correct it.",
            "Re-work PullRequest reviewer request (#765)  Add create_review_request() and delete_review_request() methods to PullRequest, as well as renaming get_reviewer_requests() to get_review_requests() and cleaning up its return value to firstly respect teams, and secondly to cut out the middleman of PullRequestReviewerRequests, which has been removed.  Fixes #597",
            "PullRequest review methods no longer need black cats (#760)  The preview period of the PullRequest review API ended May 9, 2017 so remove the custom Accept headers for the relevant methods.",
            "Correct PullRequest.get_reviewer_requests() rtype (#761)  The return type of PullRequest.get_reviewer_requests() is a PaginatedList containing PullRequestReviewerRequest.",
            "Make use of issue_url in PullRequest (#755)  Clean up some of the issue methods in PullRequest to make use of the issue_url property, rather than chopping pieces off the URL to replace /pulls/ with /issues/.",
            "PullRequest labels should use Issues URL (#754)  The Github API docs for PullRequests say to make use of the Issues API to add, remove, set and query labels. This means that we need to make use of the issue_url property for the PullRequest, not its own URL.",
            "Support labels for PullRequests (#752)  PullRequests can also have labels attached to them, like Issues or Milestones. Extend PullRequest to also export them if they are present, as well as adding methods to add, remove and set labels.",
            "documentation: clarify semantics of get_comments (#743)",
            "Added Issue.as_pull_request() and PullReqest.as_issue() (#630)",
            "Add support for getting PR single review's comments. (#670)",
            "adding since to PR review comments get (#577)",
            "Added option to create review for Pull request (#662)  * Added option to create review for Pull request  * Fix tests",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Updated PullRequest reviewer request according to API changes (#690)  https://developer.github.com/changes/2018-01-24-end-thor-preview/",
            ":recycle: Fix all pep8 coding conventions",
            "Add support for changing PR head commit (#632)  * Add support for changing PR head commit  Signed-off-by: Thibault Jamet <tjamet@users.noreply.github.com>  * Add support for custom commit arguments  Add commit_title, merge_method and sha arguments to the pull request merge method  Signed-off-by: Thibault Jamet <tjamet@users.noreply.github.com>",
            "Merge pull request #538 from allevin/Add_Pull_Request_Reviews_Feature  Add Support for Pull Request Reviews feature",
            "Updates to API and changes to resolve testing issues.",
            "Add Support for Pull Request Reviews feature",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"assignees\" attribute to PullRequest object.",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update PullRequest.py",
            "Update NamedUser.py",
            "Update IssueComment.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update PulllRequestPart.py",
            "Fix PullRequestMergeStatus.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "PullRequest docstring",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge branch 'topic/PullRequest.assignee' into develop",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add 'assignee' attribute to PullRequest  It seems as though this may have been added to the github API and was not being included in the PullRequest object.",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Clarify issue comments and review comments on pull requests (issue #59)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/PullRequest.pyi",
        "commits": [
            "Merge `PullRequest.pyi` back to source (#2743)",
            "Set line length to 120 characters (#2599)",
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`",
            "Speed up get requested reviewers and teams for pr (#2349)",
            "Merge pull request #1733 from dubois/main  Fix #1731: Incorrect annotation",
            "Fix #1731: Incorrect annotation",
            "feat(pullrequest): add the rebaseable attribute (#1690)",
            "Add missing properties to PullRequest.pyi (#1577)  Two missing attributes were added to PullRequest.pyi",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/MainClass.py",
        "commits": [
            "Merge `MainClass.pyi` and `__init__.pyi` back to source (#2692)",
            "Close connections after use (#2724)",
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Publish version 2.0.0 (#2583)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits",
            "Retry retryable 403 (rate limit) (#2387)",
            "Release 1.59.0 (#2563)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Make `MainClass.get_app` return completed `GithubApp` when slug is given (#2543)  Fixes slug attribute to fetch app when not set. Loads app with slug lazily, fetch complete app without slug.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Cover all code paths in search_commits (#2087)  The search_commits method was only very lightly tested, meaning over half of it was not covered. Write another test case, covering all code paths.",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Use property decorator to improve typing compatibility (#1925)  As a property these functions are expected to be accessed without the private __get_ and __set_ functions, however while the functions are typed, the property is not, and mypy shows an attribute error.  As this codebase no-longer requires support for python versions without support for @property.setter(2.6?) this updates the functions to use decorators and updates the type files to reflect the attribute existence.",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Remove client_id/client_secret authentication (#1888)  Authenticating via client_id and client_secret is dangerous, since they appended to the query string, and can be easily seen from the URL.  client_id/client_secret have been deprecated since May 2020, and ignored by GitHub since late 2020, so it's high time they were removed.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Merge pull request #1818 from apahim/define_pool_size  Make requests pool_size configurable",
            "Enabling connetion pool_size definition  requests has a default connections pool of 10. Creating multiple threads will consume from that same pool, since the underlying implementation of the requests pool is a singletown.  Let's make the pool_size configurable, so clients can set the proper number for their use case when running multiple threads.  Signed-off-by: Amador Pahim <apahim@redhat.com>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Remove older MainClass.get_installation() (#1738)  There are two get_installation() methods in MainClass, with different arguments. get_installation(owner, repo) is documented and tested, and get_installation(id) is neither. Remove it to avoid confusion.",
            "Added a method for getting a user by their id (#1691)  * Added a method for getting a user by their id  * Added get_user_by_id to MainClass stubs  Fixes #1615",
            "Add initial support for Github Apps. (#1631)  * Add initial support for Github Apps.  Needed for #1621",
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "More precise typing for MainClass.get_user() (#1575)  Use typing.overload for MainClass.get_user() since it can return two disparate types. Correct the docstring for it, as well as locking down Sphinx to <3 due to built docs issue and drive-by link correction.  Fixes #1550",
            "Remove \"api_preview\" parameter from type stubs and docstrings (#1559)",
            "Raise a FutureWarning on use of client_{id,secret} (#1506)  client_id and client_secret are sent to GitHub encoded on the query string, which GitHub has firmly deprecated, so much so as to email people who are doing so. To discourage its use, raise a FutureWarning if they are specified.  Fixes #1500",
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057",
            "Add OAuth support for GitHub applications  Create the ApplicationOAuth class which is responsible for handling a GitHub application's OAuth authorization process.",
            "Ability to retrieve public events (#1481)",
            "Correct typos found with codespell (#1467)  Correct misspellings and typos located using the codespell tool. Add codespell to pre-commit to avoid further regressions.  Fixes #1459",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Remove API preview parameter (#1325)  The API preview flag for both MainClass and Requester was the last hard-coded custom header, and it seems to not be relevant since mid-2015. Remove it, if any users are using it, they shouldn't be. Its code path was also entirely untested.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Support non-default URLs in GithubIntegration (#1229)  The get_installation() method of GithubIntegration was hardcoded to always use the default URL of api.github.com, making it impossible to fetch the installation of an GitHub Enterprise installation.",
            "Fix redundant int checks (#1226)",
            "Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Correct return type of MainClass.get_organizations (#1179)  The doc string and the code disagreed about the return type of MainClass.get_organizations(), correct the code, which was incorrect.  Fixes #1177",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Add support for custom base_url in GithubIntegration class (#1093)  * Add support for custom base_url in GithubIntegration  * Fix non default argument issue",
            "GithubIntegration: enable getting installation (#1135)  Signed-off-by: Tomas Tomecek <ttomecek@redhat.com>",
            "fixes #1106 for GitHub Enterprise API (#1110)",
            "Use non-deprecated path for creating GitHub App access tokens (#1086)  /installations/<installation_id>/access_tokens was deprecated as of https://developer.github.com/changes/2018-08-16-renaming-and-deprecation-of-github-app-installation-access-token-route/",
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860",
            "Remove status API, closes #1080",
            "provide option to extend expiration of jwt token (#1068)  supply optional parameter for `create_jwt` method",
            "resolves #1023 (#1042)  resolves #1023",
            "fix request got an unexpected keyword argument body (#1012)  Resolves #1010",
            "Drop httplib for requests to finish work of #664 (#998)  #664 got rid of most of httplib and replaced it with requests. This is the last place it was used. It makes a more coherent code base I think.  Tests are ok locally.",
            "Add a Topic object to cover search_topics (#959)  The return value of MainClass.search_topics() was a paginated list of Repository, which is incorrect. Add a Topic class to encapuslate what is returned.  Fixes #929",
            "Add support for JWT authentication (#948)  APIs such as https://developer.github.com/v3/apps/#find-organization-installation use a JWT for authentication. Adding support for JWT auth.",
            "Add highlight search to search_code function (#925)  * :sparkles: add highlight search to search_code function  * :white_check_mark: add highlighting search code tests",
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do.",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card",
            "Feature: Search By Topics (#893)",
            "Adding support for search/graphql rate limit, fixes #553",
            "Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353",
            "Refactor common header constants and custom media type",
            "Sync copyright header",
            "Fix github API requests after asset upload (#771)  In the old code the self.__hostname would be overwritten with uploads.github.com but it could not be correctly re-set to api.github.com after completing the upload Create a separate connection if hostname or port differ in requestBlobAndCheck  in the end this became quite a large overhaul, to also make this change generic for e.g. connecting to status.github.com and similar methods  ~~not sure if tests need (more) updating, if so I will update the PR accordingly~~",
            "increase default timeout to be > github request timeout (#793)  * increase default timeout to 15s  * Update MainClass.py",
            "Add ability to skip SSL verify from requests (#758)",
            "Add get_organizations() (#748)  * Add get_organizations()  * Add unit tests for get_organizations",
            "Implement License API (#734)  * Implement License API  * Update copyright",
            "Depreciate legacy search API",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Finished search_commits PR (#727)  * Added support for newer commit search API endpoint  * Added tests for new commit search method on main Github class  * Fixed sort parameter of search_commits",
            "Decode jwt bytes object in Python 3 (#633)",
            "added repository collaborator invitation",
            "switch to pyjwt, python-jose is not secure",
            "Merge pull request #519 from PyGithub/integrations-installation  adding support for the integrations installation endpoint",
            "adding support for the integrations installation endpoint",
            "Merge pull request #449 from PyGithub/integrations  GitHub integrations support",
            "adds GitHub integrations",
            "update doc url everywhere (#420)",
            "Merge pull request #343 from umeboshi2/master  support long integers in get_repo",
            "support long integers in get_repo",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #305 from Jucyio/develop  Add support to create Repository objects lazily in MainClass.",
            "Add support to create Repository objects lazily in MainClass.  This lets users do the following without issuing an unnecessary request:  issues_of_my_repository = g.get_repo('PyGithub/PyGithub').get_issues()  Since the GithubObject layer handles laziness transparently, lazy loading is enabled by default, and can be disabled via the `lazy` kwarg. This does not affect any test except tests that pertain to caching or laziness itself.",
            "Merge pull request #294 from dpocock/dpocock-accept  Allow access to preview versions of the server-side API",
            "Allow access to preview versions of the server-side API",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Acknowledge some lack of test coverage",
            "Merge branch 'develop' of https://github.com/tylertreat/PyGithub into develop",
            "Implement support for getting repo by id  This allows the Github class to retrieve repos by either their full name or id. If the user passes in an id for a repo which doesn't exist or in which they don't have sufficient permissions, an UnknownObjectException will be raised. This addresses issue #245.",
            "Fix urlencoding for search (see #237)  Parameters are encoded in Requester => simply remove urllib.quote Path needs to be encoded => change to urllib.quote_plus as in #237",
            "Merge branch 'fix_search_quoting' of https://github.com/cro/PyGithub into pr/237",
            "Change quote to quote_plus and avoid double-escaping some problematic characters.",
            "Fix doc (#224)",
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs",
            "Add code search  Code search results are content resources with an embedded repository. The \"content\" and \"encoding\" attributes aren't returned and require completion.",
            "Add issue search  Qualifiers can be added via keyword args in order to keep the method uncluttered. Qualifiers could also be given in the query string directly.",
            "Add user search  Qualifiers can be added via keyword args in order to keep the method uncluttered. Qualifiers could also be given in the query string directly.",
            "Add repository search  Qualifiers can be added via keyword args in order to keep the method uncluttered. Qualifiers could also be given in the query string directly.",
            "Add initial version of getemojis",
            "Merge branch 'develop'",
            "Github.get_hook (#196)",
            "Merge branch 'develop'",
            "Small updates of doc",
            "Add many missing attributes",
            "Github.get_rate_limit",
            "Merge branch 'topic/ApiStatus' into develop",
            "Get status of Github API (#188)",
            "Add default parameters to greatly reduce code redoundancy",
            "Small fixes and todos",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Implement object persistence  This follows my proposal for #193. Largely inspired by AKFish's work.",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Github.get_repos (to get all public repositories)",
            "Merge branch 'develop'",
            "Run compare_to_api_ref_doc.py",
            "Fix copyrights (#181 #182 #184 #186 #187)",
            "Update copyright information",
            "Update Repository.py",
            "Update Organization.py",
            "Update NamedUser.py",
            "Update Gist*.py",
            "Update AuthenticatedUser.py",
            "Update HookDescription.py.",
            "Update GitignoreTemplate.py",
            "Merge branch 'topic/ImproveRateLimiting' into develop",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Minor enhancements to rate limiting information  If rate limiting information hasn't been retrieved already, it will be checked rather than just assuming 5000 requests remaining of 5000.  Add an additional attribute `rate_limiting_resettime` to reflect github's new X-RateLimit-Reset header. This integer value is a unix timestamp.  RateLimiting unit test updated accordingly.",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Implement `GET /users` (issue #173)",
            "Small fixes in doc",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Added default user agent.",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Fix doc for raw_data (issue #144)",
            "Fix doc of properties of class Github",
            "Merge branch 'topic/Notifications' into develop",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Fix doc",
            "Move get_notification(s) to AuthenticatedUser (pull #148)",
            "Remove debug print (pull #148)",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Add a way to create an object from raw data (Issue #144)",
            "Merge branch 'topic/PaginatedListPerPage' into develop",
            "Add Github.per_page to tweak PaginatedList (Issue #145)",
            "Merge branch 'topic/FixPythonVersions' into develop",
            "Avoid confusion between github/ and Github.py on case-insensitive file systems (#143)"
        ]
    },
    {
        "fileName": "github/MainClass.pyi",
        "commits": [
            "Merge `MainClass.pyi` and `__init__.pyi` back to source (#2692)",
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits",
            "Retry retryable 403 (rate limit) (#2387)",
            "Add type stub for MainClass.get_project_column (#2502)  Co-Authored: Attila Dulovics <dulovicsattila@gmail.com>",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add retry and pool_size to typing (#2151)",
            "Fix CI (#2330)",
            "Use property decorator to improve typing compatibility (#1925)  As a property these functions are expected to be accessed without the private __get_ and __set_ functions, however while the functions are typed, the property is not, and mypy shows an attribute error.  As this codebase no-longer requires support for python versions without support for @property.setter(2.6?) this updates the functions to use decorators and updates the type files to reflect the attribute existence.",
            "Added a method for getting a user by their id (#1691)  * Added a method for getting a user by their id  * Added get_user_by_id to MainClass stubs  Fixes #1615",
            "Correct **kwargs typing for search_* (#1636)  It turns out typing for **kwargs is always Dict[str, Type], so only the type is required.  Fixes #1633",
            "Fix type stub for MainClass.get_user (#1637)  -   Add `login` arg default value to stub to match source",
            "More precise typing for MainClass.get_user() (#1575)  Use typing.overload for MainClass.get_user() since it can return two disparate types. Correct the docstring for it, as well as locking down Sphinx to <3 due to built docs issue and drive-by link correction.  Fixes #1550",
            "Remove \"api_preview\" parameter from type stubs and docstrings (#1559)",
            "Small improvements to typing (#1517)  Work through some of the errors when running mypy with --strict.",
            "Improve type signature for create_from_raw_data (#1503)  Previously you could call it only on Repository or NamedUser. Now you can call it with any GithubObject subclass -- and the type is carried through to the return value.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Ability to retrieve public events (#1481)",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/__init__.py",
        "commits": [
            "Merge `MainClass.pyi` and `__init__.pyi` back to source (#2692)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Retry retryable 403 (rate limit) (#2387)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Raise error on unsupported redirects, log supported redirects (#2524)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Fix all type issues flagged by mypy (#1484)",
            "Correct typos found with codespell (#1467)  Correct misspellings and typos located using the codespell tool. Add codespell to pre-commit to avoid further regressions.  Fixes #1459",
            "Export IncompletableObject in the github namespace (#1450)  When IncompletableObject was added, it was only added to GithubException, and not imported directly into the github namespace like other exceptions. Correct that, and clean up the resultant now unrequired import.",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Force absolute import, fixes #314",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #529 from sharkykh/patch-1  Import missing exception",
            "Import missing exception  TwoFactorException was missing on GithubException import line",
            "Merge pull request #449 from PyGithub/integrations  GitHub integrations support",
            "adds GitHub integrations",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Add two new types of exceptions (issue #152)",
            "Merge branch 'topic/SpecificExceptions' into develop",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Raise a specific exception for non-existing objects (issue #152)",
            "Raise a specific exception for bad credentials (issue #152)",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Document `#pragma no cover`s (Issue #154)",
            "Fix doc for raw_data (issue #144)",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/FixPythonVersions' into develop",
            "Avoid confusion between github/ and Github.py on case-insensitive file systems (#143)",
            "Merge branch 'develop'",
            "Change home page",
            "Improve",
            "Fix tests and some doc",
            "Improve docs",
            "Improve",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Merge branch 'develop'",
            "Follow pep8",
            "Improve logging (related to #88)",
            "Merge branch 'topic/Logging' into develop (pull #88)",
            "Test the logging facility",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "First integration test"
        ]
    },
    {
        "fileName": "github/__init__.pyi",
        "commits": [
            "Merge `MainClass.pyi` and `__init__.pyi` back to source (#2692)",
            "Retry retryable 403 (rate limit) (#2387)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490"
        ]
    },
    {
        "fileName": "github/Branch.py",
        "commits": [
            "Make Branch.edit_* functions return objects (#2748)",
            "fix required_conversation_resolution assertion (#2715)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge `Branch` type stubs back to source (#2571)  Introduces new helper methods `is_defined`, `is_undefined`, `is_optional`, `is_optional_list` that is going to simplify input assertions in all our methods.  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Fix `Branch.bypass_pull_request_allowances` failing with \"nil is not an object\" (#2535)  Signed-off-by: Thomas Devoogdt <thomas@devoogdt.com>",
            "Fix broken urls in docstrings (#2393)",
            "Add missing attributes to Branch (#2512)  Co-authored-by: Juan Manuel \"Kang\" Perez <devel@kangmak.es>",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Remove unneeded duplicate string checks in Branch (#1524)  There were multiple calls checking if an element of a list was a string or a string -- I suspect this pre-dates use of six in the code base, but let's clean it up.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Fix Branch's push restriction API (#1290)  The current API for changing user and teams push restrictions is brittle, and flat out incorrect when it comes to adding members. Break the API, but replace it with one that is correct.  Co-Authored-By: Jonas Maurus <jonas-github@maurus.net>",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Added support for required signatures on protected branches (#939)  Wraps the parts of the branch protection API that allows the user to require signed commits on a branch. New methods are : * Branch.get_required_signatures : returns true if signed commits are required * Branch.add_required_signatures : adds the requirements for signed commits on a branch * Branch.remove_required_signatures : removes the requirement for signed commits on a branch  It uses the API provided on this page : https://developer.github.com/v3/repos/branches/  Since this feature is in [preview](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures/) I pass the 'Accept application/vnd.github.zzzax-preview+json' header to each request.",
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Improve Branch Protection function docstrings (#887)  The docstrings for the edit methods for portions of Branch Protection did not document their arguments and types, add them.",
            "Sync copyright header",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update Commit.py and GitCommit.py",
            "Update Branch.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Update branch (with anchor)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "tests/Framework.py",
        "commits": [
            "Close replay test data file silently when test is failing already (#2747)",
            "CI: Improve ruff DX (#2667)",
            "Set line length to 120 characters (#2599)",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits",
            "Retry retryable 403 (rate limit) (#2387)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Remove client_id/client_secret authentication (#1888)  Authenticating via client_id and client_secret is dangerous, since they appended to the query string, and can be easily seen from the URL.  client_id/client_secret have been deprecated since May 2020, and ignored by GitHub since late 2020, so it's high time they were removed.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Merge pull request #1818 from apahim/define_pool_size  Make requests pool_size configurable",
            "Enabling connetion pool_size definition  requests has a default connections pool of 10. Creating multiple threads will consume from that same pool, since the underlying implementation of the requests pool is a singletown.  Let's make the pool_size configurable, so clients can set the proper number for their use case when running multiple threads.  Signed-off-by: Amador Pahim <apahim@redhat.com>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>",
            "Use pytest to parametrize tests (#1438)  * Use pytest to parametrize tests  Use built-in pytest test case parametrization support over external 'parameterize' package.  The latter is not well maintained, and has known Python 3.8 failures unsolved since November 2019.  Since pytest fixtures are incompatible with unittest-style tests, rewrite the relevant test case to use pytest-style asserts.  This also makes the resulting code simpler, as we no longer have to pass TestCase to the helper classes.  * Refactor input cleaning in ReplayingConnection.__readNextRequest()",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Handle unicode strings when recording responses (#1253) (#1254)  * Handle unicode strings when recording responses (#1253)  * Add new test requirements  * Make requirement conditional  * Fix flake8 error  * Compare dict values without worrying about key order  * Improve readability",
            "Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "issue: add lock/unlock (#1107)  * issue: add lock/unlock  * tests: add test for issue lock/unlock  * tests: add lock/unlock sample data  * Fix tests, add locked and active_lock_reason   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.setUp.txt",
        "commits": [
            "Add `license` attribute to `Repository` (#2721)",
            "Add missing attributes to `Repository`  (#2742)",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test."
        ]
    },
    {
        "fileName": "github/CodeScanAlert.py",
        "commits": [
            "Merge `NamedUser.pyi` back to source (#2691)",
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/GithubObject.py",
        "commits": [
            "Merge `NamedUser.pyi` back to source (#2691)",
            "Merge `Gist` type stub back to source (#2655)",
            "Merge `StatsCodeFrequency` type stub back to source (#2638)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add `message` property to `GithubException` (#2591)",
            "Merge `Issue.pyi` back to source (#2568)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Merge `Branch` type stubs back to source (#2571)  Introduces new helper methods `is_defined`, `is_undefined`, `is_optional`, `is_optional_list` that is going to simplify input assertions in all our methods.  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Publish version 2.0.0 (#2583)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Add support for new RepositoryAdvisories API :tada: (#2483)",
            "Implement hash for CompletableGithubObject (#1922)  Since CompletableGithubObject already uses its URL attribute to implement equality, extend it to also use that attribute for hashing.  Fixes #1826",
            "Export headers in GithubException (#1887)  Since the headers that led to an exception are also useful, firstly pass them into the constructor, and then export them in a property. Test one specific use case to make sure of coverage.  Fixes #1814",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Allow GithubObject.update() to be passed headers (#1300)  SourceImport.update() is really GithubObject.update(), which just calls GET on the object's URL. Refetching a source import requires an additional header, so change GithubObject.update() to pass any it is given, and add a test for SourceImport.update()  Fixes #1297",
            "Expand Topic class and add test coverage (#1252)  * Expand Topic class and add test coverage  * Add test coverage for Topic properties  * Fix misspelling in comment",
            "Add an IncompletableObject exception (#1227)  If a returned object from GitHub does not include an URL, that object can not be completed, and used to fail with an obscure traceback saying NoneType has no method startswith. Check for this, and raise IncompletableObject instead.",
            "Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods.",
            "Remove some uses of atLeastPython3 (#1191)  There are a number of call sites that would behave differently depending on Python 2 or 3. A fair amount of them are left over from Python 3.2 or Python 2.6 were the current versions, and it was much harder to write compatible code for both versions. Happily, that is now in the past, so refactor some of them out.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Adding migration api wrapper (#899)  Closes #818",
            "Add highlight search to search_code function (#925)  * :sparkles: add highlight search to search_code function  * :white_check_mark: add highlighting search code tests",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #495 from sjcorbett/fix/githubobject-repr  Encode GithubObject repr values in utf-8",
            "Encode GithubObject repr values in utf-8 when using Python2",
            "Merge pull request #475 from jwilk/spelling  Fix typo in a constant",
            "Fix typo in a constant",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #249 from lurch/patch-1  documentation typos",
            "documentation typos",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Finish .../stats/... (#203)",
            "Implement equality comparison of CompletableGithubObject (#201)",
            "Acknowledge lack of test coverage in the old Download API",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)",
            "Factorize",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Implement object persistence  This follows my proposal for #193. Largely inspired by AKFish's work.",
            "Move method update to CompletableGithubObject",
            "#193: Fix test coverage",
            "#193: Add a param to Requester.requestXxx for request headers",
            "#193: Add remarks",
            "#193: Don't use a try-except for a usual execution flow in GithubObject.update  (and factorize assignment of headers in _storeAndUseAttributes, as done for rawData)",
            "Fix remarks on #189 to #193",
            "Review of #189: pep8, copyrights, style, remarks  For remarks, run: git grep \"#189\" They are only my first thoughts while reviewing this pull request, and should be reviewed themselves.",
            "Review of #189: use dict.get  http://docs.python.org/2/library/stdtypes.html#dict.get",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Add NotModifiedException class",
            "Add update() method",
            "Implement data persistence",
            "Merge branch 'develop'",
            "Enable debug in TestCase",
            "Add debug / test mechanism",
            "Update copyright information",
            "Clean up",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Clean up. NonCompletableGithubObject refactoring resolved.",
            "Change NonCompletableGithubObject without breaking build.",
            "Change GithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Slightly improve coverage :-D",
            "Fix doc for raw_data (issue #144)",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Expose raw data of objects (Issue #144)",
            "Merge branch 'develop'",
            "Fix pep8 and coverage",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Fix lazy completion!!! (issue #139)",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Fix",
            "Update generateDocstrings.py",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Add __repr__ to _NotSetType  We don't want \"<github.GithubObject._NotSetType instance at 0x00000000037B1A48>\" in our generated documentation.",
            "Add a temporary script to create docstrings (help for issue #82)",
            "dos2unix, chmod +x",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414",
            "Add tests about issue #54, according to comments by @bilderbuchi",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Test more exceptions",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'develop'",
            "Merge branch 'topic/FixBaseUrl' into develop",
            "Fix bug: _baseUrl is now a method  This handles modification of attributes creating the base url",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/DocumentationGeneration' into develop",
            "Improve documentation generation",
            "Improve documentation generation",
            "Improve documentation generation",
            "Improve documentation generation",
            "Experiment with auto-documentation",
            "Merge branch 'topic/FinishRepository' into develop",
            "Repository.get_languages",
            "Merge branch 'topic/Refactor' into develop",
            "SeveralElementsAddable and SeveralElementsRemovable",
            "Rename",
            "Reorganize",
            "Refactor",
            "Reorganize",
            "Rename",
            "Reorganize",
            "Remove useless ObjectGetter  It was replaced by ListOfObjects with ElementGetable some time ago",
            "Naming",
            "Refactor attribute definition",
            "Merge branch 'topic/AddIssues' into develop",
            "Issue.xxx_labels",
            "Repository issues",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/ModularLists' into develop",
            "ListOfObjects -> ListAttribute",
            "Remove ListOfReferences",
            "Refactor unit-tests",
            "Remove default ListGetable capacity from lists",
            "Lists with ElementGetable capacity",
            "Refactor",
            "Refactor",
            "Refactor",
            "Refactor",
            "Refactor",
            "Todos",
            "Merge branch 'topic/CreateWithCheckedPositionalArguments' into develop",
            "Improve arguments checking for create_xxx and edit",
            "Merge branch 'topic/GetObjectFromIdentity' into develop",
            "Implement Owner.get_repo as an ObjectGetter",
            "ObjectGetter",
            "Fix default value",
            "Small refactoring",
            "Add type parameter to get_repos",
            "Improve coverage, fix bugs",
            "Refactor, improve test coverage",
            "Add unit tests for requests",
            "Rewrite asserts",
            "create_repo -> create_repo",
            "ListOfObjects",
            "MethodFromCallable",
            "Refactor",
            "Code reordering",
            "dos2unix",
            "Rework naming",
            "Refactoring attribute policies - step 4",
            "Refactoring attribute policies - step 3",
            "Refactoring attribute policies - step 2",
            "Refactoring attribute policies - step 1",
            "Refactor",
            "Implement has_in_ for extended list attributes",
            "add_, remove_ -> add_to_, remove_from_",
            "AuthenticatedUser.add_following and .remove_following",
            "Use status requests for DELETE",
            "Use a real identity attribute instead of ugly hack",
            "Prepare for requests interrested only in headers",
            "PUT and DELETE list elements",
            "User.get_orgs",
            "Remove debug print",
            "Implement extended scalar attribute",
            "Small refactoring",
            "Implement list of objects as attributes",
            "Improve dir( GithubObject )",
            "Privatize Github.rawRequest",
            "Use real base url",
            "Delete objects",
            "Refactor + typo",
            "Acknowledge attributes returned by PATH",
            "Implement checks in edit",
            "On the way to edit-able objects",
            "Test non-lazy construction",
            "Remember that some values are not fetchable",
            "Fetch attribute values",
            "Handle simple scalar attributes in constructor",
            "Comeback of GithubObject",
            "First skeleton"
        ]
    },
    {
        "fileName": "github/NamedUser.py",
        "commits": [
            "Merge `NamedUser.pyi` back to source (#2691)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Adds the 'twitter_username' attribute to NamedUser. (#1585)  * Adds the 'twitter_username' attribute to NamedUser.",
            "Add list projects support, update tests (#1431)",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Correct API for NamedUser.get_organization_membership (#1277)  NamedUser.get_organization_membership() was calling the API method for fetching the currently authenticated user only, which is incorrect. The method was not tested directly, so add tests.  Furthermore, Membership had some errors which had slipped through review, so correct them.  Sadly, this is an API break, since passing the organization as an int made no sense in this case.  Fixes #1276",
            "Implemented user organization membership. Added test case. (#1237)  1. Added AuthenticatedUser:get_organization_membership 2. Added NamedUser:get_organization_membership 3. Added related tests as GitMembership and related replay data",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Adding support for pending team invitations (#993)  * fixes issue#823  * Update GithubObject.py  * Added tests for Pending team invitations(Issue#823)   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>",
            "user.node_id missing (#1001)  'node_id' attribute was missing. Hence added the attribute using add_attribute script in AuthorizedUser  and NamedUser classes.  This fixes issue #999 .",
            "adding suspended_at property to NamedUSer (#922)",
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do.",
            "Sync copyright header",
            "Revert \"Remove NamedUser.contributions (#774)\" (#865)  This reverts commit a519e4675a911a3f20f1ad197cbbbb14bdd1842d.  NamedUser.contributions can be populated, so we should fill in the data.  Fixes #850",
            "Remove NamedUser.contributions (#774)  The contributions attribute is no longer sent by Github for NamedUsers, so remove the attribute.  Fixes #443",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Collaborator site admin (#719)  * Add admin_user property to NamedUser  * Fix type from string to bool for site_admin property  * Add a test for site_admin",
            "Add __eq__ and __hash__ to NamedUser (#706)  * Add __eq__ and __hash__ to NamedUser  * Remove extra outer brackets from __eq__ in NamedUser  * Add unit tests for __eq__ and __hash__  * Remove redundant brackets in __eq__ : NamedUser",
            "Add permissions field to NamedUser (#676)",
            ":sparkles: Add new params for /users/:user/repos endpoint",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Remove Repository.create_download and NamedUser.create_gist",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Small updates of doc",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "NamedUser.has_in_following",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update Repository.py",
            "Update NamedUser.py",
            "Update Gist*.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update Plan.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "NamedUser.get_keys (Issue #130)",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Specify a server url for Github.  Allows connection to GitHub Enterprise installs on local URLs.",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/NamedUser.pyi",
        "commits": [
            "Merge `NamedUser.pyi` back to source (#2691)",
            "Set line length to 120 characters (#2599)",
            "Fix type of NamedUser.name (#2050)  The `name` attribute of a `NamedUser` is `None` if the user did not set a name in their GitHub profile, but this was not reflected in the type.",
            "Adds the 'twitter_username' attribute to NamedUser. (#1585)  * Adds the 'twitter_username' attribute to NamedUser.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Team.py",
        "commits": [
            "Merge `Team.pyi` back to source (#2690)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Fix broken urls in docstrings (#2393)",
            "Feat: Add `html_url` property in Team Class. (#1983)  Fixes: #1942",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Fix #1507: Add new Teams: Add or update team repository endpoint (#1509)  * Add new Team.update_team_repository()  * Mark Team.set_repo_permission() as deprecated   Fixes #1507",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Add method get_team_membership for user to Team  (#1658)  * - Add method get_team_membership for user  * add typing get_team_membership for member  Fixes #1657",
            "Add \"get_repo_permission\" to Team class (#1416)  * Add \"get_repo_permission\" to Team class  * second attempt: - accept repo name or repo object - return github.Permissions.Permissions object - try and following CONTRIBUTING.md better  * add missing import to tests patch replay data with permission data  * assert a specific permission rather than just the type  Fixes #1415",
            "Run black over the entire tree (#1386)  It's been a while since black was run over the entire tree, and since CI still doesn't check it, we can get behind.",
            "Added nested teams and parent (#1348)  * Added nested teams and parent  - Added github.Team.Team.get_teams() to get nested teams. - Added github.Team.Team.parent which points to the parent team.  Fixes #1337",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Add support for team discussions (#1246) (#1249)  * Add support for team discussions (#1246)  * Make a TeamDiscussion completeable",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Adding support for pending team invitations (#993)  * fixes issue#823  * Update GithubObject.py  * Added tests for Pending team invitations(Issue#823)   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>",
            "Sync copyright header",
            "Allow editing of Team descriptions (#839)  PR https://github.com/PyGithub/PyGithub/pull/753 added this property but forgot to make it editable. The current PR fixes this omission.",
            "Add remove_membership() method to Teams class (#807)  Per the Github v3 API [docs](https://developer.github.com/v3/teams/members/#deprecation-notice-2), the \"remove team member\" api is deprecated. This PR implements the new API call.  Deprecated API: ``` DELETE /teams/:team_id/members/:username ```  New API: ``` DELETE /teams/:team_id/memberships/:username ```  This PR also adds a `deprecation` notice to the docstring of the deprecated methods.",
            "Fix Team.description (#797)  fixes #796",
            "Add support for team privacy (#763)  Teams contain support for privacy, by being either closed, or secret. Export the string via a property, and allow editing it via the edit method.",
            "Team description added to Team.py (#753)  * team description added to Team.py  * minor correction on initAttributes",
            "Filter team members  by role (#491)  * Team: support filtering members by role  * Team: support adding membership with role",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Get organization from the team (#590)  * Get organization from the team  * Fix ReplayData for Team",
            "Add role parameter to Team.add_membership method (#638)",
            "Merge pull request #454 from mattjmorrison/add-team-repo-permissions  Add ability to set permission for team repo",
            "Add permission param documentation",
            "Add ability to set permission for team repo  https://developer.github.com/v3/orgs/teams/#add-or-update-team-repository",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #364 from tapilab/master  fix misspelling: https://github.com/PyGithub/PyGithub/issues/363",
            "fix misspelling: https://github.com/PyGithub/PyGithub/issues/363",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #284 from xorel/develop  Add team membership add call",
            "Add team membership call",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update Team.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Tag docstring",
            "Team docstring",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Team.pyi",
        "commits": [
            "Merge `Team.pyi` back to source (#2690)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Fix/types for repo topic team (#2341)  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Feat: Add `html_url` property in Team Class. (#1983)  Fixes: #1942",
            "Add method get_team_membership for user to Team  (#1658)  * - Add method get_team_membership for user  * add typing get_team_membership for member  Fixes #1657",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GithubIntegration.py",
        "commits": [
            "Merge `GithubIntegration.pyi` back to source (#2689)",
            "Close connections after use (#2724)",
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Set line length to 120 characters (#2599)",
            "Publish version 2.0.0 (#2583)",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits",
            "Release 1.59.0 (#2563)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Fix GithubIntegration using exiring jwt (#2460)",
            "Add expiration argument back to GithubIntegration.create_jwt (#2439)  * Add expiration argument back to create_jwt",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/GithubIntegration.pyi",
        "commits": [
            "Merge `GithubIntegration.pyi` back to source (#2689)",
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add expiration argument back to GithubIntegration.create_jwt (#2439)  * Add expiration argument back to create_jwt",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/GitRelease.py",
        "commits": [
            "Merge `GitRelease.pyi` back to source (#2688)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "Continue the PR #1899 (#2386)  * A property to access the `assets` field of release (#1898)  ... in order to avoid extra requests.  <https://github.com/PyGithub/PyGithub/issues/1898>  * Remove comment to comply the review  * Add tests for GitRelease.assets  ---------  Co-authored-by: green-green-avk <45503261+green-green-avk@users.noreply.github.com>",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140",
            "Correct typos found with codespell (#1467)  Correct misspellings and typos located using the codespell tool. Add codespell to pre-commit to avoid further regressions.  Fixes #1459",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Allow name to be specified for upload_asset (#1151)  GitRelease.upload_asset() calculates the name based on the filename, and doesn't allow it to be overridden. Add a new name argument that is used if it is set. Drive by changing the default of the content_type argument to NotSet.  Closes #1095",
            "Change type of GitRelease.author to NamedUser (#969)  Github's release object in the API response contains an `author` field having a value much more like a `NamedUser` but not `GitAuthor`.  e.g. https://api.github.com/repos/edhollandAL/PyGithub/releases/1210902  ``` {   \"id\": 1210902,   \"author\": {     \"login\": \"edhollandAL\",     \"id\": 11922660,     \"node_id\": \"MDQ6VXNlcjExOTIyNjYw\",     \"avatar_url\": \"https://avatars1.githubusercontent.com/u/11922660?v=4\",     \"gravatar_id\": \"\",     \"url\": \"https://api.github.com/users/edhollandAL\",     \"html_url\": \"https://github.com/edhollandAL\",     \"followers_url\": \"https://api.github.com/users/edhollandAL/followers\",     \"following_url\": \"https://api.github.com/users/edhollandAL/following{/other_user}\",     \"gists_url\": \"https://api.github.com/users/edhollandAL/gists{/gist_id}\",     \"starred_url\": \"https://api.github.com/users/edhollandAL/starred{/owner}{/repo}\",     \"subscriptions_url\": \"https://api.github.com/users/edhollandAL/subscriptions\",     \"organizations_url\": \"https://api.github.com/users/edhollandAL/orgs\",     \"repos_url\": \"https://api.github.com/users/edhollandAL/repos\",     \"events_url\": \"https://api.github.com/users/edhollandAL/events{/privacy}\",     \"received_events_url\": \"https://api.github.com/users/edhollandAL/received_events\",     \"type\": \"User\",     \"site_admin\": false   },   // (ignored) } ```",
            "Sync copyright header",
            "Add tag_name and target_commitish arguments to GitRelease.update_release (#834)  Fixes #833",
            "GitRelease methods documentation (#821)  Hi, here's my small contribution to the documentation in relation to #819   Few things: * the `delete_release` method always returns `True` so not sure if the return type is truly valid - potentially a bug * I've tried generating the documentation locally to check if formatting is ok but failed - is there a guide to it?   I followed the read the docs starter guide but that didn't seem to reflect the way it's done here",
            "Include target_commitish in GitRelease (#788)",
            "Remove some duplicate attributes introduced in #522",
            "added tarball_url, zipball_url, prerelease and draft property (#522)  * added tarball_url, zipball_url, prerelease and draft property to GitRelease  * Add tests for new attributes",
            "Apply fix_headers script to update copyright info",
            "Added target_commitish option to Repository.create_git_release() (#625)  * Added is_draft and is_prerelease property to GitRelease  * Added target_commitish option to Repository.create_git_release()  * Added test for Repository.create_git_release()  * Renamed attr of GitRelease: is_draft, is_prerelease -> draft, prerelease",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "make created_at/published_at attrs available for Release objects (#689)",
            ":recycle: Fix all pep8 coding conventions",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases",
            "Merge pull request #479 from ben-whitney/html_url_release  add html_url to GitRelease",
            "add html_url to GitRelease",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet"
        ]
    },
    {
        "fileName": "github/GitRelease.pyi",
        "commits": [
            "Merge `GitRelease.pyi` back to source (#2688)",
            "Continue the PR #1899 (#2386)  * A property to access the `assets` field of release (#1898)  ... in order to avoid extra requests.  <https://github.com/PyGithub/PyGithub/issues/1898>  * Remove comment to comply the review  * Add tests for GitRelease.assets  ---------  Co-authored-by: green-green-avk <45503261+green-green-avk@users.noreply.github.com>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Requester.py",
        "commits": [
            "Merge `GitRelease.pyi` back to source (#2688)",
            "Close connections after use (#2724)",
            "Suppress `requests` fallback to netrc, provide `github.Auth.Netrc` (#2739)",
            "Safely coerce responseHeaders to int (#2697)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Add `message` property to `GithubException` (#2591)",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits",
            "Retry retryable 403 (rate limit) (#2387)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Merge PaginatedList.pyi back to source (#2555)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Make Requester.__createException robust against missing message and body (#2159)",
            "Fix auth issues with `Installation.get_repos` (#2547)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Raise error on unsupported redirects, log supported redirects (#2524)",
            "Remove RLock from Requester (#2446)",
            "Merge pull request #2425 from bluek1te/master  Pass requester base URL to integration (#2420)",
            "pass requester base URL to integration (#2420)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Fix CI (#2330)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Do not transform requestHeaders when logging (#1965)  Requester.__log() sanitizes the headers of the request so that authentication details are not logged, but this has the side effect of meaning that future requests that use the same Requester object will fail. Usually, this is perfectly fine, since almost every method will only make one request -- where this falls down is when we make another after a redirect. Make a copy of the requestHeaders, and sanitize those.  Fixes #1959",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Re-raise the exception when failing to parse JSON (#1892)  Since GitHub has the bad manners to return bare strings for some API endpoints, one sharp edge has been that JSON decoding errors were masked since we wrap the string in a dictionary. However, this makes it difficult to debug malformed JSON in replay data, so re-raise the exception if the first character is a { or [ (IE, it's an object or list.)",
            "Remove client_id/client_secret authentication (#1888)  Authenticating via client_id and client_secret is dangerous, since they appended to the query string, and can be easily seen from the URL.  client_id/client_secret have been deprecated since May 2020, and ignored by GitHub since late 2020, so it's high time they were removed.",
            "Export headers in GithubException (#1887)  Since the headers that led to an exception are also useful, firstly pass them into the constructor, and then export them in a property. Test one specific use case to make sure of coverage.  Fixes #1814",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Merge pull request #1818 from apahim/define_pool_size  Make requests pool_size configurable",
            "Enabling connetion pool_size definition  requests has a default connections pool of 10. Creating multiple threads will consume from that same pool, since the underlying implementation of the requests pool is a singletown.  Let's make the pool_size configurable, so clients can set the proper number for their use case when running multiple threads.  Signed-off-by: Amador Pahim <apahim@redhat.com>",
            "Always define the session adapter  This represents no change of behaviour, but it enables us to set more options to the adapter.  Signed-off-by: Amador Pahim <apahim@redhat.com>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140",
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Add OAuth support for GitHub applications  Create the ApplicationOAuth class which is responsible for handling a GitHub application's OAuth authorization process.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Remove API preview parameter (#1325)  The API preview flag for both MainClass and Requester was the last hard-coded custom header, and it seems to not be relevant since mid-2015. Remove it, if any users are using it, they shouldn't be. Its code path was also entirely untested.",
            "Refactor Logging tests (#1315)  To stop skipping logging tests on Python 3, refactor them to mock out the logger and check arguments directly, rather than naively comparing strings. Allow a logger to be injected into Requester for this.",
            "Apply black to whole codebase (#1303)",
            "Correct header check for 2FA required (#1274)  Currently, we were checking for an uppercase header if GitHub was refusing our authentication because we didn't provide a token. Requests returns headers with all lowercase. Fix the const, and add a test for good measure.  Fixes #1273",
            "Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods.",
            "Remove some uses of atLeastPython3 (#1191)  There are a number of call sites that would behave differently depending on Python 2 or 3. A fair amount of them are left over from Python 3.2 or Python 2.6 were the current versions, and it was much harder to write compatible code for both versions. Happily, that is now in the past, so refactor some of them out.",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860",
            "Adding migration api wrapper (#899)  Closes #818",
            "Add support for JWT authentication (#948)  APIs such as https://developer.github.com/v3/apps/#find-organization-installation use a JWT for authentication. Adding support for JWT auth.",
            "Fix unable to trigger RateLimitExceededException. (#943)  I found when authorized, the ratelimit error message is different from unauthorized.  so i add this.  After studying hard with my 2b colleagues @AnYeMoWang , we finally realized how tests wrote.  \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38",
            "Fix handling of 301 redirects (#916)  Requester.__requestRaw() was handling 301 redirects by passing the full URL to itself, when it only expects a URL path, so parse out the path, and pass that in. Add a test for this behaviour.  Closes: #906",
            "Refactor common header constants and custom media type",
            "Sync copyright header",
            "Add allow_redirects option (#858)  Fixes #830  Latest release v1.40 has broken get_archive_link https://github.com/PyGithub/PyGithub/issues/830",
            "Handle HTTP 202 HEAD&GET with a retry (#791)  * Handle HTTP 202 Fixes #564 After some testing, it seems GitHub seems to be able to process the chrunching of statistics for every repository I tested in around 2 seconds. So a delay of around 5 seconds should be plenty to be very certain that the next try should succeed. Another option would be to put this value lower and possibly waste an extra retry on it.  * Only re-request data if HEAD or GET (those are 'safe') to e.g. avoid running a duplicate POST or PUT, that can change stuff on the server Using RFC 2616 and https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html as guideline  * Fix testStatistics  * change wait time to 2 secs",
            "Fix github API requests after asset upload (#771)  In the old code the self.__hostname would be overwritten with uploads.github.com but it could not be correctly re-set to api.github.com after completing the upload Create a separate connection if hostname or port differ in requestBlobAndCheck  in the end this became quite a large overhaul, to also make this change generic for e.g. connecting to status.github.com and similar methods  ~~not sure if tests need (more) updating, if so I will update the PR accordingly~~",
            "Fix Content-Length invalid headers exception (#787)",
            "Add ability to skip SSL verify from requests (#758)",
            "Use 'requests' instead of 'httplib' (#664)  * works (but tests fail)  * Refactor to use python requests rather than httplib  * add requests dependency in setup.py  * touch so travis-ci will run  * clean up some unused comments  * Handle HTTP vs HTTPS; handle custom base_url  * Use requests session  * Don't use a persistent session in tests (which don't use the real requests library)  * Use an older version of requests for python 3.2  Requests dropped support for Python 3.2 in the 2.10 series (though it didn't detect this until 2.11).  PyGithub probably doesn't need to support Python 3.2 at all; it's quite old, with negligably few users, but that should be addressed elsewhere.  * Revert \"Use an older version of requests for python 3.2\"  This reverts commit fb0367614f5413968eeab98f4094e710aa1bc2d1.  * Improve readability  * Update requirements.txt  * Disable custom proxy handling code (unneeded and broken); use requests'  * Remove comment and superflous code  * Fix iteritems() removal from Python3  * pin requests to 2.14.0 or greater in prep for no_proxy  * pin requests to 2.14.0 or greater in prep for no_proxy",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            ":recycle: Fix all pep8 coding conventions",
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases",
            "Merge pull request #462 from geex-arts/fix-rate-limit-exception  Fix diffrerent case",
            "Fix diffrerent case",
            "Merge pull request #451 from geex-arts/fix-redirects  Fix status check",
            "Fix status check",
            "Merge pull request #442 from jaredsmith/master  Properly handle HTTP Proxy authentication with Python 3",
            "Add missing space",
            "Properly handle HTTP Proxy authentication with Python 3",
            "update doc url everywhere (#420)",
            "Merge pull request #403 from mat128/handle_redirects  Follow redirects in the case of a 301 status code",
            "Follow redirects in the case of a 301 status code",
            "Merge pull request #309 from beugley/master  Connect through a proxy with authentication",
            "code improvement",
            "Get proxy info from http_proxy first, HTTP_PROXY second",
            "Connect through a proxy with authentication",
            "Merge pull request #294 from dpocock/dpocock-accept  Allow access to preview versions of the server-side API",
            "Merge pull request #288 from DevTable/master  Remove URL scheme assertion. Fixes #287.",
            "Allow access to preview versions of the server-side API",
            "Remove URL scheme assertion.  This part of the URL isn't used and can be wrong due to bugs in GitHub Enterprise.",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Acknowledge some lack of test coverage",
            "Merge branch 'develop'",
            "Merge branch 'pr220' into develop",
            "Integrate #220 (fix tests and pep8)",
            "Fix #216: handle 'Link' header  Headers with capitals are returned by http.client (replacing httplib in Python 3)",
            "Added onetime_password to create_authorization  github.AuthenticatedUser.create_authorization has been modified to support two-factor authentication. When two-factor authentication is enabled create_authorization will throw an TwoFactorException. The onetime password can be then be passed to create_authorization on a subsequent call.",
            "Merge branch 'develop'",
            "Acknowledge branch coverage lack",
            "Merge branch 'topic/ApiStatus' into develop",
            "Get status of Github API (#188)",
            "Add default parameters to greatly reduce code redoundancy",
            "Don't assume there is a 'message' field in case of error",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Move the DEBUG_ON_RESPONSE call to Requester.__requestEncode",
            "#193: Fix test coverage",
            "#193: Add a param to Requester.requestXxx for request headers",
            "#193: Add remarks",
            "#193: Don't use a try-except for a usual execution flow in GithubObject.update  (and factorize assignment of headers in _storeAndUseAttributes, as done for rawData)",
            "Fix remarks on #189 to #193",
            "Review of #189: pep8, copyrights, style, remarks  For remarks, run: git grep \"#189\" They are only my first thoughts while reviewing this pull request, and should be reviewed themselves.",
            "Review of #189: use dict.get  http://docs.python.org/2/library/stdtypes.html#dict.get",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Fix update",
            "Implement conditional request",
            "Handle response code 304",
            "Merge branch 'develop'",
            "Fix copyrights (#181 #182 #184 #186 #187)",
            "Enable debug in TestCase",
            "Add debug / test mechanism",
            "Merge branch 'topic/HandleNonJsonResponses' into develop",
            "Merge branch 'topic/ImproveRateLimiting' into develop",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Minor enhancements to rate limiting information  If rate limiting information hasn't been retrieved already, it will be checked rather than just assuming 5000 requests remaining of 5000.  Add an additional attribute `rate_limiting_resettime` to reflect github's new X-RateLimit-Reset header. This integer value is a unix timestamp.  RateLimiting unit test updated accordingly.",
            "Handle github api response that isn't valid json",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Add two new types of exceptions (issue #152)",
            "Merge branch 'develop'",
            "Small fixes in doc",
            "Fix pagination with secret-key authentication (issue #158)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fixed pep8",
            "Added default user agent.",
            "Merge branch 'topic/SpecificExceptions' into develop",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Raise a specific exception for non-existing objects (issue #152)",
            "Raise a specific exception for bad credentials (issue #152)",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Document `#pragma no cover`s (Issue #154)",
            "Remove branches for hypothetical unknown Authorization headers",
            "Improve test coverage a bit",
            "Fix authentication with Python 3 (Issue #153)",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/PaginatedListPerPage' into develop",
            "Add Github.per_page to tweak PaginatedList (Issue #145)",
            "Merge branch 'master' into develop",
            "Publish version 1.12.2",
            "Remove a deprecation warning",
            "Fix decoding on Python3 (bytes instead of str) (Issue #142)",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Conform to pep8",
            "Merge branch 'develop'",
            "Retrieve scopes for current oauth token from response headers (Issue #134)",
            "Refactor",
            "Remove useless Content-Length header",
            "Refactor: put form/multipart encoding in Requester  And remove my fucking credentials from git! (Password changed, btw)",
            "Rename methods in Requester",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "pep8 + readme",
            "Restore Python 2.5 and 2.6",
            "Small fixes => tests pass after 2to3",
            "Merge branch 'develop'",
            "Add a customizable User-Agent (issue #109)",
            "Merge branch 'topic/UnauthenticatedRateLimitedRequests' into develop",
            "Refactor Requester",
            "Refactor",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "added client_id and client_secret auth option",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Merge branch 'develop'",
            "Implement optional revert of #102 (issue #104)",
            "Merge branch 'develop'",
            "Improve logging (related to #88)",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/Logging' into develop (pull #88)",
            "Fix exception  As per commit f9dd406465a5a, some tests ran after Logging.testLogging fail with a unicode-related exception.",
            "Test the logging facility",
            "Log raw requests using Python logging module",
            "Merge branch 'develop'",
            "Work-around Github Enterprise bad URL (issue #80)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Support Python 2.5 again (issue #73)",
            "Small no-impact code improvements",
            "Merge branch 'develop'",
            "Merge branch 'topic/Timeout' into develop  Conflicts: \tgithub/Requester.py",
            "Remove duplicated default value",
            "Merge remote-tracking branch 'origin/topic/DeleteRepository' into develop",
            "Add timeout option",
            "Fix record/replay in test framework",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Cover custom base url in tests  (we still have to record/replay the protocol, host and port)",
            "Specify a server url for Github.  Allows connection to GitHub Enterprise installs on local URLs.",
            "Merge branch 'develop'",
            "Merge branch 'topic/Markdown' into develop",
            "Implement markdown rendering (Issue #56)",
            "This 'except' clause is covered only with Python 2.5",
            "Merge pull request #47 from pmuilu/master  Restore compatibility with Python 2.5",
            "Testing with Python 2.5",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Test more exceptions",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'develop'",
            "Merge branch 'topic/Authentication' into develop",
            "Implement the three authentication schemes",
            "Simplify",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Finaly do a poor implementation of Github.get_gists",
            "Remove todos, add them as github.com issues",
            "Merge branch 'develop'",
            "Merge branch 'topic/AddHooksAndEvents' into develop",
            "Fix and add integration tests about events",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Create a fork in integration tests",
            "Merge branch 'topic/FinishRepository' into develop",
            "Repository: tags, branches, commits  I had to rework pagination because it does not work as documented",
            "Merge branch 'topic/AddIssues' into develop",
            "Issue.xxx_labels",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/AddTeamObject' into develop",
            "Fix integration tests after rebase",
            "Use urllib.urlencode",
            "Refactor, improve test coverage",
            "Implement pagination",
            "Fix integration test",
            "Add parameters to url",
            "Extract Requester from Github"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testEditWithAllArguments.txt",
        "commits": [
            "Add missing attributes to `Repository`  (#2742)",
            "Add allow_auto_merge support to Repository (#2477)  Co-authored-by: Glenn McDonald <testworksau@users.noreply.github.com>",
            "Add allow_update_branch option to Organization (#2465)",
            "feat: add allow_forking to Repository (#2380)  * chore(dependency): flake8 has moved to github  * feat: add allow_forking to Repository  * chore: linting  Co-authored-by: hussaiia <ibrahim.hussaini@cba.com.au>",
            "Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge"
        ]
    },
    {
        "fileName": "github/Autolink.py",
        "commits": [
            "Add `is_alphanumeric` attribute to Autolink and `Repository.create_autolink` (#2630)",
            "Add Autolink API link (#2632)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add support for repository autolink references (#2016)"
        ]
    },
    {
        "fileName": "tests/Autolink.py",
        "commits": [
            "Add `is_alphanumeric` attribute to Autolink and `Repository.create_autolink` (#2630)",
            "Set line length to 120 characters (#2599)",
            "Add support for repository autolink references (#2016)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Autolink.setUp.txt",
        "commits": [
            "Add `is_alphanumeric` attribute to Autolink and `Repository.create_autolink` (#2630)",
            "Add support for repository autolink references (#2016)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreateAutolink.txt",
        "commits": [
            "Add `is_alphanumeric` attribute to Autolink and `Repository.create_autolink` (#2630)",
            "Add support for repository autolink references (#2016)"
        ]
    },
    {
        "fileName": "github/WorkflowJob.py",
        "commits": [
            "Merge `WorkflowJob` type stub back to source (#2653)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/WorkflowJob.pyi",
        "commits": [
            "Merge `WorkflowJob` type stub back to source (#2653)",
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/GistFile.py",
        "commits": [
            "Merge `GistFile` type stub back to source (#2651)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update Gist.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/GistFile.pyi",
        "commits": [
            "Merge `GistFile` type stub back to source (#2651)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "README.md",
        "commits": [
            "Close connections after use (#2724)",
            "Fix pip install command in README.md (#2731)",
            "Link to stable docs, update introduction in package used by pypi, move auth arg front (#2557)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "No longer show username and password examples (#1866)  With GitHub moving away from allowing authentication to the API using an username and password, update our documentation to remove it and rely on tokens. Perhaps we should link to how to create an API token, but that can be addressed later.  Fixes #1851",
            "Various Github Action improvement (#1610)",
            "Update Travis badge with Github Action badge",
            "Deprecate Gitter and add slack badge with auto invitation",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Update link to GitHub Enterprise in README (#1324)",
            "Apply black to whole codebase (#1303)",
            "Add code coverage (#1090)  * Add codecov to travis  * Add badge",
            "Add sphinx setup instruction",
            "HTTPS for readthedocs everywhere",
            "Add GHE simple sample",
            "Add a Gitter chat badge to README.md (#728)  * Add Gitter badge  * Update README.md",
            "Add codetriage badge",
            "Using latest version of doc for badge",
            "Use print() syntax in README (#681)  Since 2.7 supports this syntax as well, this will help not to confuse new people.",
            "Add PyPI badge and installation instructions to README (#682)",
            "Doc create instance from token (#667)",
            "Remove broken downloads badge (#644)  See https://github.com/badges/shields/issues/716",
            "Merge pull request #499 from gamefiend/qhm-docs  An easier to see link to the documentation in response to issue #480.",
            "Merge pull request #506 from jamesbroadhead/fix_readme  Fix README instructions",
            "Fix README instructions",
            "An easier to see link to the documentation in response to issue #480.",
            "update project files"
        ]
    },
    {
        "fileName": "doc/introduction.rst",
        "commits": [
            "Close connections after use (#2724)",
            "Link to stable docs, update introduction in package used by pypi, move auth arg front (#2557)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add crypto extras to pyjwt, which pulls in cryptogaphy package (#2443)  * Add crypto extras to pyjwt, which pulls in cryptogaphy package * Remove cryptography dependency from more places * Remove integrations extra from docs",
            "Fix install command example (#2043)  It should be pip install PyGithub[integrations] not pip install PyGithub['integrations']",
            "No longer show username and password examples (#1866)  With GitHub moving away from allowing authentication to the API using an username and password, update our documentation to remove it and rely on tokens. Perhaps we should link to how to create an API token, but that can be addressed later.  Fixes #1851",
            "List new project in introduction (#1739)  Fixes #1677",
            "Correct typos found with codespell (#1467)  Correct misspellings and typos located using the codespell tool. Add codespell to pre-commit to avoid further regressions.  Fixes #1459",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Update link/description of project (#1043)",
            "Set up example docs skeleton",
            "Add check-in to projects using PyGithub (#814)  * Add check-in to projects using PyGithub  * Drop pip install link",
            "Adding project name into \"Projects using PyGithub\" (#815)",
            "Add Satsuki, closes #798",
            "Add Gitana to projects using PyGithub",
            "Update introduction.rst, closes #636",
            "Add gitsuggest, fixes #581",
            "Update doc link for PyPI",
            "Doc create instance from token (#667)",
            "Merge pull request #618 from TiagoDanin-Forks/doc  Updated references in introduction.rst",
            "Updated references in introduction.rst",
            "Merge pull request #557 from paulortman/master  add \"integration\" install option with minimal docs",
            "add \"integration\" install option with minimal docs",
            "Merge pull request #455 from matthew-brett/install-gh-update  DOC: remove easy_install suggestion; update links",
            "DOC: remove easy_install suggestion; update links  Remove suggestion to use easy_install, it's strongly deprecated now.  Change github.com/jacquev6 to github.com/PyGithub",
            "Merge pull request #326 from kokosing/feature_add-gifi-usage  Documentation: add git-gifi usage to list of projects using PyGithub",
            "Documentation: add git-gifi usage to list of projects using PyGithub",
            "Merge pull request #293 from dpocock/dpocock-using  doc: add github-icalendar to list of projects using pygithub",
            "Merge pull request #296 from cclauss/patch-1  Fix broken links under \"What's next?\"",
            "Fix broken links under \"What's next?\"",
            "doc: add github-icalendar to list of projects using pygithub",
            "Fix doc links (#248)",
            "Publish version 1.21.0",
            "Merge branch 'develop'",
            "Add a link to DevAssistant (#197)",
            "Remove dead link (#198)",
            "Merge branch 'develop'",
            "Improve documentation",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "tests/Pickle.py",
        "commits": [
            "Close connections after use (#2724)"
        ]
    },
    {
        "fileName": "tests/Requester.py",
        "commits": [
            "Close connections after use (#2724)",
            "Set line length to 120 characters (#2599)",
            "Add `message` property to `GithubException` (#2591)",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits",
            "Retry retryable 403 (rate limit) (#2387)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Make Requester.__createException robust against missing message and body (#2159)",
            "Raise error on unsupported redirects, log supported redirects (#2524)"
        ]
    },
    {
        "fileName": "github/Deployment.py",
        "commits": [
            "Merge `Deployment.pyi` back to source (#2687)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "add `ref` to Deployment (#2489)  Co-authored-by: Nevins Bartolomeo <nevins@sev.co>",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added \"create deployment status\" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586",
            "Add Deployments API (#1424)  Add a new class, Deployment to describe a deployment performed utilising GitHub. Add three methods onto Repository to list them and create them.  Fixes #1117"
        ]
    },
    {
        "fileName": "github/Deployment.pyi",
        "commits": [
            "Merge `Deployment.pyi` back to source (#2687)",
            "add `ref` to Deployment (#2489)  Co-authored-by: Nevins Bartolomeo <nevins@sev.co>",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added \"create deployment status\" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Add missing mypy stubs (#1443)  Deployment, TimelineEvent{,Source} were missing mypy stubs, since they were added after the mypy branch was started. Add them, and clean up two spurious __future__ imports that are no longer required. Add mypy's cache directory to .gitignore"
        ]
    },
    {
        "fileName": "github/Workflow.py",
        "commits": [
            "Merge `Workflow.pyi` back to source (#2686)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add missing arguments to Workflow.get_runs() (#2346)  Adds missing arguments created, exclude_pull_requests, head_sha to the query options of Workflow.get_runs().",
            "Add query `check_suite_id` integer to `Workflow.get_runs` (#2466)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for workflow dispatch event (#1625)  * Add support for workflow dispatch event  Fixes: #1624",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow.",
            "Add support for Workflows (#1496)  To start supporting GitHub Actions, add the first part of that, Workflow, which encapsulates a workflow over the API, along with two methods on Repository to query them."
        ]
    },
    {
        "fileName": "github/Workflow.pyi",
        "commits": [
            "Merge `Workflow.pyi` back to source (#2686)",
            "Add missing arguments to Workflow.get_runs() (#2346)  Adds missing arguments created, exclude_pull_requests, head_sha to the query options of Workflow.get_runs().",
            "Add query `check_suite_id` integer to `Workflow.get_runs` (#2466)",
            "Add default arguments to Workflow method type annotations (#1857)  The type annotations for Workflow.create_dispatch() and Workflow.get_runs() do not include the fact that some of the arguments have default values",
            "Add support for workflow dispatch event (#1625)  * Add support for workflow dispatch event  Fixes: #1624",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow.",
            "Correct Workflow typing (#1533)  When Workflow support was added, the method calls were not added to the typing file for Repository, and somehow the class name for the Workflow typing file was incorrect.",
            "Add support for Workflows (#1496)  To start supporting GitHub Actions, add the first part of that, Workflow, which encapsulates a workflow over the API, along with two methods on Repository to query them."
        ]
    },
    {
        "fileName": "github/GistHistoryState.py",
        "commits": [
            "Merge `GistHistoryState.pyi` back to source (#2685)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update NamedUser.py",
            "Update Gist*.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Fix CommitStats.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/GistHistoryState.pyi",
        "commits": [
            "Merge `GistHistoryState.pyi` back to source (#2685)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/IssueEvent.py",
        "commits": [
            "Merge `IssueEvent` type stub back to source (#2684)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update NamedUser.py",
            "Update IssueEvent.py",
            "Update Issue.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/IssueEvent.pyi",
        "commits": [
            "Merge `IssueEvent` type stub back to source (#2684)",
            "IssueEvent: add missing type hints (#2046)  Add two missing properties to IssueEvents type hints  Fixes #2039",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Download.py",
        "commits": [
            "Merge `Download` type stub back to source (#2683)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Acknowledge lack of test coverage in the old Download API",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update Download.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Download.pyi",
        "commits": [
            "Merge `Download` type stub back to source (#2683)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Milestone.py",
        "commits": [
            "Merge `Milestone` type stub back to source (#2682)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Improve __repr__ method of Milestone class (#921)  This commit add the title of milestone in string representation of Milestone class. This modification improve readbility of milestone instances.  Before: ```python >>> repo.get_milestone(number=1) Milestone(number=1)  ``` After: ```python >>> repo.get_milestone(number=1) Milestone(title='Milestone Example', number=1)  ```",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update NamedUser.py",
            "Update Milestone.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Milestone docstring",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Milestone.pyi",
        "commits": [
            "Merge `Milestone` type stub back to source (#2682)",
            "Small improvements to typing (#1517)  Work through some of the errors when running mypy with --strict.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/PullRequestComment.py",
        "commits": [
            "Merge `PullRequestComment` type stub back to source (#2681)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Do not check reaction_type before sending (#1592)  There is a bunch of repeated code checking reactions which has the issue that it can easily get out of date with what GitHub accepts. Drop the check, and rely on GitHub returning an error.  Fixes #1554",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Refactor common header constants and custom media type",
            "Sync copyright header",
            "Fix incorrect formatting in docstrings (#816)",
            "Add PullRequestComment.in_reply_to_id (#718)  Fix for issue #717",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update PullRequest.py",
            "Update NamedUser.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "PullRequestComment docstring",
            "Merge branch 'develop'",
            "Merge branch 'topic/Pull170' into develop",
            "Add html_url attribute to comments.  html_url attributes were missing from IssueComment and PullRequestComment. Added to both as per the GitHub API.",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/PullRequestComment.pyi",
        "commits": [
            "Merge `PullRequestComment` type stub back to source (#2681)",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Hook.py",
        "commits": [
            "Merge `Hook` type stub back to source (#2680)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Add ping_url and ping to Hook (#669)",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Use POST /repos/:owner/:repo/hooks/:id/tests instead of POST /repos/:owner/:repo/hooks/:id/test",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update Hook.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update Hook.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Hook.pyi",
        "commits": [
            "Merge `Hook` type stub back to source (#2680)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/ProjectColumn.py",
        "commits": [
            "Merge `ProjectColumn` type stub back to source (#2679)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Fix :rtype: directive (#1927)  Fixes a missing colon after :rtype in the ProjectColumn docs.",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "More precise typing for MainClass.get_user() (#1575)  Use typing.overload for MainClass.get_user() since it can return two disparate types. Correct the docstring for it, as well as locking down Sphinx to <3 due to built docs issue and drive-by link correction.  Fixes #1550",
            "feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns.",
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "fixed: comment of ProjectColumn.create_card (#1041)",
            "add: create project column card route (#1003)  Add the missing route to create cards for projects columns Test written and passing locally.",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/ProjectColumn.pyi",
        "commits": [
            "Merge `ProjectColumn` type stub back to source (#2679)",
            "Set line length to 120 characters (#2599)",
            "Fix CI (#2330)",
            "feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/TeamDiscussion.py",
        "commits": [
            "Merge `TeamDiscussion` type stub back to source (#2678)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Add support for team discussions (#1246) (#1249)  * Add support for team discussions (#1246)  * Make a TeamDiscussion completeable"
        ]
    },
    {
        "fileName": "github/TeamDiscussion.pyi",
        "commits": [
            "Merge `TeamDiscussion` type stub back to source (#2678)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Project.py",
        "commits": [
            "Merge `Project` type stub back to source (#2677)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "fix bad assertions in github.Project.edit (#1817)  The assertions in github.Project.edit looked like the result of a bad copy-paste operation: they were all making assertions about the `name` parameter. This commit fixes them so they are checking different parameters.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support to edit and delete a project (#1434)  * Add methods to edit and delete a project  * Update tests for edit project",
            "Fix all but one sphinx warnings (#1346)  To hopefully correct our doc build, tidy up some of the warnings that sphinx complains about. The one remaining one is legitimate.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Add \"create repository project\" and \"create project column\" methods (#995)  Added the two methods:  - Create a project for a given repo  - Create a column for a given project   Tests are basics but done :)",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/Project.pyi",
        "commits": [
            "Merge `Project` type stub back to source (#2677)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/ProjectCard.py",
        "commits": [
            "Merge `ProjectCard` type stub back to source (#2676)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "fix param name of projectcard's move function (#1451)  * fix param name of projectcard's move function  * fix test failure",
            "Correct typos found with codespell (#1467)  Correct misspellings and typos located using the codespell tool. Add codespell to pre-commit to avoid further regressions.  Fixes #1459",
            " Add support for editing project cards (#1418)  * Add edit() to ProjectCard  * Add unit tests of ProjectCard.edit",
            "Implement ProjectCard.delete() (#1417)  To work towards implementing more of the API surrounding Project Cards, add a delete method. With thanks to Christopher Mitchell, Ph.D.  Fixes #1409",
            "Implement move action for ProjectCard (#1356)  ProjectCard's have the ability to be moved between columns, implement the GitHub API to do so.  Fixes #1312",
            "Tidy up ProjectCard.get_content() (#1355)  ProjectCard.get_content() did not document its one argument or assert its type. Do so, as well as generally tidy up the calls.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/ProjectCard.pyi",
        "commits": [
            "Merge `ProjectCard` type stub back to source (#2676)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add ProjectCard.edit() to the type stub (#2080)  The typing information for ProjectCard did not have edit(). Add it.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Notification.py",
        "commits": [
            "Merge `Notification` type stub back to source (#2675)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Jump from notifications to related PRs/issues. (#1168)  * Jump from notifications to related PRs/issues.  * Add test case for jumping to related PRs/issues.  Also another method to get notifications scoped to a repository, otherwise it's hard to keep out sensitive information from the test cases.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update Repository.py",
            "Update Notification.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update Notification.py",
            "Be explicit about test coverage lacking in Notification.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Don't think this anchor is needed",
            "Update Notification",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Respect pep 8",
            "Merge branch 'topic/Notifications' into develop",
            "Improve test coverage (pull #148)",
            "Fix documentation (pull #148)  I had to separate class NotificationSubject in its own file, to cope with my basic doc generation.",
            "this fixes #108"
        ]
    },
    {
        "fileName": "github/Notification.pyi",
        "commits": [
            "Merge `Notification` type stub back to source (#2675)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/IssueComment.py",
        "commits": [
            "Merge `IssueComment` type stub back to source (#2674)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Do not check reaction_type before sending (#1592)  There is a bunch of repeated code checking reactions which has the issue that it can easily get out of date with what GitHub accepts. Drop the check, and rely on GitHub returning an error.  Fixes #1554",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Refactor common header constants and custom media type",
            "Sync copyright header",
            "Fix incorrect formatting in docstrings (#816)",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update NamedUser.py",
            "Update IssueComment.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge branch 'develop'",
            "Merge branch 'topic/Pull170' into develop",
            "Add html_url attribute to comments.  html_url attributes were missing from IssueComment and PullRequestComment. Added to both as per the GitHub API.",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/IssueComment.pyi",
        "commits": [
            "Merge `IssueComment` type stub back to source (#2674)",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Migration.py",
        "commits": [
            "Merge `Migration` type stub back to source (#2673)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Fix all but one sphinx warnings (#1346)  To hopefully correct our doc build, tidy up some of the warnings that sphinx complains about. The one remaining one is legitimate.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/Migration.pyi",
        "commits": [
            "Merge `Migration` type stub back to source (#2673)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Small improvements to typing (#1517)  Work through some of the errors when running mypy with --strict.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitReleaseAsset.py",
        "commits": [
            "Merge `GitReleaseAsset` type stub back to source (#2672)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Remove pointless setters in GitReleaseAsset (#1527)  This is the only class that includes property setters for two of the attributes, which are untested, and even if they were used, would have no impact since there is no method to submit the changes back to GitHub. Drop them.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Include GitReleaseAsset test, closes #778",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            ":recycle: Fix all pep8 coding conventions",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases"
        ]
    },
    {
        "fileName": "github/GitReleaseAsset.pyi",
        "commits": [
            "Merge `GitReleaseAsset` type stub back to source (#2672)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Remove pointless setters in GitReleaseAsset (#1527)  This is the only class that includes property setters for two of the attributes, which are untested, and even if they were used, would have no impact since there is no method to submit the changes back to GitHub. Drop them.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GithubApp.py",
        "commits": [
            "Merge `GithubApp` type stub back to sourcce (#2671)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Make `MainClass.get_app` return completed `GithubApp` when slug is given (#2543)  Fixes slug attribute to fetch app when not set. Loads app with slug lazily, fetch complete app without slug.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add initial support for Github Apps. (#1631)  * Add initial support for Github Apps.  Needed for #1621"
        ]
    },
    {
        "fileName": "github/GithubApp.pyi",
        "commits": [
            "Merge `GithubApp` type stub back to sourcce (#2671)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Fix CI (#2330)",
            "Add initial support for Github Apps. (#1631)  * Add initial support for Github Apps.  Needed for #1621"
        ]
    },
    {
        "fileName": "github/DeploymentStatus.py",
        "commits": [
            "Merge `DeploymentStatus` type stub back to source (#2665)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added \"create deployment status\" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586"
        ]
    },
    {
        "fileName": "github/DeploymentStatus.pyi",
        "commits": [
            "Merge `DeploymentStatus` type stub back to source (#2665)",
            "Fix CI (#2330)",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added \"create deployment status\" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586"
        ]
    },
    {
        "fileName": "github/TimelineEvent.py",
        "commits": [
            "Merge `TimelineEvent` type stub back to source (#2664)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add missing mypy stubs (#1443)  Deployment, TimelineEvent{,Source} were missing mypy stubs, since they were added after the mypy branch was started. Add them, and clean up two spurious __future__ imports that are no longer required. Add mypy's cache directory to .gitignore",
            "Run black and isort to prepare for release (#1328)  Run black and isort over github/*py and tests/*py to prepare for a new release.",
            "Support github timeline events. (#1302)  Adds support for retrieval of Github timeline events.  Signed-off-by: Nick Campbell <nicholas.j.campbell@gmail.com>"
        ]
    },
    {
        "fileName": "github/TimelineEvent.pyi",
        "commits": [
            "Merge `TimelineEvent` type stub back to source (#2664)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Add missing mypy stubs (#1443)  Deployment, TimelineEvent{,Source} were missing mypy stubs, since they were added after the mypy branch was started. Add them, and clean up two spurious __future__ imports that are no longer required. Add mypy's cache directory to .gitignore"
        ]
    },
    {
        "fileName": "github/PullRequestReview.py",
        "commits": [
            "Merge `PullRequestReview` type stub back to source (#2662)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add function to delete pending reviews on a pull request (#1897)  Add a delete method to PullRequestReview to allow dismissing them.  Fixes #1856   Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu>",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "PullRequestReview is not a completable object (#1528)  While chasing coverage failures, I discovered PullRequestReview's do not send back a URL at all, which means firstly, the url property is not required because it will always be None, and secondly, the object can never be completed. I'm not certain why this change broke the test, but it looked brittle, refactor it to be clearer.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add new dismiss() method on PullRequestReview (#1053)  The GitHub v3 API has the ability to dismiss reviews, export it by way of a new dismiss() method on PullRequestReview.  Closes #1050",
            "Apply fix_headers script to update copyright info",
            "Add url attribute to PullRequestReview object (#731)  To compare PullRequestReview objects, they need to have the 'url' attribute because the CompletableGithubObject expects to be able to inspect a '_url' attribute on objects when testing for equality.",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Add 'submitted at' to PullRequestReview (#565)  This field is not currently listed in the Github documentation at https://developer.github.com/v3/pulls/reviews/, but it's been included since Github 2.9  (It even exists in the test data returned for the original PullRequestReview PR)",
            "Merge pull request #538 from allevin/Add_Pull_Request_Reviews_Feature  Add Support for Pull Request Reviews feature",
            "Add Support for Pull Request Reviews feature"
        ]
    },
    {
        "fileName": "github/PullRequestReview.pyi",
        "commits": [
            "Merge `PullRequestReview` type stub back to source (#2662)",
            "Add function to delete pending reviews on a pull request (#1897)  Add a delete method to PullRequestReview to allow dismissing them.  Fixes #1856   Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Event.py",
        "commits": [
            "Merge `Event` type stub back to source (#2660)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update Repository.py",
            "Update Organization.py",
            "Update NamedUser.py",
            "Update Event.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Fix Event url",
            "Event docstring",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Event.pyi",
        "commits": [
            "Merge `Event` type stub back to source (#2660)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Topic.py",
        "commits": [
            "Merge `Event` type stub back to source (#2660)",
            "Merge `Topic` type stub back to source (#2661)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Expand Topic class and add test coverage (#1252)  * Expand Topic class and add test coverage  * Add test coverage for Topic properties  * Fix misspelling in comment",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add a Topic object to cover search_topics (#959)  The return value of MainClass.search_topics() was a paginated list of Repository, which is incorrect. Add a Topic class to encapuslate what is returned.  Fixes #929"
        ]
    },
    {
        "fileName": "github/GistComment.py",
        "commits": [
            "Merge `GistComment` type stub back to source (#2657)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update NamedUser.py",
            "Update Gist*.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/GistComment.pyi",
        "commits": [
            "Merge `GistComment` type stub back to source (#2657)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Gist.py",
        "commits": [
            "Merge `Gist` type stub back to source (#2655)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Run pyupgrade across the project (#1067)  https://github.com/asottile/pyupgrade  - Use dict comprehension - Use set literals",
            "Sync copyright header",
            "Fix a bug cause gistfile.content None. (#486)  Fixes #485   See issue: https://github.com/PyGithub/PyGithub/issues/485",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "v3 changes gist.user to gist.owner",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Use POST /gists/:id/forks instead of POST /gists/:id/fork",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update NamedUser.py",
            "Update Gist*.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update Gist.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'topic/GistRenameAndDeleteFile' into develop",
            "Delete file from gist (issue #156)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Change URL of gist comments (issue #113)",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Specify a server url for Github.  Allows connection to GitHub Enterprise installs on local URLs.",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Gist.pyi",
        "commits": [
            "Merge `Gist` type stub back to source (#2655)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "doc/examples/Authentication.rst",
        "commits": [
            "Suppress `requests` fallback to netrc, provide `github.Auth.Netrc` (#2739)",
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`."
        ]
    },
    {
        "fileName": "tests/Authentication.py",
        "commits": [
            "Suppress `requests` fallback to netrc, provide `github.Auth.Netrc` (#2739)",
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Release 1.59.0 (#2563)",
            "Test and fix UTC issue with AppInstallationAuth (#2561)",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Remove client_id/client_secret authentication (#1888)  Authenticating via client_id and client_secret is dangerous, since they appended to the query string, and can be easily seen from the URL.  client_id/client_secret have been deprecated since May 2020, and ignored by GitHub since late 2020, so it's high time they were removed.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Filter FutureWarning for 2 test cases (#1510)  There are two test cases that explicitly test with client_id and client_secret, which means pytest helpfully tells us about them after the test run concludes. We don't need to see them every run until we drop the arguments, so filter them out for now.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": ".github/workflows/ci.yml",
        "commits": [
            "Make CI support merge queue (#2644)",
            "Run CI on release branches (#2708)",
            "CI: Build and check package before release (#2593)",
            "CI: Update action actions/setup-python (#2382)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Test on Windows and macOS, don't fail fast (#2590)  Co-authored-by: Jirka Borovec <6035284+Borda@users.noreply.github.com>",
            "Move to main default branch (#2566)",
            "[CI] Moving linting into separate workflow (#2522)",
            "Bump actions/checkout from 2 to 3.1.0 (#2327)  Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
            "Move CI to Python 3.11 release and 3.12 dev (#2434)",
            "Add release drafter and pubilsh on tag creation (#2428)",
            "Add support for Python 3.11, drop EOL 3.6 (#2332)",
            "Add support for Python 3.10 (#2073)  Now that Python 3.10 has been released, we should test it in CI.",
            "Bump codecov/codecov-action from 1 to 2.1.0 (#2058)  Bumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 1 to 2.1.0. - [Release notes](https://github.com/codecov/codecov-action/releases) - [Changelog](https://github.com/codecov/codecov-action/blob/master/CHANGELOG.md) - [Commits](https://github.com/codecov/codecov-action/compare/v1...v2.1.0)  --- updated-dependencies: - dependency-name: codecov/codecov-action   dependency-type: direct:production   update-type: version-update:semver-major ...  Signed-off-by: dependabot[bot] <support@github.com>  Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
            "Drop support for Python 3.5 (#1770)  In preperation for starting to use 3.6+ only features, stop testing Python 3.5 in our CI, and bump our minimum required version.",
            "Add support for Python 3.9 (#1735)  With Python 3.9 released, we should support it. A later commit will remove support for Python 3.5.",
            "Various Github Action improvement (#1610)"
        ]
    },
    {
        "fileName": ".github/workflows/lint.yml",
        "commits": [
            "Make CI support merge queue (#2644)",
            "Run CI on release branches (#2708)",
            "Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>",
            "Merge `Branch` type stubs back to source (#2571)  Introduces new helper methods `is_defined`, `is_undefined`, `is_optional`, `is_optional_list` that is going to simplify input assertions in all our methods.  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Move to main default branch (#2566)",
            "[CI] Moving linting into separate workflow (#2522)"
        ]
    },
    {
        "fileName": "tests/GithubIntegration.py",
        "commits": [
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Set line length to 120 characters (#2599)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add expiration argument back to GithubIntegration.create_jwt (#2439)  * Add expiration argument back to create_jwt",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Extend installation attributes",
            "Fix two deprecation warnings (#1371)  Sort out two deprecation warnings to help silence the test suite.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Support non-default URLs in GithubIntegration (#1229)  The get_installation() method of GithubIntegration was hardcoded to always use the default URL of api.github.com, making it impossible to fetch the installation of an GitHub Enterprise installation.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "GithubIntegration: enable getting installation (#1135)  Signed-off-by: Tomas Tomecek <ttomecek@redhat.com>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Installation.py",
        "commits": [
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Set line length to 120 characters (#2599)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Fix auth issues with `Installation.get_repos` (#2547)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testAppAuthAuthentication.txt",
        "commits": [
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetGithubForInstallation.txt",
        "commits": [
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth)."
        ]
    },
    {
        "fileName": "tests/ReplayData/Installation.testGetGithubForInstallation.txt",
        "commits": [
            "Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth)."
        ]
    },
    {
        "fileName": ".github/workflows/label-conflicts.yml",
        "commits": [
            "CI: remove conflict label workflow (#2669)",
            "CI: Increase wait and retries of labels action (#2670)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "CI: update labels action name and version (#2654)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "CI: label PRs that have conflicts (#2622)"
        ]
    },
    {
        "fileName": "github/SourceImport.py",
        "commits": [
            "Merge `SourceImport` type stub back to source (#2663)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Allow GithubObject.update() to be passed headers (#1300)  SourceImport.update() is really GithubObject.update(), which just calls GET on the object's URL. Refetching a source import requires an additional header, so change GithubObject.update() to pass any it is given, and add a test for SourceImport.update()  Fixes #1297",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Sync copyright header",
            "Source Import API (#673)  * add import source  * add import header  * create/get source import for repo, SourceImport class  * Corrected use_lfs, not considered completed with creation  * vcs creds optional  * SourceImport test, removed unneeded attributes  * create/get source import tests for repo  * Encoding and copyright comment  * styling fixes  * Update SourceImport.py  * Update SourceImport.py  * Update SourceImport.py"
        ]
    },
    {
        "fileName": "github/SourceImport.pyi",
        "commits": [
            "Merge `SourceImport` type stub back to source (#2663)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Topic.pyi",
        "commits": [
            "Merge `Topic` type stub back to source (#2661)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Fix/types for repo topic team (#2341)  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/License.py",
        "commits": [
            "Merge `License` type stub back to source (#2659)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Implement License API (#734)  * Implement License API  * Update copyright"
        ]
    },
    {
        "fileName": "github/License.pyi",
        "commits": [
            "Merge `License` type stub back to source (#2659)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/File.py",
        "commits": [
            "Merge `File` type stub back to source (#2658)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #412 from jeffreymelvin-wf/expose_previous_filename_for_renamed_files  Add previous_filename property to File",
            "Add previous_filename property to File",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update File.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/File.pyi",
        "commits": [
            "Merge `File` type stub back to source (#2658)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/RepositoryKey.py",
        "commits": [
            "Merge `RepositoryKey` type stub back to source (#2656)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Updating links to Github documentation for deploy keys (#1850)  * Updating links to Github documentation for deploy keys  There are a couple of links to http://developer.github.com/v3/repos/keys/ and I believe these should be going to http://developer.github.com/v3/repos/#deploy-keys. I've updated the docstrings in this file appropriately.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Sync copyright header",
            "Fix delete method for RepositoryKey",
            "Update the RepositoryKey class (#530)  # The problems I attempt to solve  - `RepositoryKey.created_at` is available on the Github API, but not in PyGithub - `RepositoryKey.edit()` is not supported anymore by the Github API, see https://developer.github.com/v3/repos/keys/#edit-a-deploy-key  # How I went about solving the problem  I added myself a new deploy key to one of my repositories, and recorded the existing tests using my account. I could not keep the existing test data as the specified key does not exist anymore, I added a comment for the next contributor to help him figure out how to record new tests.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Add read_only attribute to Deploy Keys (#570)",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update RepositoryKey.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "RepositoryKey docstring",
            "Merge branch 'develop'",
            "Merge pull request #167 from srijan/develop  Updates api reference url in docstrings for repository keys",
            "Updates api reference url in docstrings for repository keys",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/RepositoryKey.pyi",
        "commits": [
            "Merge `RepositoryKey` type stub back to source (#2656)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Label.py",
        "commits": [
            "Merge `Label` type stub back to source (#2652)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Correct parameter for Label.edit (#1350)  The existing code for Label.edit was passing 'name' as a parameter to the PATCH call, but GitHub expects 'new_name', correct it.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Refactor common header constants and custom media type",
            "Sync copyright header",
            "Labels API: support description (#738)  The description attribute handling requirement is   a custom media type in the Accept header:     application/vnd.github.symmetra-preview+json  Limitation: Repository.get_labels does not report description, possibly something has changed in the preview API.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update Label.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Label docstring",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Label.pyi",
        "commits": [
            "Merge `Label` type stub back to source (#2652)",
            "Set line length to 120 characters (#2599)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Installation.py",
        "commits": [
            "Merge `Installation` type stub back to source (#2649)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Fix auth issues with `Installation.get_repos` (#2547)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Extend installation attributes",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Refactor common header constants and custom media type",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #519 from PyGithub/integrations-installation  adding support for the integrations installation endpoint",
            "adding support for the integrations installation endpoint"
        ]
    },
    {
        "fileName": "github/Installation.pyi",
        "commits": [
            "Merge `Installation` type stub back to source (#2649)",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Fix #1742 - incorrect typehint for `Installation.id` (#1743)  * Fix #1742",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/PullRequestMergeStatus.py",
        "commits": [
            "Merge `PullRequestMergeStatus` type stub back to source (#2646)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Fix PullRequestMergeStatus.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "PullRequestMergeStatus docstring",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/PullRequestMergeStatus.pyi",
        "commits": [
            "Merge `PullRequestMergeStatus` type stub back to source (#2646)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitCommit.py",
        "commits": [
            "Merge some type stub back to source (#2650)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update GitTree",
            "Update Commit.py and GitCommit.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update GitAuthor.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/GitCommit.pyi",
        "commits": [
            "Merge some type stub back to source (#2650)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Invitation.py",
        "commits": [
            "Merge some type stub back to source (#2650)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Correct two attributes in Invitation (#1382)  Proving once again that untested code is broken code, correctly set two attributes during initialization of Invitation. Increase coverage by checking every attribute.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Add invitee and inviter to Invitation (#1156)  Invitations contain information about the user they are for, and which user invited them, so export that too.  During invesigating attmepting to test the new attributes of Invitation, it was discovered that there are no code paths to fetch them, so add AuthenticatedUser.get_invitations(). The test added can do double duty.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "added repository collaborator invitation"
        ]
    },
    {
        "fileName": "github/Invitation.pyi",
        "commits": [
            "Merge some type stub back to source (#2650)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Membership.py",
        "commits": [
            "Merge some type stub back to source (#2650)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Apply black to whole codebase (#1303)",
            "Correct API for NamedUser.get_organization_membership (#1277)  NamedUser.get_organization_membership() was calling the API method for fetching the currently authenticated user only, which is incorrect. The method was not tested directly, so add tests.  Furthermore, Membership had some errors which had slipped through review, so correct them.  Sadly, this is an API break, since passing the organization as an int made no sense in this case.  Fixes #1276",
            "Implemented user organization membership. Added test case. (#1237)  1. Added AuthenticatedUser:get_organization_membership 2. Added NamedUser:get_organization_membership 3. Added related tests as GitMembership and related replay data"
        ]
    },
    {
        "fileName": "github/Membership.pyi",
        "commits": [
            "Merge some type stub back to source (#2650)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/WorkflowStep.py",
        "commits": [
            "Merge some type stub back to source (#2650)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/WorkflowStep.pyi",
        "commits": [
            "Merge some type stub back to source (#2650)",
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/Permissions.py",
        "commits": [
            "Merge `Permissions` type stub back to source (#2648)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Adding attributes \"maintain\" and \"triage\" to class \"Permissions\" (#1810)  * Adding attributes \"maintain\" and \"triage\" to class \"github.Permissions.Permissions\"  * Fix for failed test due to extended attribute list  * Adding new simplistic test case for class Permissions  Fixes #1809",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update Permissions.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/Permissions.pyi",
        "commits": [
            "Merge `Permissions` type stub back to source (#2648)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Adding attributes \"maintain\" and \"triage\" to class \"Permissions\" (#1810)  * Adding attributes \"maintain\" and \"triage\" to class \"github.Permissions.Permissions\"  * Fix for failed test due to extended attribute list  * Adding new simplistic test case for class Permissions  Fixes #1809",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/RequiredStatusChecks.py",
        "commits": [
            "Merge `RequiredStatusChecks` type stub back to source (#2647)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/RequiredStatusChecks.pyi",
        "commits": [
            "Merge `RequiredStatusChecks` type stub back to source (#2647)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Referrer.py",
        "commits": [
            "Merge `Referrer` type stub back to source (#2645)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/Referrer.pyi",
        "commits": [
            "Merge `Referrer` type stub back to source (#2645)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Enterprise.py",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/EnterpriseConsumedLicenses.py",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/NamedEnterpriseUser.py",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/PaginatedList.py",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge PaginatedList.pyi back to source (#2555)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Correctly deal when PaginatedList's data is a dict (#2084)  When calculating totalCount for a PaginatedList, if a Link header is not in the returned data, we use len() to calculate the number of items. PullRequest.get_review_requests() actually returns a dictionary, which neatly defeats this naive method. Peer inside the dictionary in this case, and add a test case.  Fixes #2053",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "PaginatedList's totalCount is 0 if no last page (#1641)  When calculating totalCount for PaginatedList, if the links data does not contain a last page, we can't know how many elements are contained in the list. Set it to 0 in that case.  Fixes #1614",
            "more flexible header splitting (#1616)  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Drop documentation for len() of PaginatedList (#1470)  PaginatedList does not support len(), so stop mentioning it in the docstring.  Fixes #1462",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Cleanup try/except import in PaginatedList (#1228)  Since we're using six.moves to import parse_qs, we don't need to check for an import exception, we can just import it directly.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Use total_count from data in PaginatedList (#963)  When there is no link header sent, this signifies that this is the only page of results. If data is empty, or only contains a list of items, we should count them, but this can be defeated -- if the returned data contains a total_count key, we should use it. This also uncovered a bug in the test suite for searching topics.  Closes #960",
            "Added missing params to constructor when reversed (#946)  This PR proposes adding two missing params to constructor in `.reversed`. This preserves the `headers` as well as the `list_item` once cloned.  Fixes #945.",
            "Fix totalCount for empty response, closes #905",
            "Sync copyright header",
            "Revert __len__ for PaginatedList to fix the tests, will revisit later",
            "Implement __len__ for PaginatedList, fixes #579, closes #433",
            "Calcuate totalCount without iterating PaginatedList (#820)  This PR #596 seems stale, so I have opened up this one with the requested changes from @sfdye.  This is the code from @Tommos0's [comment][1] with some modification.  There are 2 tests failing. I think this is due to the change in the query string and the cached test data just needs to be refreshed for those tests.  [1]: https://github.com/PyGithub/PyGithub/pull/596#issuecomment-315013949",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Update doc link for PyPI",
            "Updated PullRequest reviewer request according to API changes (#690)  https://developer.github.com/changes/2018-01-24-end-thor-preview/",
            "Merge pull request #519 from PyGithub/integrations-installation  adding support for the integrations installation endpoint",
            "adding support for the integrations installation endpoint",
            "update doc url everywhere (#420)",
            "Merge pull request #346 from danvk/paginated-headers  Thread headers through PaginatedList",
            "Thread headers through PaginatedList",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #295 from ewalker11/develop  Fix paginated list handling of 204 No Content",
            "Fix paginated list handling of 204s",
            "Work-around Issue278",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'pr224'",
            "Make PaginatedList support the search wrapper JSON  For /search resources the resulting JSON contains 'total_count' and 'items'. The latter is the list PaginatedList expects, so just transparently use that list. Everything else works just like other lists.  Also change __grow()'s visibility to allow PaginatedList to use it in order to peek at 'total_count', making it available as a property.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update readme and doc for #184",
            "Make PaginatedList.reversed return a new list (follow-up #184)  This will avoid surprises if both the list and its reversed version are iterated.",
            "Merge branch 'topic/ReversePagination' into develop",
            "Update copyright information",
            "Remove helper method in PaginatedList.py",
            "Update Commit.py and GitCommit.py",
            "Update RepositoryKey.py",
            "Update Tag.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "bugfix: returning real list instead of generator  Changed reversed(content) to content[::-1] in order to return a real list and not a generator. The code in PaginatedListBase.__grow does an iteration over newElements when using `+=` and then returns them. When using a generator, newElements would be empty when they are returned.",
            "bug fix: empty nextUrl if no next/prev  Fixes a bug introduced in the previous commits. Now testing a case where no lastUrl is returned. Also fixing a regression where nextUrl wasn't erased properly.",
            "remove print #oops",
            "support reverse iteration in PaginatedList  This uses the 'last' and 'prev' links in the HTTP headers. The usage is repo.get_issues().reversed",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Merge branch 'topic/CustomPerPageWithoutUrlParam' into develop",
            "bugfix: using custom per_page in repo.get_comments",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/PaginatedListPerPage' into develop",
            "Add Github.per_page to tweak PaginatedList (Issue #145)",
            "Merge branch 'develop'",
            "Change home page",
            "Improve documentation",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Merge remote-tracking branch 'forks/llimllib/master'",
            "fix failing get_page function  * if firstParams was None, PaginatedList was calling dict(None)   which fails with a TypeError. If firstParams is None, just use   an empty tuple, which dict() handles properly",
            "Mark urls to be completed",
            "Improve docs",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "PaginatedList.get_page (issue #77)",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Refactor PaginatedLists (legacy and modern) to restore test coverage",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Test more exceptions",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "tests/EnterpriseAdmin.py",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/PaginatedList.py",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Fix CI (#2330)",
            "Correctly deal when PaginatedList's data is a dict (#2084)  When calculating totalCount for a PaginatedList, if a Link header is not in the returned data, we use len() to calculate the number of items. PullRequest.get_review_requests() actually returns a dictionary, which neatly defeats this naive method. Peer inside the dictionary in this case, and add a test case.  Fixes #2053",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "PaginatedList's totalCount is 0 if no last page (#1641)  When calculating totalCount for PaginatedList, if the links data does not contain a last page, we can't know how many elements are contained in the list. Set it to 0 in that case.  Fixes #1614",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/EnterpriseAdmin.testGetConsumedLicenses.txt",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/EnterpriseAdmin.testGetEnterpriseUsers.txt",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/PaginatedList.setUp.txt",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/PaginatedList.testIterationWithPrefetchedFirstPage.txt",
        "commits": [
            "Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetWorkflowId.txt",
        "commits": [
            "Search Workflows by Name (#2711)"
        ]
    },
    {
        "fileName": "github/OrganizationSecret.py",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/OrganizationVariable.py",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/Secret.py",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/Variable.py",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/Organization.py",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Add support for repo and org level actions variables (#2580)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add allow_update_branch option to Organization (#2465)",
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add github actions secrets to org (#2006)  Add functionality to create and delete Secrets for Organizations.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Added get_installations() to Organizations (#1695)  * Added get_installations() to Organizations  Fixes #1694",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Test Organization.get_hook() (#1660)  Add a testcase for Organization.get_hook()",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test.",
            "Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "exposed seats and filled_seats for Github Organization Plan (#1360)  Expose two new attributes for Organization Plans",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add two factor attributes on organizations (#1132)  * Add 2fa attribute on organizations  * Fix property name and test value",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Add sorting capability to Organization.get_repos() (#1139)",
            "Add new Organization.get_team_by_slug method (#1144)  Add a new API call to Organization that allows fetching teams by slug.  Closes #1116",
            "Add description field when creating a new team (#1125)",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateSecret.txt",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add github actions secrets to org (#2006)  Add functionality to create and delete Secrets for Organizations."
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateSecretSelected.txt",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Fix replay data for Organization.create_secret() (#2096)  A recently merged PR added a const, which will be used when fetching repositories. Update replay data for a test that was not included in that change.",
            "Add github actions secrets to org (#2006)  Add functionality to create and delete Secrets for Organizations."
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateVariable.txt",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateVariableSelected.txt",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testDeleteSecret.txt",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add github actions secrets to org (#2006)  Add functionality to create and delete Secrets for Organizations."
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetSecret.txt",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetSecrets.txt",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetVariable.txt",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetVariables.txt",
        "commits": [
            "Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/StatsCodeFrequency.py",
        "commits": [
            "Merge `StatsCodeFrequency` type stub back to source (#2638)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Finish .../stats/... (#203)"
        ]
    },
    {
        "fileName": "github/StatsCodeFrequency.pyi",
        "commits": [
            "Merge `StatsCodeFrequency` type stub back to source (#2638)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Plan.py",
        "commits": [
            "Merge Plan type stub back to source (#2637)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "exposed seats and filled_seats for Github Organization Plan (#1360)  Expose two new attributes for Organization Plans",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update Plan.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/Plan.pyi",
        "commits": [
            "Merge Plan type stub back to source (#2637)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/ContentFile.py",
        "commits": [
            "Merge ContentFile type stub back to source (#2635)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Remove some uses of atLeastPython3 (#1191)  There are a number of call sites that would behave differently depending on Python 2 or 3. A fair amount of them are left over from Python 3.2 or Python 2.6 were the current versions, and it was much harder to write compatible code for both versions. Happily, that is now in the past, so refactor some of them out.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add highlight search to search_code function (#925)  * :sparkles: add highlight search to search_code function  * :white_check_mark: add highlighting search code tests",
            "Add download_url to ContentFile, closes #575",
            "Implement License API (#734)  * Implement License API  * Update copyright",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Acknowledge some lack of test coverage",
            "Fix ContentFile.decoded_content for Python 3.0 to 3.2",
            "Merge branch 'pr224'",
            "Add decoded_content property to ContentFile  The only encoding currently supported is base64, but that's ok, since v3 of the GitHub API only mentions base64.",
            "Add code search  Code search results are content resources with an embedded repository. The \"content\" and \"encoding\" attributes aren't returned and require completion.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update ContentFile.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Implement Repository.get_dir_contents (issue #140)",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.get_readme and Repository.get_contents (issue #65)"
        ]
    },
    {
        "fileName": "github/ContentFile.pyi",
        "commits": [
            "Merge ContentFile type stub back to source (#2635)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/CommitComment.py",
        "commits": [
            "CommitComment (#2634)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Do not check reaction_type before sending (#1592)  There is a bunch of repeated code checking reactions which has the issue that it can easily get out of date with what GitHub accepts. Drop the check, and rely on GitHub returning an error.  Fixes #1554",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Refactor common header constants and custom media type",
            "Sync copyright header",
            "Fix incorrect formatting in docstrings (#816)",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update NamedUser.py",
            "Update CommitComment.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/CommitComment.pyi",
        "commits": [
            "CommitComment (#2634)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "scripts/add_attribute.py",
        "commits": [
            "Update `add_attribute.py` to latest conding style (#2631)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add support for new RepositoryAdvisories API :tada: (#2483)",
            "[WorkflowRun] - Add missing attributes (`run_started_at` & `run_attempt`), remove deprecated `unicode` type (#2273)",
            "Allow adding attributes at the end of the list (#1807)  * Allow adding attributes at the end of the list / fix for issue #1806  * Update as per review comments",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Open file in text mode in scripts/add_attribute.py (#1396)",
            "black",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'pr224'",
            "Fix add_attribute insertion logic  The code didn't work if it couldn't find a property in the file that is lexicographically greater than the new attribute. It now accepts _identity as an \"end point\" to insert before, and empty lines in _initAttributes() and _useAttributes(), as they mark the end of the method.  Also add \"float\" as a possible type, mainly for the \"score\" attribute in search results.",
            "Merge branch 'develop'",
            "Add many missing attributes"
        ]
    },
    {
        "fileName": ".pre-commit-config.yaml",
        "commits": [
            "CI: Improve ruff DX (#2667)",
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "precommit: move `flake8` as last (#2595)",
            "Remove symlinks from test data (#2588)",
            "Force Unix EOL (#2573)",
            "feat: add allow_forking to Repository (#2380)  * chore(dependency): flake8 has moved to github  * feat: add allow_forking to Repository  * chore: linting  Co-authored-by: hussaiia <ibrahim.hussaini@cba.com.au>",
            "Add support for Python 3.11, drop EOL 3.6 (#2332)",
            "Fix CI (#2330)",
            "Remove language_version for black (#1968)  When black was added, we did not want to run it under Python 3.5, since upstream did not support it. We no longer support Python 3.5 ourselves, so we no longer need to restrict the version black uses.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Correct typos found with codespell (#1467)  Correct misspellings and typos located using the codespell tool. Add codespell to pre-commit to avoid further regressions.  Fixes #1459",
            "Reuse pre-commit checks in CI (#1442)  * Use pre-commit checks in CI  * Fix all issues flagged by mypy  * Update travis.yml to reflect testenv changes  * Update docs to use tox lint",
            "Add pre-commit plugin for black/isort/flake8 (#1398)  * Add pre-commit plugin for black/isort/flake8  * Update .pre-commit-config.yaml  * Add a few more useful hooks"
        ]
    },
    {
        "fileName": "tests/PullRequest.py",
        "commits": [
            "Fix assertion for subject_type in creating pull request review comment (#2642)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Allow multiline comments in PullRequest (#2540)  - change deprecated parameter position to line - add a parameter to allow multiline comment: start_line - add a parameter to allow comment as suggestion: as_suggestion - add more missing parameters: side, start_side, in_reply_to, subject_type",
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "feat(pullrequest): add the rebaseable attribute (#1690)",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Add and handle the maintainer_can_modify attribute in PullRequest (#1465)",
            "Don't transform completely in PullRequest.*assignees (#1428)  The two methods PullRequest.add_to_assignees() and PullRequest.remove_from_assignees() are special, in that they call POST/DELETE on the issue_url of the pull request, and then transform all their attributes based on what was returned. This has a number of effects, none of them any good for calling new methods on the same pull request object. Instead, only pull out the changed attribute and use that. Also change the returned URL for the POST call in the replay data to match what GitHub returns.  Fixes #1406",
            "Merge pull request #1427 from ahhda/list_draft_pull_request  Add draft attribute to PullRequest",
            "Add draft attribute, update test",
            "PullRequest.update_branch(): allow expected_head_sha to be empty (#1412)  * PullRequest.update_branch(): allow expected_head_sha to be empty  * PullRequest.testUpdateBranch(): test also with empty expected_head_sha  * Updated replay data for PullRequest.testUpdateBranch  * tox formatted changes",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Add support for update branch  (#1317)  * Add Support for PullRequest update-branch  * Add test case  * Fix test case  * Add test data record  * Update PullRequest.py  * Update PullRequest.py  * Support py2.7  * Assert response status is 202  * black + isort",
            "Apply black to whole codebase (#1303)",
            "Add assignee removal/addition support to PRs (#1241)  Add assignee removal/addition support to PRs Fixes #1109  Add test for new PR assignee functionality  Add record file  Addressed comments on #1016",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Adds `get_issue_events` to `PullRequest` object (#1154)  * Adds `get_issue_events` to `PullRequest` object  * Add unit test for  * Fix PullRequest.get_issue_events unit test  Use actual event ids...  * Fix missing import on PullRequest.  I wish the unit tests would run in Python3...  * Add PulReqeust.testGetIssueEvents ReplayData  * Updating replay data to use developer's personal credentials.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testCreateReviewCommentSubjectType.txt",
        "commits": [
            "Fix assertion for subject_type in creating pull request review comment (#2642)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Allow multiline comments in PullRequest (#2540)  - change deprecated parameter position to line - add a parameter to allow multiline comment: start_line - add a parameter to allow comment as suggestion: as_suggestion - add more missing parameters: side, start_side, in_reply_to, subject_type"
        ]
    },
    {
        "fileName": ".isort.cfg",
        "commits": [
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Merge `Branch` type stubs back to source (#2571)  Introduces new helper methods `is_defined`, `is_undefined`, `is_optional`, `is_optional_list` that is going to simplify input assertions in all our methods.  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Reuse pre-commit checks in CI (#1442)  * Use pre-commit checks in CI  * Fix all issues flagged by mypy  * Update travis.yml to reflect testenv changes  * Update docs to use tox lint",
            "Use pytest to parametrize tests (#1438)  * Use pytest to parametrize tests  Use built-in pytest test case parametrization support over external 'parameterize' package.  The latter is not well maintained, and has known Python 3.8 failures unsolved since November 2019.  Since pytest fixtures are incompatible with unittest-style tests, rewrite the relevant test case to use pytest-style asserts.  This also makes the resulting code simpler, as we no longer have to pass TestCase to the helper classes.  * Refactor input cleaning in ReplayingConnection.__readNextRequest()",
            "Add pre-commit plugin for black/isort/flake8 (#1398)  * Add pre-commit plugin for black/isort/flake8  * Update .pre-commit-config.yaml  * Add a few more useful hooks",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)"
        ]
    },
    {
        "fileName": "CONTRIBUTING.md",
        "commits": [
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>",
            "Add missing fields from `GithubCredentials.py` to CONTRIBUTING.md (#2482)",
            "Add support for Python 3.11, drop EOL 3.6 (#2332)",
            "Reuse pre-commit checks in CI (#1442)  * Use pre-commit checks in CI  * Fix all issues flagged by mypy  * Update travis.yml to reflect testenv changes  * Update docs to use tox lint",
            "Create a tox docs environment (#1426)  To make it easier to build documentation locally, add a new tox environment that installs our requirements and runs Sphinx.",
            "Switch to using pytest (#1423)  Due to the recent deprecation of setup.py test, we should move with the times, and switch to a non-deprecated test runner.  Add configuration for pytest, and switch tox to using it. Remove AllTests, since it is no longer required to locate test classes, and rewrite tests/__main__.py as a pytest conftest plugin.  Also drop the test function from manage.sh, tox does a much better job.",
            "Add pre-commit plugin for black/isort/flake8 (#1398)  * Add pre-commit plugin for black/isort/flake8  * Update .pre-commit-config.yaml  * Add a few more useful hooks",
            "Add tox (#1388)  * Add tox.ini  * Fix typo  * Update .gitignore  * Move flake8 to tox  * Add py35  * Add Coverage  * Add Coverage  * Add Coverage  * Add Coverage  * Add black  * Add black  * Add black  * Skip black for py35  * Add isort  * Update contributing docs  * Remove empty line",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_",
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860",
            "Add support for JWT authentication (#948)  APIs such as https://developer.github.com/v3/apps/#find-organization-installation use a JWT for authentication. Adding support for JWT auth.",
            "Add a note about issuing deprecation warning",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card",
            "Add sphinx setup instruction",
            "Merge remote-tracking branch 'origin/master'",
            "Update CONTRIBUTING.md",
            "fix a couple typos to be clearer (#419)",
            "update project files"
        ]
    },
    {
        "fileName": "manage.sh",
        "commits": [
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Switch to using pytest (#1423)  Due to the recent deprecation of setup.py test, we should move with the times, and switch to a non-deprecated test runner.  Add configuration for pytest, and switch tox to using it. Remove AllTests, since it is no longer required to locate test classes, and rewrite tests/__main__.py as a pytest conftest plugin.  Also drop the test function from manage.sh, tox does a much better job.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply some polish to manage.sh (#1284)  Use set -e in manage.sh for some safety, and allow the remote to be overridden for those of us who have different setups, and switch to using flake8 for checks like travis does.",
            "Check if the version is empty in manage.sh (#1268)  If someone accidentally hits Enter when prompted for the new version, the script merrily creates a tag called 'v', which is bothersome to tidy up. Check if the variable is empty and error if it is.",
            "Fix changelog today generation",
            "Clean up",
            "Update doc link in copyright text",
            "Fix changelog generation  '\\n' wasn't getting interpretted as a new line.",
            "push to 'origin' instead of 'github'",
            "leave out the doc part during publish",
            "Merge pull request #437 from PyGithub/travis  Releases based on travis",
            "upgrade release process based on travis",
            "Publish version 1.25.2",
            "Publish version 1.25.1",
            "Fix doc (#224)",
            "Adapt doc generation to v1/v2",
            "Twitt about releases",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Split manage.sh test",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Draft a script comparing URLs called in PyGithub to Github API v3 reference",
            "Clean up",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Add a script to fix file headers",
            "Restore Python 3 in manage.sh test",
            "Separate 'setup.py sdist upload' in manage.sh",
            "Restore check and test in manage.sh publish",
            "Publish version 1.16.0",
            "Merge branch 'develop'",
            "Restore documentation for next version",
            "Publish version 1.14.1",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Publish version 1.13.0",
            "Use bash for manage.sh"
        ]
    },
    {
        "fileName": "tox.ini",
        "commits": [
            "Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "[CI] Moving linting into separate workflow (#2522)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add support for Python 3.11, drop EOL 3.6 (#2332)",
            "Move lint and docs to Python 3.8 (#2077)  With Python 3.6 rapidly approaching end of life, move the docs and lint tox targets to Python 3.8, and also switch readthedocs to match.",
            "Add support for Python 3.10 (#2073)  Now that Python 3.10 has been released, we should test it in CI.",
            "Add types libraries to lint deps (#1975)  It appears recently that typing information for jwt and requests has been split out into seperate projects on pypi, namely types-jwt and types-requests. Since we utilise calling functions in their namespace, we need to install them otherwise mypy will fail.",
            "Drop support for Python 3.5 (#1770)  In preperation for starting to use 3.6+ only features, stop testing Python 3.5 in our CI, and bump our minimum required version.",
            "Add py39 env to tox (#1740)  An earlier commit added Python 3.9 support to CI, but neglected to change tox.ini to support an environment, do so here.",
            "Turn on coverage reporting for codecov (#1522)  Since we migrated from Travis to GitHub Actions, our coverage on codecov has been reporting as 0%, since uploading the .coverage file is a terrible idea. Turn on XML-based reporting, ignore the file and use that when we upload to codecov.",
            "Github workflow improvement (#1486)",
            "Fix all type issues flagged by mypy (#1484)",
            "Drop unneeded ignore rule for flake8 (#1454)  We no longer have code or comments that triggers E203 (no space before :), so we can drop it.",
            "Reuse pre-commit checks in CI (#1442)  * Use pre-commit checks in CI  * Fix all issues flagged by mypy  * Update travis.yml to reflect testenv changes  * Update docs to use tox lint",
            "Create a tox docs environment (#1426)  To make it easier to build documentation locally, add a new tox environment that installs our requirements and runs Sphinx.",
            "Switch to using pytest (#1423)  Due to the recent deprecation of setup.py test, we should move with the times, and switch to a non-deprecated test runner.  Add configuration for pytest, and switch tox to using it. Remove AllTests, since it is no longer required to locate test classes, and rewrite tests/__main__.py as a pytest conftest plugin.  Also drop the test function from manage.sh, tox does a much better job.",
            "Add tox (#1388)  * Add tox.ini  * Fix typo  * Update .gitignore  * Move flake8 to tox  * Add py35  * Add Coverage  * Add Coverage  * Add Coverage  * Add Coverage  * Add black  * Add black  * Add black  * Skip black for py35  * Add isort  * Update contributing docs  * Remove empty line"
        ]
    },
    {
        "fileName": "github/CommitCombinedStatus.py",
        "commits": [
            "Merge type stub bask to source: `Comparison` `CommitStatus` `CommitCombinedStatus` (#2633)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #382 from doctoryes/master  Add ability to check combined status.",
            "Add:   - CommitCombinedStatus class   - get_combined_status() to Commit class to return combined status   - Add test for combined status."
        ]
    },
    {
        "fileName": "github/CommitCombinedStatus.pyi",
        "commits": [
            "Merge type stub bask to source: `Comparison` `CommitStatus` `CommitCombinedStatus` (#2633)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/CommitStatus.py",
        "commits": [
            "Merge type stub bask to source: `Comparison` `CommitStatus` `CommitCombinedStatus` (#2633)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "Patch issue 358 status context (#428)  * Add \"context\" to CommitStatus * Add testcase for context in CommitStatus",
            "update doc url everywhere (#420)",
            "Merge pull request #352 from babineaum/patch-1  Updating doc link for Github Commit Statuses",
            "Update CommitStatus.py",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update NamedUser.py",
            "Update CommitStatus.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Commit statuses (issue #67)"
        ]
    },
    {
        "fileName": "github/CommitStatus.pyi",
        "commits": [
            "Merge type stub bask to source: `Comparison` `CommitStatus` `CommitCombinedStatus` (#2633)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Comparison.py",
        "commits": [
            "Merge type stub bask to source: `Comparison` `CommitStatus` `CommitCombinedStatus` (#2633)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update Comparision.py",
            "Update Commit.py and GitCommit.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update File.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/Comparison.pyi",
        "commits": [
            "Merge type stub bask to source: `Comparison` `CommitStatus` `CommitCombinedStatus` (#2633)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Commit.py",
        "commits": [
            "Merge `Commit.pyi` back to source (#2616)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Use right variable in both get_check_runs() (#1889)  Both CheckSuite and Commit have a get_check_runs() method that allows filtering by a string -- the original code did not check for it, and never added it to the query string since it checked the wrong variable. Check the right variable and re-record the replay data.  Fixes #1843",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:",
            "Add method for fetching pull requests associated with a commit (#1433)  * Add method for fetching pull requests associated with a commit  * Reference PR number instead of id on commit.get_pulls   Fixes #1414",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #382 from doctoryes/master  Add ability to check combined status.",
            "Add:   - CommitCombinedStatus class   - get_combined_status() to Commit class to return combined status   - Add test for combined status.",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #289 from andycasey/master  Add optional context when creating a status for a commit",
            "Post context information when creating status  as per https://developer.github.com/v3/repos/statuses/#create-a-status",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update NamedUser.py",
            "Update CommitComment.py",
            "Update Commit.py and GitCommit.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Fix CommitStats.py",
            "Update File.py",
            "Update CommitStatus.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Change doc sentance",
            "Replace doc url",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Commit statuses (issue #67)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/Commit.pyi",
        "commits": [
            "Merge `Commit.pyi` back to source (#2616)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add Commit.get_pulls() to pyi (#1958)  Commit.get_pulls() is missing from the typing information, add it.",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>",
            "Correct typing for Commit.get_comments() (#1765)  Commit.get_comments() returns a PaginatedList of CommitComment instances, not commits.  Co-Authored-By: Raju Subramanian <coder@mahesh.net>",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/CodeScanAlert.pyi",
        "commits": [
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/CodeScanAlertInstance.py",
        "commits": [
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/CodeScanAlertInstance.pyi",
        "commits": [
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/CodeScanAlertInstanceLocation.py",
        "commits": [
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/CodeScanAlertInstanceLocation.pyi",
        "commits": [
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/CodeScanRule.py",
        "commits": [
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/CodeScanRule.pyi",
        "commits": [
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/CodeScanTool.py",
        "commits": [
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/CodeScanTool.pyi",
        "commits": [
            "Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "github/CheckSuite.py",
        "commits": [
            "Merge `CheckSuite` type stub back to source (#2606)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Use right variable in both get_check_runs() (#1889)  Both CheckSuite and Commit have a get_check_runs() method that allows filtering by a string -- the original code did not check for it, and never added it to the query string since it checked the wrong variable. Check the right variable and re-record the replay data.  Fixes #1843",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "github/CheckSuite.pyi",
        "commits": [
            "Merge `CheckSuite` type stub back to source (#2606)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "github/CheckRun.py",
        "commits": [
            "Merge `CheckRun` type stub back to source (#2605)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Removed duplicate code (#2060)  Remove a duplicate line in the CheckRun class.",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "github/CheckRun.pyi",
        "commits": [
            "Merge `CheckRun` type stub back to source (#2605)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "github/BranchProtection.py",
        "commits": [
            "Add required_linear_history attribute to BranchProtection (#2643)  Co-authored-by: Jacob Beard <jake@minnow.io> Co-authored-by: Paul Melnikow <github@paulmelnikow.com>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add missing backticks to Branch Protection docs (#889)  The docstrings for the Branch Protection methods that take classes as arguments were missing backticks for the class name, add them so the docs contain proper links.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "tests/Branch.py",
        "commits": [
            "Add required_linear_history attribute to BranchProtection (#2643)  Co-authored-by: Jacob Beard <jake@minnow.io> Co-authored-by: Paul Melnikow <github@paulmelnikow.com>",
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Fix Branch's push restriction API (#1290)  The current API for changing user and teams push restrictions is brittle, and flat out incorrect when it comes to adding members. Break the API, but replace it with one that is correct.  Co-Authored-By: Jonas Maurus <jonas-github@maurus.net>",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/BranchProtection.py",
        "commits": [
            "Add required_linear_history attribute to BranchProtection (#2643)  Co-authored-by: Jacob Beard <jake@minnow.io> Co-authored-by: Paul Melnikow <github@paulmelnikow.com>",
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/BranchProtection.setUp.txt",
        "commits": [
            "Add required_linear_history attribute to BranchProtection (#2643)  Co-authored-by: Jacob Beard <jake@minnow.io> Co-authored-by: Paul Melnikow <github@paulmelnikow.com>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "requirements/docs.txt",
        "commits": [
            "Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>"
        ]
    },
    {
        "fileName": "requirements/test.txt",
        "commits": [
            "Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>"
        ]
    },
    {
        "fileName": "requirements/types.txt",
        "commits": [
            "Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>"
        ]
    },
    {
        "fileName": "test-requirements.txt",
        "commits": [
            "Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>",
            "[CI] Moving linting into separate workflow (#2522)",
            "Add crypto extras to pyjwt, which pulls in cryptogaphy package (#2443)  * Add crypto extras to pyjwt, which pulls in cryptogaphy package * Remove cryptography dependency from more places * Remove integrations extra from docs",
            "Revert \"Pin requests to <2.25 as well (#1757)\" (#1763)  * Revert \"Pin requests to <2.25 as well (#1757)\" * Ensure httpretty is more recent than 1.0.3  This reverts commit d159425f36dc7f68766cc980e262e9287e5f111c.",
            "Use pytest to parametrize tests (#1438)  * Use pytest to parametrize tests  Use built-in pytest test case parametrization support over external 'parameterize' package.  The latter is not well maintained, and has known Python 3.8 failures unsolved since November 2019.  Since pytest fixtures are incompatible with unittest-style tests, rewrite the relevant test case to use pytest-style asserts.  This also makes the resulting code simpler, as we no longer have to pass TestCase to the helper classes.  * Refactor input cleaning in ReplayingConnection.__readNextRequest()",
            "Switch to using pytest (#1423)  Due to the recent deprecation of setup.py test, we should move with the times, and switch to a non-deprecated test runner.  Add configuration for pytest, and switch tox to using it. Remove AllTests, since it is no longer required to locate test classes, and rewrite tests/__main__.py as a pytest conftest plugin.  Also drop the test function from manage.sh, tox does a much better job.",
            "Unpin coverage to 5.0.3 only (#1397)  To not force distributions to patch our requirements, loosen the coverage test dependency.",
            "Add tox (#1388)  * Add tox.ini  * Fix typo  * Update .gitignore  * Move flake8 to tox  * Add py35  * Add Coverage  * Add Coverage  * Add Coverage  * Add Coverage  * Add black  * Add black  * Add black  * Skip black for py35  * Add isort  * Update contributing docs  * Remove empty line",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Use inclusive ordered comparison for 'parameterized' requirement (#1281)",
            "Sync httpretty version requirement with setup.py (#1265)",
            "Handle unicode strings when recording responses (#1253) (#1254)  * Handle unicode strings when recording responses (#1253)  * Add new test requirements  * Make requirement conditional  * Fix flake8 error  * Compare dict values without worrying about key order  * Improve readability",
            "Add cryptography to test-requirements.txt (#1165)",
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860"
        ]
    },
    {
        "fileName": "github/AuthenticatedUser.py",
        "commits": [
            "Merge `AuthenticatedUser` type stubs back to source (#2577)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Fix broken urls in docstrings (#2393)",
            "Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>",
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Add two_factor_authentication in AuthenticatedUser. (#1972)  Fixes #1971",
            "Fix: #1671 Convert Python Bool to API Parameter for Authenticated User Notifications (#2001)  The parameters 'all' and 'participating' for AuthenticatedUser.get_notifications() should be lower case strings, not textual forms of a boolean.  Fixes: #1671",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Adjust to Github API changes regarding emails (#1890)  Handle AuthenticatedUser.get_emails() correctly with the GitHub API changes.  Fixes #1852",
            "fix get_user_issues (#1842)  AuthenticatedUser.get_user_issues() calls the wrong API endpoint.  Fixes #1841",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Extend installation attributes",
            "AuthenticatedUser.get_organization_membership() should be str (#1473)",
            "Add create_project support, add tests (#1429)  Add AuthenicatedUser.create_project()",
            "Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge",
            "Fix all but one sphinx warnings (#1346)  To hopefully correct our doc build, tidy up some of the warnings that sphinx complains about. The one remaining one is legitimate.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Implemented user organization membership. Added test case. (#1237)  1. Added AuthenticatedUser:get_organization_membership 2. Added NamedUser:get_organization_membership 3. Added related tests as GitMembership and related replay data",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add invitee and inviter to Invitation (#1156)  Invitations contain information about the user they are for, and which user invited them, so export that too.  During invesigating attmepting to test the new attributes of Invitation, it was discovered that there are no code paths to fetch them, so add AuthenticatedUser.get_invitations(). The test added can do double duty.",
            "Run pyupgrade across the project (#1067)  https://github.com/asottile/pyupgrade  - Use dict comprehension - Use set literals",
            "add since and before to get_notifications (#1074)  Needed this for getting notifications in a certain period and noticed that it wasn't implemented.",
            "user.node_id missing (#1001)  'node_id' attribute was missing. Hence added the attribute using add_attribute script in AuthorizedUser  and NamedUser classes.  This fixes issue #999 .",
            "Adding migration api wrapper (#899)  Closes #818",
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead.",
            "get repos missing params for authenticated users (#915)  first commit to fix issue #435",
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do.",
            "Refactor common header constants and custom media type",
            "Remove custom swamp-thing-preview header (#873)  The Repository Invitation API graduated on July 17, 2017, so the custom Accept header is no longer required.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Fix add_to_watched for AuthenticatedUser (#716)  * 'watching' != 'staring'   The functionality was completely broken - api endpoints were wrong/didn't work. Tested by logging in as an authenticated user - verified listing watches, add watch, and remove watch.  * fix unit tests",
            ":recycle: Fix all pep8 coding conventions",
            "Added missing parameters for repo creation (#623)  * Added missing parameters to organisation repo creation  * team_id should already be an id not a team object  * Name arguments in the test  * Fixed assertion check  * Added missing parameters to user repo creation  * Fixed comments",
            "added repository collaborator invitation",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #417 from edunham/explain-authed-user  Document how one gets an AuthenticatedUser object",
            "Document how one gets an AuthenticatedUser object",
            "Merge commit 'pull/275/head'",
            "Capitalization of the 2FA OTP request header",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Acknowledge some lack of test coverage",
            "Merge branch 'develop'",
            "Merge branch 'pr220' into develop",
            "Added onetime_password to create_authorization  github.AuthenticatedUser.create_authorization has been modified to support two-factor authentication. When two-factor authentication is enabled create_authorization will throw an TwoFactorException. The onetime password can be then be passed to create_authorization on a subsequent call.",
            "Merge branch 'pr213' into develop",
            "Add /user/teams (GET)",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update UserKey.py",
            "Update Repository.py",
            "Update Notification.py",
            "Update Gist*.py",
            "Update Authorization.py",
            "Update AuthenticatedUser.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update Plan.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)",
            "Add parameters to AuthenticatedUser.get_issues (issue #166)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/Notifications' into develop",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Move get_notification(s) to AuthenticatedUser (pull #148)",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Add client_id and client_secret parameters to AuthenticatedUser.create_authorization (issue #125)",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Add auto_init and gitignore_template to create_repo (issue #106)  http://developer.github.com/changes/2012-9-28-auto-init-for-repositories/",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Specify a server url for Github.  Allows connection to GitHub Enterprise installs on local URLs.",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/AuthenticatedUser.pyi",
        "commits": [
            "Merge `AuthenticatedUser` type stubs back to source (#2577)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Set line length to 120 characters (#2599)",
            "Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>",
            "Add two_factor_authentication in AuthenticatedUser. (#1972)  Fixes #1971",
            "Adjust to Github API changes regarding emails (#1890)  Handle AuthenticatedUser.get_emails() correctly with the GitHub API changes.  Fixes #1852",
            "Small improvements to typing (#1517)  Work through some of the errors when running mypy with --strict.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Path.py",
        "commits": [
            "Merge Path type stub back to source (#2639)",
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/Path.pyi",
        "commits": [
            "Merge Path type stub back to source (#2639)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/AccessToken.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Fix CI (#2330)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Create AccessToken entity  This class is used to represent access tokens created from a successful OAuth authorization process."
        ]
    },
    {
        "fileName": "github/ApplicationOAuth.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Merge `ApplicationOAuth.pyi` back to source (#2569)",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Add OAuth support for GitHub applications  Create the ApplicationOAuth class which is responsible for handling a GitHub application's OAuth authorization process."
        ]
    },
    {
        "fileName": "github/Artifact.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Merge `Artifact` type stub back to source (#2553)",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>"
        ]
    },
    {
        "fileName": "github/Authorization.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update AuthorizationApplication.py",
            "Update Authorization.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/AuthorizationApplication.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update AuthorizationApplication.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Improve docs",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Update generateDocstrings.py",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/CWE.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "github/CheckRunAnnotation.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "github/CheckRunOutput.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "github/Clones.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/CommitStats.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Fix CommitStats.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/Environment.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "github/EnvironmentDeploymentBranchPolicy.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "github/EnvironmentProtectionRule.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "github/EnvironmentProtectionRuleReviewer.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "github/GitAuthor.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update GitAuthor.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/GitBlob.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update GitBlob.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/GitObject.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update GitObject.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/GitRef.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop some unimplemented methods in GitRef (#1525)  There are two unimplemented methods in GitRef, which are mostly covered by Commit.get_statuses(), remove them.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update GitRef.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update GitObject.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/GitTag.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update GitTag.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update GitObject.py",
            "Update GitAuthor.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/GitTree.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update GitTree",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update GitTree.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/GitTreeElement.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update GitTree.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/GitignoreTemplate.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update GitignoreTemplate.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Prepare version 1.10.0 + pep8",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Merge branch 'topic/RetrieveGitignoreTemplates' into develop",
            "Github.get_gitignore_template[s] (issue #120)"
        ]
    },
    {
        "fileName": "github/HookDelivery.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/HookDescription.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update HookDescription.py.",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement https://api.github.com/hooks (issue #35)"
        ]
    },
    {
        "fileName": "github/HookResponse.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update Hook.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/InputGitAuthor.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #290 from ndahlquist/develop  Change InputGitAuthor to reflect that time is an optional parameter.",
            "Change InputGitAuthor to reflect that time is an optional parameter.",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Improve documentation",
            "Generate some repetitive doc files",
            "Fix tests and some doc",
            "Improve",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "dos2unix, chmod +x",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/InstallationAuthorization.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #449 from PyGithub/integrations  GitHub integrations support",
            "adds GitHub integrations"
        ]
    },
    {
        "fileName": "github/Issue.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge `Issue.pyi` back to source (#2568)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add support for Issue.state_reason #2370 (#2392)  Co-authored-by: Nicolas Schweitzer <nicolas.schweitzer@amadeus.com>",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Do not check reaction_type before sending (#1592)  There is a bunch of repeated code checking reactions which has the issue that it can easily get out of date with what GitHub accepts. Drop the check, and rely on GitHub returning an error.  Fixes #1554",
            "Test more attributes (#1526)  To increase coverage, sprinkle in some asserts for attributes that were not checked -- this uncovered a bug in Issue that two attributes were not properly initialized to NotSet.",
            "Search repo issues by string label (#1379)  * Allow use of strings for labels in Repository.get_issues  * Fix unittests  * Update docstring  * Removed brackets from \"list of...\"",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Run black and isort to prepare for release (#1328)  Run black and isort over github/*py and tests/*py to prepare for a new release.",
            "Support github timeline events. (#1302)  Adds support for retrieval of Github timeline events.  Signed-off-by: Nick Campbell <nicholas.j.campbell@gmail.com>",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "issue: add lock/unlock (#1107)  * issue: add lock/unlock  * tests: add test for issue lock/unlock  * tests: add lock/unlock sample data  * Fix tests, add locked and active_lock_reason   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>",
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Refactor common header constants and custom media type",
            "Sync copyright header",
            "Fix incorrect formatting in docstrings (#816)",
            "Correct docstring for set_labels (#766)  Both Issue and PullRequest have a set_labels method whose docstring did not exactly describe the parameter, correct it.",
            "Added Issue.as_pull_request() and PullReqest.as_issue() (#630)",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            ":recycle: Fix all pep8 coding conventions",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"add_to_assignees\" & \"remove_from_assignees\" method to Issue object.",
            "Enhance support of \"assignees\" argument in Issue.edit()",
            "Added \"assignees\" attribute to Issue object.",
            "Merge pull request #466 from PyGithub/issue-assignees  Issue assignees",
            "add issue assignee param",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "Adding \"since\" param to Issue.get_comments() (#426)",
            "update doc url everywhere (#420)",
            "Merge pull request #336 from klnrajareddy/master  Fixing https://github.com/PyGithub/PyGithub/issues/335.",
            "Fixing https://github.com/PyGithub/PyGithub/issues/335. Issue.remove_from_labels fails when the label passed is a string with whitespace characters",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "Now accepts strings for assignee.  When calling pygithub for calls associated with assignees you can now simply pass a string instead of a NamedUser object. This applies to the following methods: - issue.edit() - repo.create_issue() - repo.get_issues() - repo.has_in_assignees() - repo.has_in_collaborators() - repo.remove_from_collaborators() - repo.add_to_collaborators()",
            "Merge branch 'develop'",
            "Accept strings as well as Label objects (#202)  This should be more generic, but it's a wig work to do it everywhere. Let's keep that in mind for V2.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Fix merge of #192  One branch modified signature of constructors, another branch added a call to a constructor.",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Fix copyrights (#181 #182 #184 #186 #187)",
            "Update copyright information",
            "Update Repository.py",
            "Update NamedUser.py",
            "Update Milestone.py",
            "Update Label.py",
            "Update IssueComment.py",
            "Update Issue.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Update IssuePullRequest.py",
            "Merge branch 'topic/KnowYourParent' into develop",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Populates Issue's repository from URL when not in response.",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge remote-tracking branch 'forks/servalproject/master' into develop",
            "Support Issue.edit(milestone=None, assignee=None)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Merge branch 'master' of github.com:roverdotcom/PyGithub into topic/IssuesWithSpacesInName",
            "[Issue] replace use of label _identity with name  - The label's _identity attribute is URL encoded.     This is probably correct when it is being     used as part of an API endpoint URL, but     when used as part of the POST data, GitHub     will return a 422 error stating that the     label does not exist.",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/IssuePullRequest.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update IssuePullRequest.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/NotificationSubject.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update Notification.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Be explicit about test coverage lacking in Notification.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/Notifications' into develop",
            "Fix documentation (pull #148)  I had to separate class NotificationSubject in its own file, to cope with my basic doc generation."
        ]
    },
    {
        "fileName": "github/PublicKey.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple class' type stubs back to source (#2570)",
            "key_id could be int on Github Enterprise (#1894)  * PublicKey.key_id can also be int, as well as str  Fixes #1878",
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "github/PullRequestPart.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update Repository.py",
            "Update NamedUser.py",
            "Update PulllRequestPart.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/Rate.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Add github.Rate.used field (#2531)  Co-authored-by: Nikolay Yurin <yurinnick@meta.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add reset to the repr for Rate (#1389)  Add the reset attribute to the repr for Rate, and add a test for good measure.  Co-Authored-By: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Make Rate.reset an UTC datetime",
            "Github.get_rate_limit"
        ]
    },
    {
        "fileName": "github/RateLimit.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Remove RateLimit.rate (#1529)  RateLimit.rate was first deprecated in v1.43.2, which was released 20 months ago. As that's a fairly generous deprecation period, remove it.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.",
            "Restore RateLimit.rate attribute, raise deprecation warning instead",
            "Adding support for search/graphql rate limit, fixes #553",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Github.get_rate_limit"
        ]
    },
    {
        "fileName": "github/Reaction.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Refactor common header constants and custom media type",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/RepositoryAdvisoryCredit.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Use `typing_extensions` for `TypedDict` (#2592)",
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "github/RepositoryAdvisoryCreditDetailed.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "github/RepositoryAdvisoryVulnerability.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Use `typing_extensions` for `TypedDict` (#2592)",
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "github/RepositoryAdvisoryVulnerabilityPackage.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "github/RepositoryPreferences.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "github/RequiredPullRequestReviews.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/SelfHostedActionsRunner.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Force Unix EOL (#2573)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "github/Stargazer.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Enable mypy `check_untyped_defs` (#2607)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #347 from danvk/starred-at  Add repo.get_stargazers_with_dates()",
            "Add repo.get_stargazers_with_dates()"
        ]
    },
    {
        "fileName": "github/StatsCommitActivity.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Finish .../stats/... (#203)"
        ]
    },
    {
        "fileName": "github/StatsParticipation.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Finish .../stats/... (#203)"
        ]
    },
    {
        "fileName": "github/StatsPunchCard.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Fixed formatting of docstrings for `Repository.create_git_tag_and_release()` and `StatsPunchCard`. (#1520)",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Finish .../stats/... (#203)"
        ]
    },
    {
        "fileName": "github/Tag.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Update Commit.py and GitCommit.py",
            "Update Tag.py",
            "Change NonCompletableGithubObject without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "Tag docstring",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/TimelineEventSource.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add missing mypy stubs (#1443)  Deployment, TimelineEvent{,Source} were missing mypy stubs, since they were added after the mypy branch was started. Add them, and clean up two spurious __future__ imports that are no longer required. Add mypy's cache directory to .gitignore",
            "Run black and isort to prepare for release (#1328)  Run black and isort over github/*py and tests/*py to prepare for a new release.",
            "Support github timeline events. (#1302)  Adds support for retrieval of Github timeline events.  Signed-off-by: Nick Campbell <nicholas.j.campbell@gmail.com>"
        ]
    },
    {
        "fileName": "github/UserKey.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs",
            "Fixed links to github docs. [#2009]",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Sync copyright header",
            "Remove edit for UserKey as it's immutable now",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update UserKey.py",
            "Change CompletableGithubObject.__init__ without breaking build.",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Fix links to ref in :calls: sections",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Merge pull request #171 from martinqt/doc  Replace doc url",
            "UserKey docstring",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Refactor XxxGithubObject",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/View.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Merge some simple class' type stubs back to source (#2570)",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/WorkflowRun.py",
        "commits": [
            "Enable mypy `disallow_untyped_defs` (#2609)",
            "Set line length to 120 characters (#2599)",
            "Merge `WorkflowRun` type stub back to source (#2554)",
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)",
            "[WorkflowRun] - Add missing attributes (`run_started_at` & `run_attempt`), remove deprecated `unicode` type (#2273)",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>",
            "Add method to delete Workflow runs (#2078)  One piece of missing functionality is the ability to delete Workflow Runs, which the GitHub API supports. Add a delete() method to WorkflowRun.  Fixes #2019",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add WorkflowRun.workflow_id (#1737)  Add the missing attribute WorkflowRun.workflow_id",
            "Create WorkflowRun.timing namedtuple from the dict (#1587)  To stop non-deterministic dictionary ordering ruining our day on Python 3.5, create the namedtuple using the keys of the dictionary.",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "github/Consts.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added \"create deployment status\" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586",
            "Drop use of shadow-cat for draft PRs (#1469)",
            "Add \"get_repo_permission\" to Team class (#1416)  * Add \"get_repo_permission\" to Team class  * second attempt: - accept repo name or repo object - return github.Permissions.Permissions object - try and following CONTRIBUTING.md better  * add missing import to tests patch replay data with permission data  * assert a specific permission rather than just the type  Fixes #1415",
            "Merge pull request #1422 from ahhda/draft_pull_request  Add support for draft pull request",
            "Add draft flag parameter, update tests",
            "Support github timeline events. (#1302)  Adds support for retrieval of Github timeline events.  Signed-off-by: Nick Campbell <nicholas.j.campbell@gmail.com>",
            "Add support for update branch  (#1317)  * Add Support for PullRequest update-branch  * Add test case  * Fix test case  * Add test data record  * Update PullRequest.py  * Update PullRequest.py  * Support py2.7  * Assert response status is 202  * black + isort",
            "Apply black to whole codebase (#1303)",
            "Add support for team discussions (#1246) (#1249)  * Add support for team discussions (#1246)  * Make a TeamDiscussion completeable",
            "Correct header check for 2FA required (#1274)  Currently, we were checking for an uppercase header if GitHub was refusing our authentication because we didn't provide a token. Requests returns headers with all lowercase. Fix the const, and add a test for good measure.  Fixes #1273",
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement",
            "Adding migration api wrapper (#899)  Closes #818",
            "Added support for required signatures on protected branches (#939)  Wraps the parts of the branch protection API that allows the user to require signed commits on a branch. New methods are : * Branch.get_required_signatures : returns true if signed commits are required * Branch.add_required_signatures : adds the requirements for signed commits on a branch * Branch.remove_required_signatures : removes the requirement for signed commits on a branch  It uses the API provided on this page : https://developer.github.com/v3/repos/branches/  Since this feature is in [preview](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures/) I pass the 'Accept application/vnd.github.zzzax-preview+json' header to each request.",
            "Add highlight search to search_code function (#925)  * :sparkles: add highlight search to search_code function  * :white_check_mark: add highlighting search code tests",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card",
            "Implement Organization.invite_user (#880)  Utilize the API preview for the organization invite system to allow organization owners to invite outside colloborators either via passing in the user directly, or their email address.      Fixes #851",
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Refactor common header constants and custom media type",
            "Sync copyright header",
            "Handle HTTP 202 HEAD&GET with a retry (#791)  * Handle HTTP 202 Fixes #564 After some testing, it seems GitHub seems to be able to process the chrunching of statistics for every repository I tested in around 2 seconds. So a delay of around 5 seconds should be plenty to be very certain that the next try should succeed. Another option would be to put this value lower and possibly waste an extra retry on it.  * Only re-request data if HEAD or GET (those are 'safe') to e.g. avoid running a duplicate POST or PUT, that can change stuff on the server Using RFC 2616 and https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html as guideline  * Fix testStatistics  * change wait time to 2 secs",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #475 from jwilk/spelling  Fix typo in a constant",
            "Fix typo in a constant",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "./manage.sh fix_headers",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Fix line ending",
            "Fix remarks on #189 to #193",
            "Review of #189: pep8, copyrights, style, remarks  For remarks, run: git grep \"#189\" They are only my first thoughts while reviewing this pull request, and should be reviewed themselves.",
            "Review of #189: use dict.get  http://docs.python.org/2/library/stdtypes.html#dict.get",
            "Fix update",
            "Add update() method"
        ]
    },
    {
        "fileName": "scripts/fix_headers.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add support for new RepositoryAdvisories API :tada: (#2483)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "black",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Don't fix headers in /build",
            "Merge branch 'develop'",
            "Fix copyrights (#181 #182 #184 #186 #187)",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to fix file headers"
        ]
    },
    {
        "fileName": "tests/ApplicationOAuth.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Add OAuth support for GitHub applications  Create the ApplicationOAuth class which is responsible for handling a GitHub application's OAuth authorization process."
        ]
    },
    {
        "fileName": "tests/AuthenticatedUser.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>",
            "Add two_factor_authentication in AuthenticatedUser. (#1972)  Fixes #1971",
            "Adjust to Github API changes regarding emails (#1890)  Handle AuthenticatedUser.get_emails() correctly with the GitHub API changes.  Fixes #1852",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Extend installation attributes",
            "Add create_project support, add tests (#1429)  Add AuthenicatedUser.create_project()",
            "Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge",
            "Correct two attributes in Invitation (#1382)  Proving once again that untested code is broken code, correctly set two attributes during initialization of Invitation. Increase coverage by checking every attribute.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Add invitee and inviter to Invitation (#1156)  Invitations contain information about the user they are for, and which user invited them, so export that too.  During invesigating attmepting to test the new attributes of Invitation, it was discovered that there are no code paths to fetch them, so add AuthenticatedUser.get_invitations(). The test added can do double duty.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Authorization.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/BadAttributes.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/CheckRun.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/CheckSuite.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/Commit.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Add method for fetching pull requests associated with a commit (#1433)  * Add method for fetching pull requests associated with a commit  * Reference PR number instead of id on commit.get_pulls   Fixes #1414",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/CommitCombinedStatus.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/CommitComment.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/CommitStatus.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ConditionalRequestUpdate.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Connection.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Reuse pre-commit checks in CI (#1442)  * Use pre-commit checks in CI  * Fix all issues flagged by mypy  * Update travis.yml to reflect testenv changes  * Update docs to use tox lint",
            "Use pytest to parametrize tests (#1438)  * Use pytest to parametrize tests  Use built-in pytest test case parametrization support over external 'parameterize' package.  The latter is not well maintained, and has known Python 3.8 failures unsolved since November 2019.  Since pytest fixtures are incompatible with unittest-style tests, rewrite the relevant test case to use pytest-style asserts.  This also makes the resulting code simpler, as we no longer have to pass TestCase to the helper classes.  * Refactor input cleaning in ReplayingConnection.__readNextRequest()",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "Fix two deprecation warnings (#1371)  Sort out two deprecation warnings to help silence the test suite.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Handle unicode strings when recording responses (#1253) (#1254)  * Handle unicode strings when recording responses (#1253)  * Add new test requirements  * Make requirement conditional  * Fix flake8 error  * Compare dict values without worrying about key order  * Improve readability"
        ]
    },
    {
        "fileName": "tests/Deployment.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "add `ref` to Deployment (#2489)  Co-authored-by: Nevins Bartolomeo <nevins@sev.co>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Add Deployments API (#1424)  Add a new class, Deployment to describe a deployment performed utilising GitHub. Add three methods onto Repository to list them and create them.  Fixes #1117"
        ]
    },
    {
        "fileName": "tests/DeploymentStatus.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added \"create deployment status\" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586"
        ]
    },
    {
        "fileName": "tests/Enterprise.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Environment.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "tests/Exceptions.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Retry retryable 403 (rate limit) (#2387)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Re-raise the exception when failing to parse JSON (#1892)  Since GitHub has the bad manners to return bare strings for some API endpoints, one sharp edge has been that JSON decoding errors were masked since we wrap the string in a dictionary. However, this makes it difficult to debug malformed JSON in replay data, so re-raise the exception if the first character is a { or [ (IE, it's an object or list.)",
            "Export headers in GithubException (#1887)  Since the headers that led to an exception are also useful, firstly pass them into the constructor, and then export them in a property. Test one specific use case to make sure of coverage.  Fixes #1814",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Export IncompletableObject in the github namespace (#1450)  When IncompletableObject was added, it was only added to GithubException, and not imported directly into the github namespace like other exceptions. Correct that, and clean up the resultant now unrequired import.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Correct header check for 2FA required (#1274)  Currently, we were checking for an uppercase header if GitHub was refusing our authentication because we didn't provide a token. Requests returns headers with all lowercase. Fix the const, and add a test for good measure.  Fixes #1273",
            "Add an IncompletableObject exception (#1227)  If a returned object from GitHub does not include an URL, that object can not be completed, and used to fail with an obscure traceback saying NoneType has no method startswith. Check for this, and raise IncompletableObject instead.",
            "Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ExposeAllAttributes.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Merge `get_file_contents` with `get_contents`",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Gist.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/GistComment.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/GitBlob.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/GitCommit.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/GitRef.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/GitRelease.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Continue the PR #1899 (#2386)  * A property to access the `assets` field of release (#1898)  ... in order to avoid extra requests.  <https://github.com/PyGithub/PyGithub/issues/1898>  * Remove comment to comply the review  * Add tests for GitRelease.assets  ---------  Co-authored-by: green-green-avk <45503261+green-green-avk@users.noreply.github.com>",
            "Update PyJWT Version to 2.0+ (#1891)  * Update PyJWT version * Fix `GitRelease.testUploadAssetWithName` test   MIME type wasn't as expected  Fixes #1832",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Allow name to be specified for upload_asset (#1151)  GitRelease.upload_asset() calculates the name based on the filename, and doesn't allow it to be overridden. Add a new name argument that is used if it is set. Drive by changing the default of the content_type argument to NotSet.  Closes #1095",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/GitTag.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/GitTree.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/GithubApp.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).",
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Make `MainClass.get_app` return completed `GithubApp` when slug is given (#2543)  Fixes slug attribute to fetch app when not set. Loads app with slug lazily, fetch complete app without slug.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Add initial support for Github Apps. (#1631)  * Add initial support for Github Apps.  Needed for #1621"
        ]
    },
    {
        "fileName": "tests/GithubObject.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>"
        ]
    },
    {
        "fileName": "tests/GithubRetry.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add retry issue to GithubException, don't log it (#2611)",
            "Use timezone-aware reset datetime in GithubRetry.py (#2610)  Co-authored-by: Patryk Szulczyk <patryk.szulczyk@skyscanner.net> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Retry retryable 403 (rate limit) (#2387)"
        ]
    },
    {
        "fileName": "tests/Github_.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Added a method for getting a user by their id (#1691)  * Added a method for getting a user by their id  * Added get_user_by_id to MainClass stubs  Fixes #1615",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Ability to retrieve public events (#1481)",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Hook.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add support for Issue.state_reason #2370 (#2392)  Co-authored-by: Nicolas Schweitzer <nicolas.schweitzer@amadeus.com>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Test more attributes (#1526)  To increase coverage, sprinkle in some asserts for attributes that were not checked -- this uncovered a bug in Issue that two attributes were not properly initialized to NotSet.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Run black and isort to prepare for release (#1328)  Run black and isort over github/*py and tests/*py to prepare for a new release.",
            "Support github timeline events. (#1302)  Adds support for retrieval of Github timeline events.  Signed-off-by: Nick Campbell <nicholas.j.campbell@gmail.com>",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "issue: add lock/unlock (#1107)  * issue: add lock/unlock  * tests: add test for issue lock/unlock  * tests: add lock/unlock sample data  * Fix tests, add locked and active_lock_reason   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue134.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue140.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Use Repository.get_contents() in tests (#1301)  Two tests were calling Repository.get_dir_contents() which is deprecated. To stop the warnings, change the call sites.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Merge `get_file_contents` with `get_contents`",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue494.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue80.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue87.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue945.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/IssueComment.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/IssueEvent.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Label.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/License.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Logging_.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Do not transform requestHeaders when logging (#1965)  Requester.__log() sanitizes the headers of the request so that authentication details are not logged, but this has the side effect of meaning that future requests that use the same Requester object will fail. Usually, this is perfectly fine, since almost every method will only make one request -- where this falls down is when we make another after a redirect. Make a copy of the requestHeaders, and sanitize those.  Fixes #1959",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Refactor Logging tests (#1315)  To stop skipping logging tests on Python 3, refactor them to mock out the logger and check arguments directly, rather than naively comparing strings. Allow a logger to be injected into Requester for this.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Migration.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Milestone.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/NamedUser.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Adds the 'twitter_username' attribute to NamedUser. (#1585)  * Adds the 'twitter_username' attribute to NamedUser.",
            "Check all arguments of NamedUser.get_repos() (#1532)  The two unit tests for NamedUser.get_repos() did not check all arguments, and this was the only method in the file that wasn't completly covered. Re-record the replay data while passing all arguments to the method.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Assert more attributes in Membership (#1391)  To increase code coverage, assert more attributes in Membership.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Correct API for NamedUser.get_organization_membership (#1277)  NamedUser.get_organization_membership() was calling the API method for fetching the currently authenticated user only, which is incorrect. The method was not tested directly, so add tests.  Furthermore, Membership had some errors which had slipped through review, so correct them.  Sadly, this is an API break, since passing the organization as an int made no sense in this case.  Fixes #1276",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Organization2072.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Implement organization.cancel_invitation() (#2072)  Implement a new function cancel_invitation for github.Organization objects, allowing for cancellation of organization invitations."
        ]
    },
    {
        "fileName": "tests/Project.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            " Add support for editing project cards (#1418)  * Add edit() to ProjectCard  * Add unit tests of ProjectCard.edit",
            "Implement ProjectCard.delete() (#1417)  To work towards implementing more of the API surrounding Project Cards, add a delete method. With thanks to Christopher Mitchell, Ph.D.  Fixes #1409",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Implement move action for ProjectCard (#1356)  ProjectCard's have the ability to be moved between columns, implement the GitHub API to do so.  Fixes #1312",
            "Tidy up ProjectCard.get_content() (#1355)  ProjectCard.get_content() did not document its one argument or assert its type. Do so, as well as generally tidy up the calls.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ProjectColumn.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns.",
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057"
        ]
    },
    {
        "fileName": "tests/PublicKey.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "key_id could be int on Github Enterprise (#1894)  * PublicKey.key_id can also be int, as well as str  Fixes #1878",
            "Test repr() for PublicKey (#1879)  The new PublicKey tests did not test the repr() method, increase coverage by doing so.",
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/PullRequest1168.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Jump from notifications to related PRs/issues. (#1168)  * Jump from notifications to related PRs/issues.  * Add test case for jumping to related PRs/issues.  Also another method to get notifications scoped to a repository, otherwise it's hard to keep out sensitive information from the test cases."
        ]
    },
    {
        "fileName": "tests/PullRequest1375.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support to reply to a Pull request comment (#1374)  * Add create_review_comment_reply to PullRequest  * Add unit tests  * Add docs for comment_id param for create_review_comment_reply  * Update tests  * Fix pep8 styling issue  * Fix styling"
        ]
    },
    {
        "fileName": "tests/PullRequest2408.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add parameters to Repository.get_workflow_runs (#2408)"
        ]
    },
    {
        "fileName": "tests/PullRequestComment.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/PullRequestReview.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add function to delete pending reviews on a pull request (#1897)  Add a delete method to PullRequestReview to allow dismissing them.  Fixes #1856   Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "PullRequestReview is not a completable object (#1528)  While chasing coverage failures, I discovered PullRequestReview's do not send back a URL at all, which means firstly, the url property is not required because it will always be None, and secondly, the object can never be completed. I'm not certain why this change broke the test, but it looked brittle, refactor it to be clearer.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Fix PR review creation. (#1184)  Do not modify the attributes of a PR when creating a review.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/RateLimiting.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add github.Rate.used field (#2531)  Co-authored-by: Nikolay Yurin <yurinnick@meta.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Add reset to the repr for Rate (#1389)  Add the reset attribute to the repr for Rate, and add a test for good measure.  Co-Authored-By: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/RawData.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Reaction.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/RepositoryAdvisory.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/RepositoryKey.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Test more attributes (#1526)  To increase coverage, sprinkle in some asserts for attributes that were not checked -- this uncovered a bug in Issue that two attributes were not properly initialized to NotSet.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!"
        ]
    },
    {
        "fileName": "tests/RequiredPullRequestReviews.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps."
        ]
    },
    {
        "fileName": "tests/RequiredStatusChecks.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps."
        ]
    },
    {
        "fileName": "tests/Retry.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Merge pull request #1818 from apahim/define_pool_size  Make requests pool_size configurable",
            "Always define the session adapter  This represents no change of behaviour, but it enables us to set more options to the adapter.  Signed-off-by: Amador Pahim <apahim@redhat.com>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Reuse pre-commit checks in CI (#1442)  * Use pre-commit checks in CI  * Fix all issues flagged by mypy  * Update travis.yml to reflect testenv changes  * Update docs to use tox lint",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Drop use of assertEquals (#1194)  TestCase.assertEquals is deprecated, at least in modern Python 3, so which to assertEqual, which is used everywhere else.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Do not import directly into Retry tests (#1155)  The Retry test class was importing Repository directly, which had the side effect of masking the tests.Repository import in AllTests with github.Repository. Switch to importing github only, which is safe. As a drive-by, switch to using self.assertRaises for one of the tests."
        ]
    },
    {
        "fileName": "tests/Search.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Cover all code paths in search_commits (#2087)  The search_commits method was only very lightly tested, meaning over half of it was not covered. Write another test case, covering all code paths.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!"
        ]
    },
    {
        "fileName": "tests/SourceImport.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Allow GithubObject.update() to be passed headers (#1300)  SourceImport.update() is really GithubObject.update(), which just calls GET on the object's URL. Refetching a source import requires an additional header, so change GithubObject.update() to pass any it is given, and add a test for SourceImport.update()  Fixes #1297",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!"
        ]
    },
    {
        "fileName": "tests/Tag.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!"
        ]
    },
    {
        "fileName": "tests/Team.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Feat: Add `html_url` property in Team Class. (#1983)  Fixes: #1942",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Filter the DeprecationWarning in Team tests (#1728)  With 1c55be51743 merged, Team.set_repo_permission() now raises a DeprecationWarning, so filter it until the method is removed.",
            "Fix #1507: Add new Teams: Add or update team repository endpoint (#1509)  * Add new Team.update_team_repository()  * Mark Team.set_repo_permission() as deprecated   Fixes #1507",
            "Add method get_team_membership for user to Team  (#1658)  * - Add method get_team_membership for user  * add typing get_team_membership for member  Fixes #1657",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Add \"get_repo_permission\" to Team class (#1416)  * Add \"get_repo_permission\" to Team class  * second attempt: - accept repo name or repo object - return github.Permissions.Permissions object - try and following CONTRIBUTING.md better  * add missing import to tests patch replay data with permission data  * assert a specific permission rather than just the type  Fixes #1415",
            "Run black over the entire tree (#1386)  It's been a while since black was run over the entire tree, and since CI still doesn't check it, we can get behind.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Added nested teams and parent (#1348)  * Added nested teams and parent  - Added github.Team.Team.get_teams() to get nested teams. - Added github.Team.Team.parent which points to the parent team.  Fixes #1337",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Add support for team discussions (#1246) (#1249)  * Add support for team discussions (#1246)  * Make a TeamDiscussion completeable",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!"
        ]
    },
    {
        "fileName": "tests/Topic.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Expand Topic class and add test coverage (#1252)  * Expand Topic class and add test coverage  * Add test coverage for Topic properties  * Fix misspelling in comment"
        ]
    },
    {
        "fileName": "tests/Workflow.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add missing arguments to Workflow.get_runs() (#2346)  Adds missing arguments created, exclude_pull_requests, head_sha to the query options of Workflow.get_runs().",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support for workflow dispatch event (#1625)  * Add support for workflow dispatch event  Fixes: #1624",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow.",
            "Add support for Workflows (#1496)  To start supporting GitHub Actions, add the first part of that, Workflow, which encapsulates a workflow over the API, along with two methods on Repository to query them."
        ]
    },
    {
        "fileName": "tests/WorkflowRun.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)",
            "Add method to delete Workflow runs (#2078)  One piece of missing functionality is the ability to delete Workflow Runs, which the GitHub API supports. Add a delete() method to WorkflowRun.  Fixes #2019",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add WorkflowRun.workflow_id (#1737)  Add the missing attribute WorkflowRun.workflow_id",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "tests/conftest.py",
        "commits": [
            "Set line length to 120 characters (#2599)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to using pytest (#1423)  Due to the recent deprecation of setup.py test, we should move with the times, and switch to a non-deprecated test runner.  Add configuration for pytest, and switch tox to using it. Remove AllTests, since it is no longer required to locate test classes, and rewrite tests/__main__.py as a pytest conftest plugin.  Also drop the test function from manage.sh, tox does a much better job."
        ]
    },
    {
        "fileName": "github/InstallationAuthorization.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/IssuePullRequest.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/NotificationSubject.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/PublicKey.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "key_id could be int on Github Enterprise (#1894)  * PublicKey.key_id can also be int, as well as str  Fixes #1878",
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "github/PullRequestPart.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Rate.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Add github.Rate.used field (#2531)  Co-authored-by: Nikolay Yurin <yurinnick@meta.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/RateLimit.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Reaction.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/RepositoryPreferences.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "github/RequiredPullRequestReviews.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/SelfHostedActionsRunner.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "github/Stargazer.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/StatsCommitActivity.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/StatsParticipation.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/StatsPunchCard.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Tag.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/TimelineEventSource.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Add missing mypy stubs (#1443)  Deployment, TimelineEvent{,Source} were missing mypy stubs, since they were added after the mypy branch was started. Add them, and clean up two spurious __future__ imports that are no longer required. Add mypy's cache directory to .gitignore"
        ]
    },
    {
        "fileName": "github/UserKey.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/View.pyi",
        "commits": [
            "Merge some simple class' type stubs back to source (#2570)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/AuthorizationApplication.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Autolink.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add support for repository autolink references (#2016)"
        ]
    },
    {
        "fileName": "github/BranchProtection.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/CheckRunAnnotation.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "github/CheckRunOutput.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "github/Clones.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/CommitStats.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitAuthor.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitBlob.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitObject.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitRef.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Drop some unimplemented methods in GitRef (#1525)  There are two unimplemented methods in GitRef, which are mostly covered by Commit.get_statuses(), remove them.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitTag.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitTree.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitTreeElement.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GitignoreTemplate.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/HookDescription.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/HookResponse.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/InputFileContent.py",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'topic/GistRenameAndDeleteFile' into develop",
            "Rename a file in a gist (issue #156)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Improve documentation",
            "Generate some repetitive doc files",
            "Fix tests and some doc",
            "Improve",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "dos2unix, chmod +x",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/InputFileContent.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/InputGitAuthor.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/InputGitTreeElement.py",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Run black over the entire tree (#1386)  It's been a while since black was run over the entire tree, and since CI still doesn't check it, we can get behind.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Allow sha=None for InputGitTreeElement (#1327)  InputGitTreeElement is used to build tree objects for Repository.create_git_tree(). However, the GitHub API allows passing sha=null to delete a file, which we don't allow. Extend the checking in InputGitTreeElement to also allow None, and add a test for good measure.  Fixes #1318",
            "Fix isort - add known first and third party",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Improve documentation",
            "Generate some repetitive doc files",
            "Fix tests and some doc",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Improve",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "dos2unix, chmod +x",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "github/InputGitTreeElement.pyi",
        "commits": [
            "Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Merge pull request #1712 from s-t-e-v-e-n-k/inputgittreeelement-typing  Correct type hint for InputGitTreeElement.sha",
            "Correct type hint for InputGitTreeElement.sha  InputGitTreeElement.sha was previously updated to accept None to allow files to be deleted, but the type hint was not updated.  Fixes #1707",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GithubException.py",
        "commits": [
            "Add `message` property to `GithubException` (#2591)",
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Merge GithubException.pyi stubs back to source (#2464)",
            "Fix CI (#2330)",
            "Export headers in GithubException (#1887)  Since the headers that led to an exception are also useful, firstly pass them into the constructor, and then export them in a property. Test one specific use case to make sure of coverage.  Fixes #1814",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "Apply black to whole codebase (#1303)",
            "Add an IncompletableObject exception (#1227)  If a returned object from GitHub does not include an URL, that object can not be completed, and used to fail with an obscure traceback saying NoneType has no method startswith. Check for this, and raise IncompletableObject instead.",
            "Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "Merge pull request #395 from jlafleche/jlf/fixExceptionPickling  Fix for pickling exception when deserializing GithubException.",
            "Fix for pickling exception when deserializing GithubException.  See: https://bugs.python.org/issue9400  \"Because CalledProcessError extends PyExc_BaseException, which defines a __reduce__ method, that special method cause the pickle load to call the exception type's __init__ method with packed self.args as arguments. So if a subclass of \"Exception\" needs to behave correctly in pickling, it should make self.args meet its __init__ method's function signature. \"",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'pr220' into develop",
            "Integrate #220 (fix tests and pep8)",
            "Added onetime_password to create_authorization  github.AuthenticatedUser.create_authorization has been modified to support two-factor authentication. When two-factor authentication is enabled create_authorization will throw an TwoFactorException. The onetime password can be then be passed to create_authorization on a subsequent call.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Don't use a try-except for a usual execution flow in GithubObject.update  (and factorize assignment of headers in _storeAndUseAttributes, as done for rawData)",
            "Review of #189: pep8, copyrights, style, remarks  For remarks, run: git grep \"#189\" They are only my first thoughts while reviewing this pull request, and should be reviewed themselves.",
            "Add NotModifiedException class",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Add two new types of exceptions (issue #152)",
            "Merge branch 'topic/SpecificExceptions' into develop",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Add a documentation note about exceptions",
            "Raise a specific exception for non-existing objects (issue #152)",
            "Raise a specific exception for bad credentials (issue #152)",
            "Add (a bit of) documentation about error handling and exceptions",
            "Merge branch 'develop'",
            "Change home page",
            "Generate some repetitive doc files",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Simplify understanding of GithubExceptions by displaying the error message from Github",
            "Move generated code to 'github' instead of 'src/github'"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testOrgVariable.txt",
        "commits": [
            "Add support for repo and org level actions variables (#2580)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testRepoVariable.txt",
        "commits": [
            "Add support for repo and org level actions variables (#2580)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Workflow.testGetRunsWithHeadSha.txt",
        "commits": [
            "Add missing arguments to Workflow.get_runs() (#2346)  Adds missing arguments created, exclude_pull_requests, head_sha to the query options of Workflow.get_runs()."
        ]
    },
    {
        "fileName": ".github/workflows/_build-pkg.yml",
        "commits": [
            "CI: Build and check package before release (#2593)"
        ]
    },
    {
        "fileName": "github/Issue.pyi",
        "commits": [
            "Merge `Issue.pyi` back to source (#2568)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status",
            "Add get_timeline() to Issue's type stubs (#1663)  Add get_timeline() to Issue's type stubs",
            "Make Issue.closed_by nullable (#1629)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/WorkflowRun.pyi",
        "commits": [
            "Merge `WorkflowRun` type stub back to source (#2554)",
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)",
            "Add WorkflowRun.workflow_id (#1737)  Add the missing attribute WorkflowRun.workflow_id",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "github/ApplicationOAuth.pyi",
        "commits": [
            "Merge `ApplicationOAuth.pyi` back to source (#2569)",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Fix CI (#2330)",
            "Add typing files for OAuth classes (#1656)  The additional classes added for OAuth predated the inclusion of typing files, add them for the new classes."
        ]
    },
    {
        "fileName": "tests/ReplayData/RateLimiting.testGetRateLimit.txt",
        "commits": [
            "Add github.Rate.used field (#2531)  Co-authored-by: Nikolay Yurin <yurinnick@meta.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/RateLimiting.testRateLimiting.txt",
        "commits": [
            "Add github.Rate.used field (#2531)  Co-authored-by: Nikolay Yurin <yurinnick@meta.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/RateLimiting.testResetTime.txt",
        "commits": [
            "Add github.Rate.used field (#2531)  Co-authored-by: Nikolay Yurin <yurinnick@meta.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/Branch.pyi",
        "commits": [
            "Merge `Branch` type stubs back to source (#2571)  Introduces new helper methods `is_defined`, `is_undefined`, `is_optional`, `is_optional_list` that is going to simplify input assertions in all our methods.  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Fix `Branch.bypass_pull_request_allowances` failing with \"nil is not an object\" (#2535)  Signed-off-by: Thomas Devoogdt <thomas@devoogdt.com>",
            "Add missing attributes to Branch (#2512)  Co-authored-by: Juan Manuel \"Kang\" Perez <devel@kangmak.es>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "pytest.ini",
        "commits": [
            "CI: Make pytest color logs (#2597)",
            "Switch to using pytest (#1423)  Due to the recent deprecation of setup.py test, we should move with the times, and switch to a non-deprecated test runner.  Add configuration for pytest, and switch tox to using it. Remove AllTests, since it is no longer required to locate test classes, and rewrite tests/__main__.py as a pytest conftest plugin.  Also drop the test function from manage.sh, tox does a much better job."
        ]
    },
    {
        "fileName": "tests/ReplayData/RequesterThrottled.testShouldDeferRequests.txt",
        "commits": [
            "Remove symlinks from test data (#2588)",
            "Remove symlinks from test data (#2588)",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits"
        ]
    },
    {
        "fileName": "tests/ReplayData/RequesterThrottled.testShouldDeferWrites.txt",
        "commits": [
            "Remove symlinks from test data (#2588)",
            "Remove symlinks from test data (#2588)",
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits"
        ]
    },
    {
        "fileName": ".github/FUNDING.yml",
        "commits": [
            "Add myself to funding (#2585)",
            "Add myself to funding and maintainers (#1435)  I think the time is right is add myself to these two files!",
            "Create FUNDING.yml"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditProtection.txt",
        "commits": [
            "Fix `Branch.bypass_pull_request_allowances` failing with \"nil is not an object\" (#2535)  Signed-off-by: Thomas Devoogdt <thomas@devoogdt.com>",
            "Add missing attributes to Branch (#2512)  Co-authored-by: Juan Manuel \"Kang\" Perez <devel@kangmak.es>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditProtectionDismissalUsersWithUserOwnedBranch.txt",
        "commits": [
            "Fix `Branch.bypass_pull_request_allowances` failing with \"nil is not an object\" (#2535)  Signed-off-by: Thomas Devoogdt <thomas@devoogdt.com>",
            "Add missing attributes to Branch (#2512)  Co-authored-by: Juan Manuel \"Kang\" Perez <devel@kangmak.es>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditProtectionPushRestrictionsAndDismissalUser.txt",
        "commits": [
            "Fix `Branch.bypass_pull_request_allowances` failing with \"nil is not an object\" (#2535)  Signed-off-by: Thomas Devoogdt <thomas@devoogdt.com>",
            "Add missing attributes to Branch (#2512)  Co-authored-by: Juan Manuel \"Kang\" Perez <devel@kangmak.es>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "requirements-types.txt",
        "commits": [
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Force Unix EOL (#2573)",
            "[CI] Moving linting into separate workflow (#2522)"
        ]
    },
    {
        "fileName": "tests/Download.py",
        "commits": [
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Event.py",
        "commits": [
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue54.py",
        "commits": [
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReleaseAsset.py",
        "commits": [
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Clean up tests for GitReleaseAsset (#1546)  The test class for GitReleaseAsset did not match the filename, was also the only class to include docstrings, and furthermore, repeated a lot of fetches in the replay data."
        ]
    },
    {
        "fileName": "tests/Time.py",
        "commits": [
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps."
        ]
    },
    {
        "fileName": "tests/Traffic.py",
        "commits": [
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps."
        ]
    },
    {
        "fileName": "tests/WorkflowJob.py",
        "commits": [
            "Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>",
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/RequesterUnThrottled.testShouldNotDeferRequests.txt",
        "commits": [
            "Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits"
        ]
    },
    {
        "fileName": "tests/PullRequest1682.py",
        "commits": [
            "Force Unix EOL (#2573)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Added support for `Repository.get_workflow_runs` parameters (#1682)  * Added support for `Repository.get_workflow_runs` parameters  * Added anchor tag to docstring link  * Tests"
        ]
    },
    {
        "fileName": "tests/PullRequest1684.py",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "tests/ReplayData/Artifact.setUp.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Artifact.testGetArtifactsFromRepo.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Artifact.testGetArtifactsFromRepoWithName.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Artifact.testGetArtifactsFromWorkflow.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Artifact.testGetArtifactsFromWorkflowWithName.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Artifact.testGetNonexistentArtifact.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Artifact.testGetSingleArtifactFromRepo.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1682.setUp.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for `Repository.get_workflow_runs` parameters (#1682)  * Added support for `Repository.get_workflow_runs` parameters  * Added anchor tag to docstring link  * Tests"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1682.test_no_parameters.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for `Repository.get_workflow_runs` parameters (#1682)  * Added support for `Repository.get_workflow_runs` parameters  * Added anchor tag to docstring link  * Tests"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1682.test_object_parameters.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for `Repository.get_workflow_runs` parameters (#1682)  * Added support for `Repository.get_workflow_runs` parameters  * Added anchor tag to docstring link  * Tests"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1682.test_string_parameters.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for `Repository.get_workflow_runs` parameters (#1682)  * Added support for `Repository.get_workflow_runs` parameters  * Added anchor tag to docstring link  * Tests"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1684.setUp.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1684.testDeleteRunnerId.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1684.testDeleteRunnerObject.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1684.testGetRunners.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "tests/ReplayData/SelfHostedActionsRunner.setUp.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "tests/ReplayData/SelfHostedActionsRunner.testAttributes.txt",
        "commits": [
            "Force Unix EOL (#2573)",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "tests/SelfHostedActionsRunner.py",
        "commits": [
            "Force Unix EOL (#2573)",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners"
        ]
    },
    {
        "fileName": "github/Artifact.pyi",
        "commits": [
            "Merge `Artifact` type stub back to source (#2553)",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>"
        ]
    },
    {
        "fileName": "github/AppAuthentication.py",
        "commits": [
            "Release 1.59.0 (#2563)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "merge AppAuthentication.pyi to source (#2519)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testAppInstallationAuthAuthentication.txt",
        "commits": [
            "Test and fix UTC issue with AppInstallationAuth (#2561)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`."
        ]
    },
    {
        "fileName": "MAINTAINERS",
        "commits": [
            "Update MAINTAINERS (#2545)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add myself to funding and maintainers (#1435)  I think the time is right is add myself to these two files!",
            "Add @sfdye to MAINTAINERS",
            "update project files",
            "add MAINTAINERS file  [skip ci]"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetHookDeliveries.txt",
        "commits": [
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetHookDelivery.txt",
        "commits": [
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetHookDeliveries.txt",
        "commits": [
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetHookDelivery.txt",
        "commits": [
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetHookDeliveries.txt",
        "commits": [
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetHookDelivery.txt",
        "commits": [
            "Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/WorkflowJob.setUp.txt",
        "commits": [
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/WorkflowJob.testAttributes.txt",
        "commits": [
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/WorkflowRun.test_jobs.txt",
        "commits": [
            "Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/PaginatedList.pyi",
        "commits": [
            "Merge PaginatedList.pyi back to source (#2555)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Fix CI (#2330)",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/AccessToken.pyi",
        "commits": [
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.",
            "Add typing files for OAuth classes (#1656)  The additional classes added for OAuth predated the inclusion of typing files, add them for the new classes."
        ]
    },
    {
        "fileName": "github/Authorization.pyi",
        "commits": [
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/GithubObject.pyi",
        "commits": [
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Add support for new RepositoryAdvisories API :tada: (#2483)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add query `check_suite_id` integer to `Workflow.get_runs` (#2466)",
            "Small improvements to typing (#1517)  Work through some of the errors when running mypy with --strict.",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "github/Requester.pyi",
        "commits": [
            "merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>",
            "Fix auth issues with `Installation.get_repos` (#2547)",
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Raise error on unsupported redirects, log supported redirects (#2524)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add retry and pool_size to typing (#2151)",
            "Fix CI (#2330)",
            "Add type to OrderedDict (#1954)  OrderedDict needs to be typed just like Dict needs to be typed.  The OrderedDict \"input\" variable key and value are used to append to a string without any processing, so it seems unlikely that something other than a string would be valid.",
            "Do not import from unpackaged paths in typing (#1926)  The tests path is not part of the shipped project, thus this type cannot be checked by users of this project.  The correct type in place of the type imported from tests appears to be Optional[     Union[HTTPRequestsConnectionClass, HTTPSRequestsConnectionClass] ]",
            "Correct **kwargs typing for search_* (#1636)  It turns out typing for **kwargs is always Dict[str, Type], so only the type is required.  Fixes #1633",
            "Remove \"api_preview\" parameter from type stubs and docstrings (#1559)",
            "Small improvements to typing (#1517)  Work through some of the errors when running mypy with --strict.",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubApp.testGetAuthenticatedApp.txt",
        "commits": [
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12.",
            "Add initial support for Github Apps. (#1631)  * Add initial support for Github Apps.  Needed for #1621"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetApp.txt",
        "commits": [
            "Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12."
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testCreateComment.txt",
        "commits": [
            "Allow multiline comments in PullRequest (#2540)  - change deprecated parameter position to line - add a parameter to allow multiline comment: start_line - add a parameter to allow comment as suggestion: as_suggestion - add more missing parameters: side, start_side, in_reply_to, subject_type",
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testCreateMultilineReviewComment.txt",
        "commits": [
            "Allow multiline comments in PullRequest (#2540)  - change deprecated parameter position to line - add a parameter to allow multiline comment: start_line - add a parameter to allow comment as suggestion: as_suggestion - add more missing parameters: side, start_side, in_reply_to, subject_type"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testCreateMultilineReviewCommentAsSuggestion.txt",
        "commits": [
            "Allow multiline comments in PullRequest (#2540)  - change deprecated parameter position to line - add a parameter to allow multiline comment: start_line - add a parameter to allow comment as suggestion: as_suggestion - add more missing parameters: side, start_side, in_reply_to, subject_type"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testCreateMultilineReviewCommentChoosingSide.txt",
        "commits": [
            "Allow multiline comments in PullRequest (#2540)  - change deprecated parameter position to line - add a parameter to allow multiline comment: start_line - add a parameter to allow comment as suggestion: as_suggestion - add more missing parameters: side, start_side, in_reply_to, subject_type"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testCreateReviewCommentInReplyTo.txt",
        "commits": [
            "Allow multiline comments in PullRequest (#2540)  - change deprecated parameter position to line - add a parameter to allow multiline comment: start_line - add a parameter to allow comment as suggestion: as_suggestion - add more missing parameters: side, start_side, in_reply_to, subject_type"
        ]
    },
    {
        "fileName": "tests/ReplayData/ApplicationOAuth.testGetAccessTokenBadCode.txt",
        "commits": [
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`."
        ]
    },
    {
        "fileName": "tests/ReplayData/ApplicationOAuth.testGetAccessTokenUnknownError.txt",
        "commits": [
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`."
        ]
    },
    {
        "fileName": "tests/ReplayData/ApplicationOAuth.testGetAccessTokenWithExpiry.txt",
        "commits": [
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`."
        ]
    },
    {
        "fileName": "tests/ReplayData/ApplicationOAuth.testRefreshAccessToken.txt",
        "commits": [
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`."
        ]
    },
    {
        "fileName": "tests/ReplayData/ApplicationOAuth.testRefreshAccessTokenBadCode.txt",
        "commits": [
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`."
        ]
    },
    {
        "fileName": "tests/ReplayData/ApplicationOAuth.testRefreshAccessTokenUnknownError.txt",
        "commits": [
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`."
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testAppUserAuthentication.txt",
        "commits": [
            "Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`."
        ]
    },
    {
        "fileName": "tests/ReplayData/Environment.setUp.txt",
        "commits": [
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Environment.testCreateEnvironment.txt",
        "commits": [
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Environment.testDeleteEnvironment.txt",
        "commits": [
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Environment.testGetEnvironments.txt",
        "commits": [
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Environment.testReviewers.txt",
        "commits": [
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Environment.testUpdateEnvironment.txt",
        "commits": [
            "Add support for environments (#2223)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Installation.setUp.txt",
        "commits": [
            "Fix auth issues with `Installation.get_repos` (#2547)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Installation.testGetRepos.txt",
        "commits": [
            "Fix auth issues with `Installation.get_repos` (#2547)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.setUp.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.testAddVulnerability.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.testCreateRepositoryAdvisory.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.testGetAdvisories.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.testOfferCredit.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.testOfferCredits.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.testRemoveCredit.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.testRepositoryWithNoAdvisories.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.testUpdateRepositoryAdvisory.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "tests/ReplayData/RepositoryAdvisory.testUpdateSingleFieldDoesNotRemoveOtherFields.txt",
        "commits": [
            "Add support for new RepositoryAdvisories API :tada: (#2483)"
        ]
    },
    {
        "fileName": "doc/examples.rst",
        "commits": [
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Add some examples for Branch (#936)  In the spirit of #874, add some examples for working with Branch objects. It doesn't add everything, but it's a start.",
            "Example: Listen for New Events with PyGithub and Pyramid (#930)  ## What does this change do? Adds a small demo implementation of how one might use webhooks to listen for new events in a given repository.  ### Additions #### doc/examples/Webhook.rst Adds a new `.rst` file, `Webhook.rst`, which can be used for demonstrating the usage of Webhooks in PyGithub.  The example that I've added shows how to continually listen for events using Pyramid in conjunction with PyGithub.  ## Motivation This example is in the spirit of #874. [It was asked](https://github.com/PyGithub/PyGithub/issues/874#issuecomment-429075695) that someone provide an example of how to listen to events from a repository.  ## How has this been tested? I've built the docs locally and made sure the HTML is generated as expected.  ## Screenshots ![webhook1](https://user-images.githubusercontent.com/16039329/46991191-40e58900-d0db-11e8-87e4-d5cf2cc18b0a.png) ![webhook2](https://user-images.githubusercontent.com/16039329/46991193-42af4c80-d0db-11e8-9b20-678f70e6baee.png)",
            "New use examples (#920)  This PR add the follow code examples  * Issue examples (get list, get specific issue, create issue) * Milestone examples (get list, get specific milestone, create milestone)  Ref.: https://github.com/PyGithub/PyGithub/issues/874",
            "Add Pull Request Examples (#875)  Per @sfdye request, here is an example to acquire Pull Requests.",
            "Set up example docs skeleton"
        ]
    },
    {
        "fileName": "tests/PoolSize.py",
        "commits": [
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`.",
            "Merge pull request #1818 from apahim/define_pool_size  Make requests pool_size configurable",
            "Enabling connetion pool_size definition  requests has a default connections pool of 10. Creating multiple threads will consume from that same pool, since the underlying implementation of the requests pool is a singletown.  Let's make the pool_size configurable, so clients can set the proper number for their use case when running multiple threads.  Signed-off-by: Amador Pahim <apahim@redhat.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testAppAuthTokenAuthentication.txt",
        "commits": [
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`."
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testLoginAuthentication.txt",
        "commits": [
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`."
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testTokenAuthentication.txt",
        "commits": [
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`."
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testAppAuth.txt",
        "commits": [
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`."
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testDeprecatedAppAuth.txt",
        "commits": [
            "Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`."
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.setUp.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`",
            "Add and handle the maintainer_can_modify attribute in PullRequest (#1465)",
            "Add assignee removal/addition support to PRs (#1241)  Add assignee removal/addition support to PRs Fixes #1109  Add test for new PR assignee functionality  Add record file  Addressed comments on #1016"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testAddAndRemoveAssignees.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`",
            "Don't transform completely in PullRequest.*assignees (#1428)  The two methods PullRequest.add_to_assignees() and PullRequest.remove_from_assignees() are special, in that they call POST/DELETE on the issue_url of the pull request, and then transform all their attributes based on what was returned. This has a number of effects, none of them any good for calling new methods on the same pull request object. Instead, only pull out the changed attribute and use that. Also change the returned URL for the POST call in the replay data to match what GitHub returns.  Fixes #1406",
            "Correct URL for assignees on PRs (#1296)  The URL that was used for POST/DELETE when adding and removing assignees was the PR itself, when it should be the issue_url.  Fixes #1294",
            "Add assignee removal/addition support to PRs (#1241)  Add assignee removal/addition support to PRs Fixes #1109  Add test for new PR assignee functionality  Add record file  Addressed comments on #1016"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testAddAndRemoveLabels.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testAddAndRemoveLabelsWithStringArguments.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testCreateIssueComment.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testDeleteAndSetLabels.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testDeleteAndSetLabelsWithStringArguments.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testEditWithoutArguments.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testGetComments.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testGetCommits.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testGetFiles.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`",
            "[WorkflowRun] - Add missing attributes (`run_started_at` & `run_attempt`), remove deprecated `unicode` type (#2273)"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testGetIssueComment.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testGetIssueComments.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testGetIssueEvents.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`",
            "Adds `get_issue_events` to `PullRequest` object (#1154)  * Adds `get_issue_events` to `PullRequest` object  * Add unit test for  * Fix PullRequest.get_issue_events unit test  Use actual event ids...  * Fix missing import on PullRequest.  I wish the unit tests would run in Python3...  * Add PulReqeust.testGetIssueEvents ReplayData  * Updating replay data to use developer's personal credentials."
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testGetLabels.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testGetReviewComments.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testMerge.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testMergeWithCommitMessage.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testReviewRequests.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testUpdateBranch.txt",
        "commits": [
            "Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`",
            "PullRequest.update_branch(): allow expected_head_sha to be empty (#1412)  * PullRequest.update_branch(): allow expected_head_sha to be empty  * PullRequest.testUpdateBranch(): test also with empty expected_head_sha  * Updated replay data for PullRequest.testUpdateBranch  * tox formatted changes",
            "Add support for update branch  (#1317)  * Add Support for PullRequest update-branch  * Add test case  * Fix test case  * Add test data record  * Update PullRequest.py  * Update PullRequest.py  * Support py2.7  * Assert response status is 202  * black + isort"
        ]
    },
    {
        "fileName": "tests/Artifact.py",
        "commits": [
            "Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>",
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>"
        ]
    },
    {
        "fileName": "tests/ReplayData/WorkflowRun.setUp.txt",
        "commits": [
            "Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "tests/ReplayData/WorkflowRun.test_cancel.txt",
        "commits": [
            "Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "tests/ReplayData/WorkflowRun.test_delete.txt",
        "commits": [
            "Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)",
            "Add method to delete Workflow runs (#2078)  One piece of missing functionality is the ability to delete Workflow Runs, which the GitHub API supports. Add a delete() method to WorkflowRun.  Fixes #2019"
        ]
    },
    {
        "fileName": "tests/ReplayData/WorkflowRun.test_rerun.txt",
        "commits": [
            "Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "tests/ReplayData/WorkflowRun.test_rerun_with_successful_run.txt",
        "commits": [
            "Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "tests/ReplayData/WorkflowRun.test_timing.txt",
        "commits": [
            "Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)",
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateFork.txt",
        "commits": [
            "Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateFork.txt",
        "commits": [
            "Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test."
        ]
    },
    {
        "fileName": "github/AppAuthentication.pyi",
        "commits": [
            "merge AppAuthentication.pyi to source (#2519)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "github/GithubException.pyi",
        "commits": [
            "Merge GithubException.pyi stubs back to source (#2464)",
            "Fix CI (#2330)",
            "Export headers in GithubException (#1887)  Since the headers that led to an exception are also useful, firstly pass them into the constructor, and then export them in a property. Test one specific use case to make sure of coverage.  Fixes #1814",
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490",
            "Reuse pre-commit checks in CI (#1442)  * Use pre-commit checks in CI  * Fix all issues flagged by mypy  * Update travis.yml to reflect testenv changes  * Update docs to use tox lint",
            "Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testCreateGitTagAndRelease.txt",
        "commits": [
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testDelete.txt",
        "commits": [
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testUpdate.txt",
        "commits": [
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testUploadAsset.txt",
        "commits": [
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testUploadAssetFileLike.txt",
        "commits": [
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testUploadAssetFromMemory.txt",
        "commits": [
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testUploadAssetWithName.txt",
        "commits": [
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)",
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreateGitRelease.txt",
        "commits": [
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreateGitReleaseWithAllArguments.txt",
        "commits": [
            "Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Requester.testBaseUrlHostRedirection.txt",
        "commits": [
            "Raise error on unsupported redirects, log supported redirects (#2524)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Requester.testBaseUrlPortRedirection.txt",
        "commits": [
            "Raise error on unsupported redirects, log supported redirects (#2524)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Requester.testBaseUrlPrefixRedirection.txt",
        "commits": [
            "Raise error on unsupported redirects, log supported redirects (#2524)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Requester.testBaseUrlSchemeRedirection.txt",
        "commits": [
            "Raise error on unsupported redirects, log supported redirects (#2524)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Requester.testLoggingRedirection.txt",
        "commits": [
            "Raise error on unsupported redirects, log supported redirects (#2524)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditProtectionPushRestrictionsWithUserOwnedBranch.txt",
        "commits": [
            "Add missing attributes to Branch (#2512)  Co-authored-by: Juan Manuel \"Kang\" Perez <devel@kangmak.es>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateRepoWithAllArguments.txt",
        "commits": [
            "Add allow_update_branch option to Organization (#2465)",
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test.",
            "Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.setUp.txt",
        "commits": [
            "Add support for Issue.state_reason #2370 (#2392)  Co-authored-by: Nicolas Schweitzer <nicolas.schweitzer@amadeus.com>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testEditWithStateReasonNotPlanned.txt",
        "commits": [
            "Add support for Issue.state_reason #2370 (#2392)  Co-authored-by: Nicolas Schweitzer <nicolas.schweitzer@amadeus.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testEditWithStateReasonReopened.txt",
        "commits": [
            "Add support for Issue.state_reason #2370 (#2392)  Co-authored-by: Nicolas Schweitzer <nicolas.schweitzer@amadeus.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest2408.setUp.txt",
        "commits": [
            "Add parameters to Repository.get_workflow_runs (#2408)"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest2408.test_get_workflow_runs.txt",
        "commits": [
            "Add parameters to Repository.get_workflow_runs (#2408)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testAppAuthentication.txt",
        "commits": [
            "Fix GithubIntegration using exiring jwt (#2460)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetAccessToken.txt",
        "commits": [
            "Fix GithubIntegration using exiring jwt (#2460)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetAccessTokenForNoInstallation.txt",
        "commits": [
            "Fix GithubIntegration using exiring jwt (#2460)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetAccessTokenWithExpiredJWT.txt",
        "commits": [
            "Fix GithubIntegration using exiring jwt (#2460)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetAccessTokenWithInvalidPermissions.txt",
        "commits": [
            "Fix GithubIntegration using exiring jwt (#2460)",
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": ".github/release-drafter.yml",
        "commits": [
            "Add release drafter and pubilsh on tag creation (#2428)"
        ]
    },
    {
        "fileName": ".gitignore",
        "commits": [
            "Add unarchiving support (#2391)",
            "Turn on coverage reporting for codecov (#1522)  Since we migrated from Travis to GitHub Actions, our coverage on codecov has been reporting as 0%, since uploading the .coverage file is a terrible idea. Turn on XML-based reporting, ignore the file and use that when we upload to codecov.",
            "Add missing mypy stubs (#1443)  Deployment, TimelineEvent{,Source} were missing mypy stubs, since they were added after the mypy branch was started. Add them, and clean up two spurious __future__ imports that are no longer required. Add mypy's cache directory to .gitignore",
            "Add tox (#1388)  * Add tox.ini  * Fix typo  * Update .gitignore  * Move flake8 to tox  * Add py35  * Add Coverage  * Add Coverage  * Add Coverage  * Add Coverage  * Add black  * Add black  * Add black  * Skip black for py35  * Add isort  * Update contributing docs  * Remove empty line",
            "Ability to filter repository collaborators (#938)  ## Changes - Add `affiliation` parameter to `get_collaborators()` and use it to filter collaborators through the API - Resolves #937   PS: Would have loved to add a simple test for this but there seems to be a problem on my end using OAuth as I'm just not able to authenticate to the API during tests.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Decode jwt bytes object in Python 3 (#633)",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases",
            "update doc url everywhere (#420)",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #290 from ndahlquist/develop  Change InputGitAuthor to reflect that time is an optional parameter.",
            "Change InputGitAuthor to reflect that time is an optional parameter.",
            "Fix doc (#224)",
            "Twitt about releases",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Add update() method",
            "Merge branch 'develop'",
            "Update .gitignore to ignore eproject settings and custom build batch files",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Ignore local clone of reference doc",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Measure coverage simply in publish.sh",
            "Fixes for Python 3: setup.py install will call 2to3  We temporary loose coverage measurement... again!",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "Fixes for issue #86",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Generate more coverage information",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test",
            "Merge branch 'develop'",
            "Merge branch 'topic/SplitIntegrationTests' into develop",
            "On the way to modular integration test",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/PlaybackIntegrationTest' into develop",
            "Record and replay integration tests!",
            "Upload to the Python Package Index",
            "First integration test",
            "Initiate a rewrite"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetAccessTokenWithInvalidData.txt",
        "commits": [
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetAppInstallation.txt",
        "commits": [
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetInstallationNotFound.txt",
        "commits": [
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetInstallationWithExpiredJWT.txt",
        "commits": [
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetInstallations.txt",
        "commits": [
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetOrgInstallation.txt",
        "commits": [
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetRepoInstallation.txt",
        "commits": [
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubIntegration.testGetUserInstallation.txt",
        "commits": [
            "Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
        ]
    },
    {
        "fileName": "doc/examples/Repository.rst",
        "commits": [
            "Add code scanning alerts (#2227)",
            "Drop Travis in favor of Github workflow (#1488)  * Drop Travis CI  * Update DEPLOY.md about new workflow of uploading new version to PyPI  * Upload coverage data to Codecov  Co-Authored-By: Steve Kowalik <steven@wedontsleep.org>",
            "Fix all but one sphinx warnings (#1346)  To hopefully correct our doc build, tidy up some of the warnings that sphinx complains about. The one remaining one is legitimate.",
            "Fix bug in repository create new file example PyGithub#1210 (#1211)  * Fix bug in repository create new file example (#1211)  the previous code would throw an 'error path cannot start with a slash' . Now fixed it by removing a slash in the example.   Fixes: #1210",
            "Fix bug in recursive repository contents example (#1166)  The previous code would prematurely exit when the intermediate contents list holds one thing, and that one thing has not been processed / expanded yet. Now the exit condition is when the contents list is empty, and there is nothing left to be processed.",
            "Update Repository.rst (#1118)  the example confused me until I found https://github.com/PyGithub/PyGithub/issues/545",
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926",
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead.",
            "Update Repository.rst (#935)  stargazers count attribute  is misspelled",
            "Add a trailing slash to URL when updating or deleting a file (tests fixed) (#931)  * Add a trailing slash to URL when updating or deleting a file.  * Update test files to match new create/update/delete_file Repo methods  * Add trailing slash to get_contents() method  * update tests  * add missing slash in get_dir_contents  * add example usage  * remove dup slashes in tests  * clarify example comments",
            "Add examples for Repository as per #874 (#917)",
            "Set up example docs skeleton"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCodeScanAlerts.txt",
        "commits": [
            "Add code scanning alerts (#2227)"
        ]
    },
    {
        "fileName": "tests/ReplayData/ExposeAllAttributes.testAllClasses.txt",
        "commits": [
            "[WorkflowRun] - Add missing attributes (`run_started_at` & `run_attempt`), remove deprecated `unicode` type (#2273)",
            "Merge `get_file_contents` with `get_contents`",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequestFile.setUp.txt",
        "commits": [
            "[WorkflowRun] - Add missing attributes (`run_started_at` & `run_attempt`), remove deprecated `unicode` type (#2273)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetAutolinks.txt",
        "commits": [
            "Add support for repository autolink references (#2016)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testRemoveAutolink.txt",
        "commits": [
            "Add support for repository autolink references (#2016)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Artifact.testDelete.txt",
        "commits": [
            "Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>"
        ]
    },
    {
        "fileName": ".git-blame-ignore-revs",
        "commits": [
            "Fix typo in blame ignore revs (#2342)",
            "Fix CI (#2330)",
            "Ignore pyupgrade commit for git blame (#1785)  Since the pyupgrade commit makes a large amount of changes, ignore the commit by default with git blame.",
            "Ignore new black formatting commit for git blame (#1680)  To make git blame tagging easier to follow, ignore the commit that made sweeping changes with the new black version.",
            "Ignore some isort change",
            "Add .git-blame-ignore-revs"
        ]
    },
    {
        "fileName": ".github/stale.yml",
        "commits": [
            "Relax stale to 180 days (#2331)",
            "Do not auto-close issues with high priority tag",
            "github/stale: use a stale label (#837)  Previously it was defaulting to `wontfix` which may not be the case if an issue just goes idle.",
            "Add stale bot"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateRepoFromTemplate.txt",
        "commits": [
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateRepoFromTemplateWithAllArguments.txt",
        "commits": [
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateRepoFromTemplate.txt",
        "commits": [
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateRepoFromTemplateWithAllArguments.txt",
        "commits": [
            "Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreateForkOrg.txt",
        "commits": [
            "Improve signature of Repository.create_repo (#2118)  The docstring stated that `\"*\"` and `\"none\"` were valid values for the organization, but neither was actually supported (unless your organization was called `\"none\"`).  Remove the misleading information from the docstring, and add support for passing in an actual `Organization` object, for better typing and reliability properties.  Fixes #2116"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue80.testIgnoreHttpsFromGithubEnterprise.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue80.testIgnoreHttpsFromGithubEnterpriseWithPort.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateRepoWithMinimalArguments.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test."
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateRepositoryWithAutoInit.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test."
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testCreateTeamWithAllArguments.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add description field when creating a new team (#1125)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetRepos.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test."
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetReposSorted.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test.",
            "Add sorting capability to Organization.get_repos() (#1139)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetReposWithType.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test."
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetTeams.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446"
        ]
    },
    {
        "fileName": "tests/ReplayData/Team.testRepoPermission.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446"
        ]
    },
    {
        "fileName": "tests/ReplayData/Team.testRepos.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Add \"get_repo_permission\" to Team class (#1416)  * Add \"get_repo_permission\" to Team class  * second attempt: - accept repo name or repo object - return github.Permissions.Permissions object - try and following CONTRIBUTING.md better  * add missing import to tests patch replay data with permission data  * assert a specific permission rather than just the type  Fixes #1415"
        ]
    },
    {
        "fileName": "tests/ReplayData/Team.testUpdateTeamRepository.txt",
        "commits": [
            "Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446",
            "Fix #1507: Add new Teams: Add or update team repository endpoint (#1509)  * Add new Team.update_team_repository()  * Mark Team.set_repo_permission() as deprecated   Fixes #1507"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testRenameBranchObject.txt",
        "commits": [
            "Add Repository.rename_branch method (#2089)  The GitHub API exposes an endpoint to rename a branch, so we should support calling it. Sadly, there is not enough information to add that method to the Branch class, so expose it in the Repository object.  Fixes #1901"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testRenameBranchString.txt",
        "commits": [
            "Add Repository.rename_branch method (#2089)  The GitHub API exposes an endpoint to rename a branch, so we should support calling it. Sadly, there is not enough information to add that method to the Branch class, so expose it in the Repository object.  Fixes #1901"
        ]
    },
    {
        "fileName": "tests/PullRequestReview1856.py",
        "commits": [
            "Add function to delete pending reviews on a pull request (#1897)  Add a delete method to PullRequestReview to allow dismissing them.  Fixes #1856   Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu>"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequestReview1856.setUp.txt",
        "commits": [
            "Add function to delete pending reviews on a pull request (#1897)  Add a delete method to PullRequestReview to allow dismissing them.  Fixes #1856   Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu>"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequestReview1856.testDelete.txt",
        "commits": [
            "Add function to delete pending reviews on a pull request (#1897)  Add a delete method to PullRequestReview to allow dismissing them.  Fixes #1856   Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Search.testSearchCommits.txt",
        "commits": [
            "Cover all code paths in search_commits (#2087)  The search_commits method was only very lightly tested, meaning over half of it was not covered. Write another test case, covering all code paths."
        ]
    },
    {
        "fileName": "tests/ReplayData/PaginatedList.testTotalCountWithDictionary.txt",
        "commits": [
            "Correctly deal when PaginatedList's data is a dict (#2084)  When calculating totalCount for a PaginatedList, if a Link header is not in the returned data, we use len() to calculate the number of items. PullRequest.get_review_requests() actually returns a dictionary, which neatly defeats this naive method. Peer inside the dictionary in this case, and add a test case.  Fixes #2053"
        ]
    },
    {
        "fileName": "doc/examples/Issue.rst",
        "commits": [
            "Add comment on issue example (#2081)  Add an example showing how to comment on an existing issue.",
            "Add close all issues example (#1256)",
            "New use examples (#920)  This PR add the follow code examples  * Issue examples (get list, get specific issue, create issue) * Milestone examples (get list, get specific milestone, create milestone)  Ref.: https://github.com/PyGithub/PyGithub/issues/874"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testAttributes.txt",
        "commits": [
            "Add two_factor_authentication in AuthenticatedUser. (#1972)  Fixes #1971",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization2072.setUp.txt",
        "commits": [
            "Implement organization.cancel_invitation() (#2072)  Implement a new function cancel_invitation for github.Organization objects, allowing for cancellation of organization invitations."
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization2072.testCancelInvitation.txt",
        "commits": [
            "Implement organization.cancel_invitation() (#2072)  Implement a new function cancel_invitation for github.Organization objects, allowing for cancellation of organization invitations."
        ]
    },
    {
        "fileName": "tests/ReplayData/Team.setUp.txt",
        "commits": [
            "Feat: Add `html_url` property in Team Class. (#1983)  Fixes: #1942",
            "Fix #1507: Add new Teams: Add or update team repository endpoint (#1509)  * Add new Team.update_team_repository()  * Mark Team.set_repo_permission() as deprecated   Fixes #1507"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testIssue2030CreateProject.txt",
        "commits": [
            "Correct replay for Organization.create_project() test (#2075)  The just landed test case for Organization.create_project() used the wrong Authorization headers, correct it.",
            "Add type hint for Organization.create_project() (#2032)  Organization.create_project() did not have a type hint, add one, and a test case."
        ]
    },
    {
        "fileName": "tests/Issue2030.py",
        "commits": [
            "Add type hint for Organization.create_project() (#2032)  Organization.create_project() did not have a type hint, add one, and a test case."
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetNotifications.txt",
        "commits": [
            "Fix AuthenticatedUser ReplayData with parameters (#2074)  A recently merged change modified AuthenticatedUser.get_notifications() in how it passes boolean parameters, but did not modify the replay data. Do so now.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetNotificationsWithOtherArguments.txt",
        "commits": [
            "Fix AuthenticatedUser ReplayData with parameters (#2074)  A recently merged change modified AuthenticatedUser.get_notifications() in how it passes boolean parameters, but did not modify the replay data. Do so now.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Equality.py",
        "commits": [
            "Implement hash for CompletableGithubObject (#1922)  Since CompletableGithubObject already uses its URL attribute to implement equality, extend it to also use that attribute for hashing.  Fixes #1826",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/PublicKey.testAttributes.txt",
        "commits": [
            "key_id could be int on Github Enterprise (#1894)  * PublicKey.key_id can also be int, as well as str  Fixes #1878"
        ]
    },
    {
        "fileName": "tests/ReplayData/PublicKey.testAttributes_with_int_key_id.txt",
        "commits": [
            "key_id could be int on Github Enterprise (#1894)  * PublicKey.key_id can also be int, as well as str  Fixes #1878"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testEmails.txt",
        "commits": [
            "Adjust to Github API changes regarding emails (#1890)  Handle AuthenticatedUser.get_emails() correctly with the GitHub API changes.  Fixes #1852",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Permissions.py",
        "commits": [
            "Tighten asserts for new Permission tests (#1893)  The recently merged code checking attributes on Permissions overeagerly used assertEqual for everything, switch to the more appropriate methods.",
            "Adding attributes \"maintain\" and \"triage\" to class \"Permissions\" (#1810)  * Adding attributes \"maintain\" and \"triage\" to class \"github.Permissions.Permissions\"  * Fix for failed test due to extended attribute list  * Adding new simplistic test case for class Permissions  Fixes #1809"
        ]
    },
    {
        "fileName": "tests/ReplayData/Permissions.setUp.txt",
        "commits": [
            "Adding attributes \"maintain\" and \"triage\" to class \"Permissions\" (#1810)  * Adding attributes \"maintain\" and \"triage\" to class \"github.Permissions.Permissions\"  * Fix for failed test due to extended attribute list  * Adding new simplistic test case for class Permissions  Fixes #1809"
        ]
    },
    {
        "fileName": "tests/ReplayData/Exceptions.testJSONParseError.txt",
        "commits": [
            "Re-raise the exception when failing to parse JSON (#1892)  Since GitHub has the bad manners to return bare strings for some API endpoints, one sharp edge has been that JSON decoding errors were masked since we wrap the string in a dictionary. However, this makes it difficult to debug malformed JSON in replay data, so re-raise the exception if the first character is a { or [ (IE, it's an object or list.)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testAddMembersAdminRole.txt",
        "commits": [
            "Re-raise the exception when failing to parse JSON (#1892)  Since GitHub has the bad manners to return bare strings for some API endpoints, one sharp edge has been that JSON decoding errors were masked since we wrap the string in a dictionary. However, this makes it difficult to debug malformed JSON in replay data, so re-raise the exception if the first character is a { or [ (IE, it's an object or list.)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testAddMembersDefaultRole.txt",
        "commits": [
            "Re-raise the exception when failing to parse JSON (#1892)  Since GitHub has the bad manners to return bare strings for some API endpoints, one sharp edge has been that JSON decoding errors were masked since we wrap the string in a dictionary. However, this makes it difficult to debug malformed JSON in replay data, so re-raise the exception if the first character is a { or [ (IE, it's an object or list.)"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testGetCheckRunsForRefFilterByFilter.txt",
        "commits": [
            "Use right variable in both get_check_runs() (#1889)  Both CheckSuite and Commit have a get_check_runs() method that allows filtering by a string -- the original code did not check for it, and never added it to the query string since it checked the wrong variable. Check the right variable and re-record the replay data.  Fixes #1843",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testGetCheckRunsForRefFilterByStatus.txt",
        "commits": [
            "Use right variable in both get_check_runs() (#1889)  Both CheckSuite and Commit have a get_check_runs() method that allows filtering by a string -- the original code did not check for it, and never added it to the query string since it checked the wrong variable. Check the right variable and re-record the replay data.  Fixes #1843",
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testGetCheckRunsFilterByFilter.txt",
        "commits": [
            "Use right variable in both get_check_runs() (#1889)  Both CheckSuite and Commit have a get_check_runs() method that allows filtering by a string -- the original code did not check for it, and never added it to the query string since it checked the wrong variable. Check the right variable and re-record the replay data.  Fixes #1843",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testGetCheckRunsFilterByStatus.txt",
        "commits": [
            "Use right variable in both get_check_runs() (#1889)  Both CheckSuite and Commit have a get_check_runs() method that allows filtering by a string -- the original code did not check for it, and never added it to the query string since it checked the wrong variable. Check the right variable and re-record the replay data.  Fixes #1843",
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/Issue158.py",
        "commits": [
            "Remove client_id/client_secret authentication (#1888)  Authenticating via client_id and client_secret is dangerous, since they appended to the query string, and can be easily seen from the URL.  client_id/client_secret have been deprecated since May 2020, and ignored by GitHub since late 2020, so it's high time they were removed.",
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Filter FutureWarning for 2 test cases (#1510)  There are two test cases that explicitly test with client_id and client_secret, which means pytest helpfully tells us about them after the test run concludes. We don't need to see them every run until we drop the arguments, so filter them out for now.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testSecretKeyAuthentication.txt",
        "commits": [
            "Remove client_id/client_secret authentication (#1888)  Authenticating via client_id and client_secret is dangerous, since they appended to the query string, and can be easily seen from the URL.  client_id/client_secret have been deprecated since May 2020, and ignored by GitHub since late 2020, so it's high time they were removed.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue158.testPaginationWithSecretKeyAuthentication.txt",
        "commits": [
            "Remove client_id/client_secret authentication (#1888)  Authenticating via client_id and client_secret is dangerous, since they appended to the query string, and can be easily seen from the URL.  client_id/client_secret have been deprecated since May 2020, and ignored by GitHub since late 2020, so it's high time they were removed.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testDeleteSecret.txt",
        "commits": [
            "Add support for deleting repository secrets (#1868)  When a previous commit added support for creating secrets on repository objects, support was not added to also remove them. Since the GitHub API does support that, add a method to do so."
        ]
    },
    {
        "fileName": "codecov.yml",
        "commits": [
            "Manually fixing paths for codecov.io to cover all project files (#1813)  * Manually fixing paths for codecov.io to cover all project files  * Update codecov.yml  Fixes #1812  Co-authored-by: Steve Kowalik <steven@wedontsleep.org>",
            "Various Github Action improvement (#1610)"
        ]
    },
    {
        "fileName": "tests/ReplayData/PublicKey.setUp.txt",
        "commits": [
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreateSecret.txt",
        "commits": [
            "Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetUserIssues.txt",
        "commits": [
            "fix get_user_issues (#1842)  AuthenticatedUser.get_user_issues() calls the wrong API endpoint.  Fixes #1841",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetUserIssuesWithAllArguments.txt",
        "commits": [
            "fix get_user_issues (#1842)  AuthenticatedUser.get_user_issues() calls the wrong API endpoint.  Fixes #1841",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/PoolSize.testReturnsRepoAfterSettingPoolSize.txt",
        "commits": [
            "Merge pull request #1818 from apahim/define_pool_size  Make requests pool_size configurable",
            "Enabling connetion pool_size definition  requests has a default connections pool of 10. Creating multiple threads will consume from that same pool, since the underlying implementation of the requests pool is a singletown.  Let's make the pool_size configurable, so clients can set the proper number for their use case when running multiple threads.  Signed-off-by: Amador Pahim <apahim@redhat.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/PoolSize.testReturnsRepoAfterSettingPoolSizeHttp.txt",
        "commits": [
            "Merge pull request #1818 from apahim/define_pool_size  Make requests pool_size configurable",
            "Enabling connetion pool_size definition  requests has a default connections pool of 10. Creating multiple threads will consume from that same pool, since the underlying implementation of the requests pool is a singletown.  Let's make the pool_size configurable, so clients can set the proper number for their use case when running multiple threads.  Signed-off-by: Amador Pahim <apahim@redhat.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Retry.testReturnsRepoAfterSettingRetryHttp.txt",
        "commits": [
            "Merge pull request #1818 from apahim/define_pool_size  Make requests pool_size configurable",
            "Always define the session adapter  This represents no change of behaviour, but it enables us to set more options to the adapter.  Signed-off-by: Amador Pahim <apahim@redhat.com>"
        ]
    },
    {
        "fileName": "tests/ContentFile.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/GitMembership.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "AuthenticatedUser.get_organization_membership() should be str (#1473)",
            "Fix GitMembership with a hammer (#1420)  While investigating pytest, I discovered this test class was not imported in AllTests, so it never ran, and worse, it would always fail because it would get a NamedUser, and not an AuthenticatedUser. Add it in it, and hit it with a hammer until it passes.",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Implemented user organization membership. Added test case. (#1237)  1. Added AuthenticatedUser:get_organization_membership 2. Added NamedUser:get_organization_membership 3. Added related tests as GitMembership and related replay data"
        ]
    },
    {
        "fileName": "tests/Issue131.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue133.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue139.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue142.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Use replay framework for Issue142 test (#1271)  * Use replay framework for Issue142 test  * Remove unused import",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue174.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Use Repository.get_contents() in tests (#1301)  Two tests were calling Repository.get_dir_contents() which is deprecated. To stop the warnings, change the call sites.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue214.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue216.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue278.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue33.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue50.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue572.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Issue823.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach.",
            "Adding support for pending team invitations (#993)  * fixes issue#823  * Update GithubObject.py  * Added tests for Pending team invitations(Issue#823)   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/Issue937.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Markdown.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/NamedUser1430.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Add list projects support, update tests (#1431)"
        ]
    },
    {
        "fileName": "tests/Notification.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Organization1437.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Merge pull request #1437 from ahhda/create_org_project  Add support to create an organization project",
            "Add create project method and tests"
        ]
    },
    {
        "fileName": "tests/OrganizationHasInMembers.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Persistence.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/Project1434.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Add support to edit and delete a project (#1434)  * Add methods to edit and delete a project  * Update tests for edit project"
        ]
    },
    {
        "fileName": "tests/PullRequest1169.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Code review bodies are optional in some cases. (#1169)  * Code review bodies are optional in some cases.  * Add test for approving PRs without body set."
        ]
    },
    {
        "fileName": "tests/PullRequestFile.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/UserKey.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean.",
            "Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again.",
            "Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes.",
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!"
        ]
    },
    {
        "fileName": "tests/__init__.py",
        "commits": [
            "Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean."
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.setUp.txt",
        "commits": [
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testCheckSuiteRerequest.txt",
        "commits": [
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testCreateCheckSuite.txt",
        "commits": [
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testGetCheckRuns.txt",
        "commits": [
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testGetCheckRunsFilterByCheckName.txt",
        "commits": [
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testGetCheckSuitesForRef.txt",
        "commits": [
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testGetCheckSuitesForRefFilterByAppId.txt",
        "commits": [
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testGetCheckSuitesForRefFilterByCheckName.txt",
        "commits": [
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckSuite.testUpdateCheckSuitesPreferences.txt",
        "commits": [
            "Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Deployment.setUp.txt",
        "commits": [
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add Deployments API (#1424)  Add a new class, Deployment to describe a deployment performed utilising GitHub. Add three methods onto Repository to list them and create them.  Fixes #1117"
        ]
    },
    {
        "fileName": "tests/ReplayData/DeploymentStatus.setUp.txt",
        "commits": [
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added \"create deployment status\" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586"
        ]
    },
    {
        "fileName": "tests/ReplayData/DeploymentStatus.testCreate.txt",
        "commits": [
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added \"create deployment status\" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586"
        ]
    },
    {
        "fileName": "tests/ReplayData/DeploymentStatus.testGetStatuses.txt",
        "commits": [
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added \"create deployment status\" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreateDeployment.txt",
        "commits": [
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add Deployments API (#1424)  Add a new class, Deployment to describe a deployment performed utilising GitHub. Add three methods onto Repository to list them and create them.  Fixes #1117"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetDeployments.txt",
        "commits": [
            "Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus",
            "Add Deployments API (#1424)  Add a new class, Deployment to describe a deployment performed utilising GitHub. Add three methods onto Repository to list them and create them.  Fixes #1117"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.setUp.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testCheckRunAnnotationAttributes.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testCheckRunOutputAttributes.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testCreateCheckRunCompleted.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testCreateCheckRunInProgress.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testGetCheckRunsForRef.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testGetCheckRunsForRefFilterByCheckName.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testListCheckRunAnnotations.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testUpdateCheckRunAll.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testUpdateCheckRunFailure.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/CheckRun.testUpdateCheckRunSuccess.txt",
        "commits": [
            "Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetUserById.txt",
        "commits": [
            "Added a method for getting a user by their id (#1691)  * Added a method for getting a user by their id  * Added get_user_by_id to MainClass stubs  Fixes #1615"
        ]
    },
    {
        "fileName": "doc/examples/Branch.rst",
        "commits": [
            "Fix Branch protection status in the examples (#1729)  A long time ago when branch protection was changed, the example of checking if a branch is protected wasn't changed in the examples.  Fixes #1724",
            "Add some examples for Branch (#936)  In the spirit of #874, add some examples for working with Branch objects. It doesn't add everything, but it's a start."
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetInstallations.txt",
        "commits": [
            "Added get_installations() to Organizations (#1695)  * Added get_installations() to Organizations  Fixes #1694"
        ]
    },
    {
        "fileName": "tests/ReplayData/CommitComment.testDeleteReaction.txt",
        "commits": [
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testDeleteReaction.txt",
        "commits": [
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status"
        ]
    },
    {
        "fileName": "tests/ReplayData/IssueComment.testDeleteReaction.txt",
        "commits": [
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequestComment.testDeleteReaction.txt",
        "commits": [
            "Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetHook.txt",
        "commits": [
            "Test Organization.get_hook() (#1660)  Add a testcase for Organization.get_hook()"
        ]
    },
    {
        "fileName": "tests/ReplayData/Team.testTeamMembership.txt",
        "commits": [
            "Add method get_team_membership for user to Team  (#1658)  * - Add method get_team_membership for user  * add typing get_team_membership for member  Fixes #1657"
        ]
    },
    {
        "fileName": "tests/ReplayData/PaginatedList.testTotalCountWithNoLastPage.txt",
        "commits": [
            "PaginatedList's totalCount is 0 if no last page (#1641)  When calculating totalCount for PaginatedList, if the links data does not contain a last page, we can't know how many elements are contained in the list. Set it to 0 in that case.  Fixes #1614"
        ]
    },
    {
        "fileName": "tests/ReplayData/GithubApp.testGetPublicApp.txt",
        "commits": [
            "Add initial support for Github Apps. (#1631)  * Add initial support for Github Apps.  Needed for #1621"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.setUp.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testGetAssets.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testGetLatestRelease.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRelease.testGetRelease.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.setUp.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testAttributes.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testCreateGitTagAndRelease.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140",
            "Correct Repository.create_git_tag_and_release() (#1362)  Repository.create_git_tag_and_release() is a convience function that creates a git tag and then a release. It was not passing the SHA1 of the commit to the release function, resulting in incorrect releases.  Fixes #1336"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testDelete.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testGetAsset.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testGetAssets.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testGetLatestRelease.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testGetRelease.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testUpdate.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testUploadAsset.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Release.testUploadAssetWithName.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140",
            "Allow name to be specified for upload_asset (#1151)  GitRelease.upload_asset() calculates the name based on the filename, and doesn't allow it to be overridden. Add a new name argument that is used if it is set. Drive by changing the default of the content_type argument to NotSet.  Closes #1095"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseModify.testCreateGitTagAndRelease.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseModify.testDelete.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseModify.testUpdate.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseModify.testUploadAsset.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseModify.testUploadAssetFileLike.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseModify.testUploadAssetFromMemory.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseModify.testUploadAssetWithName.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseRead.testAttributes.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseRead.testGetAssets.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseRead.testGetLatestRelease.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseRead.testGetRelease.txt",
        "commits": [
            "upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140"
        ]
    },
    {
        "fileName": "tests/ReplayData/Workflow.testCreateDispatchForNonTriggerEnabled.txt",
        "commits": [
            "Add support for workflow dispatch event (#1625)  * Add support for workflow dispatch event  Fixes: #1624"
        ]
    },
    {
        "fileName": "tests/ReplayData/Workflow.testCreateDispatchWithBranch.txt",
        "commits": [
            "Add support for workflow dispatch event (#1625)  * Add support for workflow dispatch event  Fixes: #1624"
        ]
    },
    {
        "fileName": "tests/ReplayData/Workflow.testCreateDispatchWithString.txt",
        "commits": [
            "Add support for workflow dispatch event (#1625)  * Add support for workflow dispatch event  Fixes: #1624"
        ]
    },
    {
        "fileName": "tests/ReplayData/Workflow.testCreateDispatchWithTag.txt",
        "commits": [
            "Add support for workflow dispatch event (#1625)  * Add support for workflow dispatch event  Fixes: #1624"
        ]
    },
    {
        "fileName": "tests/ReplayData/ApplicationOAuth.testGetAccessToken.txt",
        "commits": [
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Add OAuth support for GitHub applications  Create the ApplicationOAuth class which is responsible for handling a GitHub application's OAuth authorization process."
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testInstallations.txt",
        "commits": [
            "Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps",
            "Extend installation attributes"
        ]
    },
    {
        "fileName": ".github/dependabot.yml",
        "commits": [
            "Create Dependabot config file (#1607)  Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/NamedUser.testAttributesOfOtherUser.txt",
        "commits": [
            "Adds the 'twitter_username' attribute to NamedUser. (#1585)  * Adds the 'twitter_username' attribute to NamedUser."
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetWorkflowRuns.txt",
        "commits": [
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "tests/ReplayData/Workflow.testGetRunsWithNoArguments.txt",
        "commits": [
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "tests/ReplayData/Workflow.testGetRunsWithObjects.txt",
        "commits": [
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": "tests/ReplayData/Workflow.testGetRunsWithStrings.txt",
        "commits": [
            "Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
        ]
    },
    {
        "fileName": ".github/workflows/check.yml",
        "commits": [
            "Upgrade actions/setup-python to v2 (#1555)  https://github.com/actions/setup-python/releases",
            "Turn on coverage reporting for codecov (#1522)  Since we migrated from Travis to GitHub Actions, our coverage on codecov has been reporting as 0%, since uploading the .coverage file is a terrible idea. Turn on XML-based reporting, ignore the file and use that when we upload to codecov.",
            "Drop Travis in favor of Github workflow (#1488)  * Drop Travis CI  * Update DEPLOY.md about new workflow of uploading new version to PyPI  * Upload coverage data to Codecov  Co-Authored-By: Steve Kowalik <steven@wedontsleep.org>",
            "Use Github action to upload to PyPI on new release (#1487)",
            "Github workflow improvement (#1486)",
            "Actually use the Python version in GA workflow (#1485)  It appears that the Python versions in our strategy matrix are not used unless we drag them down into the steps. Do so now.",
            "Add GitHub Action workflow for checks (#1464)  To integrate better with the GitHub workflow, add a workflow for checking pushes and PRs. This doesn't remove the Travis configuration, which is still required for releases.  Co-Authored-By: Christian Clauss <cclauss@me.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseAsset.setUp.txt",
        "commits": [
            "Clean up tests for GitReleaseAsset (#1546)  The test class for GitReleaseAsset did not match the filename, was also the only class to include docstrings, and furthermore, repeated a lot of fetches in the replay data."
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseAsset.testDelete.txt",
        "commits": [
            "Clean up tests for GitReleaseAsset (#1546)  The test class for GitReleaseAsset did not match the filename, was also the only class to include docstrings, and furthermore, repeated a lot of fetches in the replay data."
        ]
    },
    {
        "fileName": "tests/ReplayData/ReleaseAsset.testUpdate.txt",
        "commits": [
            "Clean up tests for GitReleaseAsset (#1546)  The test class for GitReleaseAsset did not match the filename, was also the only class to include docstrings, and furthermore, repeated a lot of fetches in the replay data."
        ]
    },
    {
        "fileName": "tests/ReplayData/NamedUser.testGetReposWithAllArgs.txt",
        "commits": [
            "Check all arguments of NamedUser.get_repos() (#1532)  The two unit tests for NamedUser.get_repos() did not check all arguments, and this was the only method in the file that wasn't completly covered. Re-record the replay data while passing all arguments to the method."
        ]
    },
    {
        "fileName": "tests/ReplayData/NamedUser.testGetReposWithType.txt",
        "commits": [
            "Check all arguments of NamedUser.get_repos() (#1532)  The two unit tests for NamedUser.get_repos() did not check all arguments, and this was the only method in the file that wasn't completly covered. Re-record the replay data while passing all arguments to the method."
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetWorkflows.txt",
        "commits": [
            "Correct Repository.get_workflows() (#1518)  The API endpoint Repository.get_workflows() calls returns data in a list item, not directly, leading to some head scratching when calling it against GitHub. Re-record the replay data.",
            "Add support for Workflows (#1496)  To start supporting GitHub Actions, add the first part of that, Workflow, which encapsulates a workflow over the API, along with two methods on Repository to query them."
        ]
    },
    {
        "fileName": "doc/examples/Webhook.rst",
        "commits": [
            "Fix two RST warnings in Webhook.rst (#1512)  The final code block in the example is not Python code, and the underlines were incorrect, correct both.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Example: Listen for New Events with PyGithub and Pyramid (#930)  ## What does this change do? Adds a small demo implementation of how one might use webhooks to listen for new events in a given repository.  ### Additions #### doc/examples/Webhook.rst Adds a new `.rst` file, `Webhook.rst`, which can be used for demonstrating the usage of Webhooks in PyGithub.  The example that I've added shows how to continually listen for events using Pyramid in conjunction with PyGithub.  ## Motivation This example is in the spirit of #874. [It was asked](https://github.com/PyGithub/PyGithub/issues/874#issuecomment-429075695) that someone provide an example of how to listen to events from a repository.  ## How has this been tested? I've built the docs locally and made sure the HTML is generated as expected.  ## Screenshots ![webhook1](https://user-images.githubusercontent.com/16039329/46991191-40e58900-d0db-11e8-87e4-d5cf2cc18b0a.png) ![webhook2](https://user-images.githubusercontent.com/16039329/46991193-42af4c80-d0db-11e8-9b20-678f70e6baee.png)"
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.setUp.txt",
        "commits": [
            "feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns.",
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057"
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testDelete.txt",
        "commits": [
            "feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns."
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testEdit.txt",
        "commits": [
            "feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns."
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testMoveAfter.txt",
        "commits": [
            "feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns."
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testMoveFirst.txt",
        "commits": [
            "feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns."
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testMoveLast.txt",
        "commits": [
            "feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns."
        ]
    },
    {
        "fileName": "tests/ReplayData/Workflow.setUp.txt",
        "commits": [
            "Add support for Workflows (#1496)  To start supporting GitHub Actions, add the first part of that, Workflow, which encapsulates a workflow over the API, along with two methods on Repository to query them."
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testCreateCard.txt",
        "commits": [
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057"
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testGetAllCards.txt",
        "commits": [
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057"
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testGetArchivedCards.txt",
        "commits": [
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057"
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testGetCards.txt",
        "commits": [
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057"
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testGetNotArchivedCards.txt",
        "commits": [
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057"
        ]
    },
    {
        "fileName": "tests/ReplayData/ProjectColumn.testGetProjectColumn.txt",
        "commits": [
            "feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057"
        ]
    },
    {
        "fileName": "github/py.typed",
        "commits": [
            "Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490"
        ]
    },
    {
        "fileName": ".travis.yml",
        "commits": [
            "Drop Travis in favor of Github workflow (#1488)  * Drop Travis CI  * Update DEPLOY.md about new workflow of uploading new version to PyPI  * Upload coverage data to Codecov  Co-Authored-By: Steve Kowalik <steven@wedontsleep.org>",
            "Disable travis publish to PyPI",
            "Reuse pre-commit checks in CI (#1442)  * Use pre-commit checks in CI  * Fix all issues flagged by mypy  * Update travis.yml to reflect testenv changes  * Update docs to use tox lint",
            "Add tox (#1388)  * Add tox.ini  * Fix typo  * Update .gitignore  * Move flake8 to tox  * Add py35  * Add Coverage  * Add Coverage  * Add Coverage  * Add Coverage  * Add black  * Add black  * Add black  * Skip black for py35  * Add isort  * Update contributing docs  * Remove empty line",
            "Remove Travisbuddy",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Fix PyPI wheel deployment (#1330)  `distributions` should be under `deploy`, not `deploy.on` https://docs.travis-ci.com/user/deployment/pypi/#uploading-different-distributions",
            "Cleanup travis config (#1322)  Xenial has been the default distribution since May, 2019, so tidy up the test matrix to no longer specify it. Furthermore, due to not quoting the distributions in the deploy config, we did not ship wheels on pypi.  Fixes #1321",
            "Add Python 3.8 to classifiers list (#1280)  Add 3.8 to the classifiers list, drop the use of 2to3, and run tests against 3.8.",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores.",
            "Fix directories for coverage in Travis (#1190)  The directory github/tests no longer exists, correct the path for Travis goodness.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_",
            "Add code coverage (#1090)  * Add codecov to travis  * Add badge",
            "Travis CI: Add Python 3.7 to the testing (#1028)  Also: * Python 3.4 reaches its end of life in 44 days so let's remove it from the testing.  https://devguide.python.org/#branchstatus * [Travis are now recommending removing the __sudo__ tag](https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration).",
            "(Try to) re-enable automated release (#872)  Let's use my PyPI user account.",
            "Set skip_existing=true for travis upload to pypi",
            "Add TravisBuddy",
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "Decode jwt bytes object in Python 3 (#633)",
            "Merge pull request #643 from hugovk/patch-1  Add Python 3.6",
            "Add Python 3.6",
            "test against python 3.5",
            "update the pypi password to cut a new release",
            "Merge pull request #437 from PyGithub/travis  Releases based on travis",
            "upgrade release process based on travis",
            "travis: disable email",
            "use containers on travis-ci  by setting sudo=false, travis-ci can optimize our tests to run in a container, which is much faster",
            "Merge pull request #255 from frewsxcv/patch-1  Enable automated testing on Python 3.4",
            "Enable automated testing on Python 3.4",
            "Remove Python 2.5 which seems broken on Travis  https://travis-ci.org/jacquev6/PyGithub/jobs/15501387",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "dos2unix",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Remove Python 3.1 from Travis build  /home/travis/build.sh: line 77: /home/travis/virtualenv/python3.1/bin/activate: No such file or directory",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Simplify",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Further simplify",
            "Add Python 3.1",
            "Restore Python 2.5 and 2.6",
            "Fixes for Python 3: setup.py install will call 2to3  We temporary loose coverage measurement... again!",
            "Enable Python 3 in Travis",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Restore Python 2.5 and 2.6?  (This commit was 'push --force'd)",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "Use the ./setup.py test convention",
            "Enable Travis CI"
        ]
    },
    {
        "fileName": "DEPLOY.md",
        "commits": [
            "Drop Travis in favor of Github workflow (#1488)  * Drop Travis CI  * Update DEPLOY.md about new workflow of uploading new version to PyPI  * Upload coverage data to Codecov  Co-Authored-By: Steve Kowalik <steven@wedontsleep.org>",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Create DEPLOY.md"
        ]
    },
    {
        "fileName": ".github/workflows/python-publish.yml",
        "commits": [
            "Use Github action to upload to PyPI on new release (#1487)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreatePull.txt",
        "commits": [
            "Drop use of shadow-cat for draft PRs (#1469)",
            "Merge pull request #1422 from ahhda/draft_pull_request  Add support for draft pull request",
            "Add draft flag parameter, update tests"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreatePullFromIssue.txt",
        "commits": [
            "Drop use of shadow-cat for draft PRs (#1469)",
            "Merge pull request #1422 from ahhda/draft_pull_request  Add support for draft pull request",
            "Add draft flag parameter, update tests"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest.testEditWithAllArguments.txt",
        "commits": [
            "Add and handle the maintainer_can_modify attribute in PullRequest (#1465)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetEvents.txt",
        "commits": [
            "Ability to retrieve public events (#1481)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetMatchingRefs.txt",
        "commits": [
            "List matching references (#1471)"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitMembership.setUp.txt",
        "commits": [
            "AuthenticatedUser.get_organization_membership() should be str (#1473)",
            "Implemented user organization membership. Added test case. (#1237)  1. Added AuthenticatedUser:get_organization_membership 2. Added NamedUser:get_organization_membership 3. Added related tests as GitMembership and related replay data"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitMembership.testGetMembership.txt",
        "commits": [
            "AuthenticatedUser.get_organization_membership() should be str (#1473)",
            "Fix GitMembership with a hammer (#1420)  While investigating pytest, I discovered this test class was not imported in AllTests, so it never ran, and worse, it would always fail because it would get a NamedUser, and not an AuthenticatedUser. Add it in it, and hit it with a hammer until it passes.",
            "Implemented user organization membership. Added test case. (#1237)  1. Added AuthenticatedUser:get_organization_membership 2. Added NamedUser:get_organization_membership 3. Added related tests as GitMembership and related replay data"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreateRepositoryDispatch.txt",
        "commits": [
            "Add create_repository_dispatch (#1449)"
        ]
    },
    {
        "fileName": "tests/ReplayData/Project.testProjectCardMove.txt",
        "commits": [
            "fix param name of projectcard's move function (#1451)  * fix param name of projectcard's move function  * fix test failure",
            "Implement move action for ProjectCard (#1356)  ProjectCard's have the ability to be moved between columns, implement the GitHub API to do so.  Fixes #1312"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testStatisticsCodeFrequency.txt",
        "commits": [
            "Split up Repository.testStatistics (#1440)  The testStatistics testcase takes over ten seconds to run on my laptop, and it does an awful lot of work. Split up the disparate parts into seperate testcases."
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testStatisticsCommitActivity.txt",
        "commits": [
            "Split up Repository.testStatistics (#1440)  The testStatistics testcase takes over ten seconds to run on my laptop, and it does an awful lot of work. Split up the disparate parts into seperate testcases."
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testStatisticsContributors.txt",
        "commits": [
            "Split up Repository.testStatistics (#1440)  The testStatistics testcase takes over ten seconds to run on my laptop, and it does an awful lot of work. Split up the disparate parts into seperate testcases."
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testStatisticsParticipation.txt",
        "commits": [
            "Split up Repository.testStatistics (#1440)  The testStatistics testcase takes over ten seconds to run on my laptop, and it does an awful lot of work. Split up the disparate parts into seperate testcases."
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testStatisticsPunchCard.txt",
        "commits": [
            "Split up Repository.testStatistics (#1440)  The testStatistics testcase takes over ten seconds to run on my laptop, and it does an awful lot of work. Split up the disparate parts into seperate testcases."
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization1437.setUp.txt",
        "commits": [
            "Merge pull request #1437 from ahhda/create_org_project  Add support to create an organization project",
            "Add create project method and tests"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization1437.testCreateProject.txt",
        "commits": [
            "Merge pull request #1437 from ahhda/create_org_project  Add support to create an organization project",
            "Add create project method and tests"
        ]
    },
    {
        "fileName": "tests/ReplayData/Project1434.testDelete.txt",
        "commits": [
            "Add support to edit and delete a project (#1434)  * Add methods to edit and delete a project  * Update tests for edit project"
        ]
    },
    {
        "fileName": "tests/ReplayData/Project1434.testEditWithAllParameters.txt",
        "commits": [
            "Add support to edit and delete a project (#1434)  * Add methods to edit and delete a project  * Update tests for edit project"
        ]
    },
    {
        "fileName": "tests/ReplayData/Project1434.testEditWithoutParameters.txt",
        "commits": [
            "Add support to edit and delete a project (#1434)  * Add methods to edit and delete a project  * Update tests for edit project"
        ]
    },
    {
        "fileName": "tests/ReplayData/Commit.testGetPulls.txt",
        "commits": [
            "Add method for fetching pull requests associated with a commit (#1433)  * Add method for fetching pull requests associated with a commit  * Reference PR number instead of id on commit.get_pulls   Fixes #1414"
        ]
    },
    {
        "fileName": "tests/ReplayData/NamedUser1430.setUp.txt",
        "commits": [
            "Add list projects support, update tests (#1431)"
        ]
    },
    {
        "fileName": "tests/ReplayData/NamedUser1430.testGetProjects.txt",
        "commits": [
            "Add list projects support, update tests (#1431)"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateProject.txt",
        "commits": [
            "Add create_project support, add tests (#1429)  Add AuthenicatedUser.create_project()"
        ]
    },
    {
        "fileName": "tests/ReplayData/Project.testEditCardArchived.txt",
        "commits": [
            " Add support for editing project cards (#1418)  * Add edit() to ProjectCard  * Add unit tests of ProjectCard.edit"
        ]
    },
    {
        "fileName": "tests/ReplayData/Project.testEditCardNote.txt",
        "commits": [
            " Add support for editing project cards (#1418)  * Add edit() to ProjectCard  * Add unit tests of ProjectCard.edit"
        ]
    },
    {
        "fileName": "tests/ReplayData/Project.testEditCardWithoutParameters.txt",
        "commits": [
            " Add support for editing project cards (#1418)  * Add edit() to ProjectCard  * Add unit tests of ProjectCard.edit"
        ]
    },
    {
        "fileName": "tests/AllTests.py",
        "commits": [
            "Switch to using pytest (#1423)  Due to the recent deprecation of setup.py test, we should move with the times, and switch to a non-deprecated test runner.  Add configuration for pytest, and switch tox to using it. Remove AllTests, since it is no longer required to locate test classes, and rewrite tests/__main__.py as a pytest conftest plugin.  Also drop the test function from manage.sh, tox does a much better job.",
            "Fix GitMembership with a hammer (#1420)  While investigating pytest, I discovered this test class was not imported in AllTests, so it never ran, and worse, it would always fail because it would get a NamedUser, and not an AuthenticatedUser. Add it in it, and hit it with a hammer until it passes.",
            "Add support to reply to a Pull request comment (#1374)  * Add create_review_comment_reply to PullRequest  * Add unit tests  * Add docs for comment_id param for create_review_comment_reply  * Update tests  * Fix pep8 styling issue  * Fix styling",
            "Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release.",
            "black",
            "Publish version 1.46",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Expand Topic class and add test coverage (#1252)  * Expand Topic class and add test coverage  * Add test coverage for Topic properties  * Fix misspelling in comment",
            "Handle unicode strings when recording responses (#1253) (#1254)  * Handle unicode strings when recording responses (#1253)  * Add new test requirements  * Make requirement conditional  * Fix flake8 error  * Compare dict values without worrying about key order  * Improve readability",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Jump from notifications to related PRs/issues. (#1168)  * Jump from notifications to related PRs/issues.  * Add test case for jumping to related PRs/issues.  Also another method to get notifications scoped to a repository, otherwise it's hard to keep out sensitive information from the test cases.",
            "Code review bodies are optional in some cases. (#1169)  * Code review bodies are optional in some cases.  * Add test for approving PRs without body set.",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Adding support for pending team invitations (#993)  * fixes issue#823  * Update GithubObject.py  * Added tests for Pending team invitations(Issue#823)   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1375.setUp.txt",
        "commits": [
            "Add support to reply to a Pull request comment (#1374)  * Add create_review_comment_reply to PullRequest  * Add unit tests  * Add docs for comment_id param for create_review_comment_reply  * Update tests  * Fix pep8 styling issue  * Fix styling"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1375.testCreateReviewCommentReply.txt",
        "commits": [
            "Add support to reply to a Pull request comment (#1374)  * Add create_review_comment_reply to PullRequest  * Add unit tests  * Add docs for comment_id param for create_review_comment_reply  * Update tests  * Fix pep8 styling issue  * Fix styling"
        ]
    },
    {
        "fileName": "tests/ReplayData/Project.testProjectCardDelete.txt",
        "commits": [
            "Implement ProjectCard.delete() (#1417)  To work towards implementing more of the API surrounding Project Cards, add a delete method. With thanks to Christopher Mitchell, Ph.D.  Fixes #1409"
        ]
    },
    {
        "fileName": ".flake8",
        "commits": [
            "Add tox (#1388)  * Add tox.ini  * Fix typo  * Update .gitignore  * Move flake8 to tox  * Add py35  * Add Coverage  * Add Coverage  * Add Coverage  * Add Coverage  * Add black  * Add black  * Add black  * Skip black for py35  * Add isort  * Update contributing docs  * Remove empty line",
            "Apply black to whole codebase (#1303)",
            "Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports",
            "Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores."
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateRepositoryWithAllArguments.txt",
        "commits": [
            "Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetIssuesWithArguments.txt",
        "commits": [
            "Search repo issues by string label (#1379)  * Allow use of strings for labels in Repository.get_issues  * Fix unittests  * Update docstring  * Removed brackets from \"list of...\""
        ]
    },
    {
        "fileName": "tests/GitReleaseAsset.py",
        "commits": [
            "Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name.",
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps.",
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Team.testGetTeams.txt",
        "commits": [
            "Added nested teams and parent (#1348)  * Added nested teams and parent  - Added github.Team.Team.get_teams() to get nested teams. - Added github.Team.Team.parent which points to the parent team.  Fixes #1337"
        ]
    },
    {
        "fileName": "tests/ReplayData/Label.testEdit.txt",
        "commits": [
            "Correct parameter for Label.edit (#1350)  The existing code for Label.edit was passing 'name' as a parameter to the PATCH call, but GitHub expects 'new_name', correct it."
        ]
    },
    {
        "fileName": "tests/__main__.py",
        "commits": [
            "Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only.",
            "Apply black to whole codebase (#1303)",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreateGitTreeWithNullSha.txt",
        "commits": [
            "Allow sha=None for InputGitTreeElement (#1327)  InputGitTreeElement is used to build tree objects for Repository.create_git_tree(). However, the GitHub API allows passing sha=null to delete a file, which we don't allow. Extend the checking in InputGitTreeElement to also allow None, and add a test for good measure.  Fixes #1318"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testGetTimeline.txt",
        "commits": [
            "Support github timeline events. (#1302)  Adds support for retrieval of Github timeline events.  Signed-off-by: Nick Campbell <nicholas.j.campbell@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testCreateFork.txt",
        "commits": [
            "Support for create_fork (#1306)  * Support for create_fork  http://developer.github.com/v3/repos/forks  * Add test case for create_fork  * Add param doc and fix extra line  * Specify the organization to increase line coverage  * Update test data  * Add type assert for organization param"
        ]
    },
    {
        "fileName": "tests/ReplayData/SourceImport.testUpdate.txt",
        "commits": [
            "Allow GithubObject.update() to be passed headers (#1300)  SourceImport.update() is really GithubObject.update(), which just calls GET on the object's URL. Refetching a source import requires an additional header, so change GithubObject.update() to pass any it is given, and add a test for SourceImport.update()  Fixes #1297"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testAddTeamPushRestrictions.txt",
        "commits": [
            "Fix Branch's push restriction API (#1290)  The current API for changing user and teams push restrictions is brittle, and flat out incorrect when it comes to adding members. Break the API, but replace it with one that is correct.  Co-Authored-By: Jonas Maurus <jonas-github@maurus.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testAddUserPushRestrictions.txt",
        "commits": [
            "Fix Branch's push restriction API (#1290)  The current API for changing user and teams push restrictions is brittle, and flat out incorrect when it comes to adding members. Break the API, but replace it with one that is correct.  Co-Authored-By: Jonas Maurus <jonas-github@maurus.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testRemoveTeamPushRestrictions.txt",
        "commits": [
            "Fix Branch's push restriction API (#1290)  The current API for changing user and teams push restrictions is brittle, and flat out incorrect when it comes to adding members. Break the API, but replace it with one that is correct.  Co-Authored-By: Jonas Maurus <jonas-github@maurus.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testRemoveUserPushRestrictions.txt",
        "commits": [
            "Fix Branch's push restriction API (#1290)  The current API for changing user and teams push restrictions is brittle, and flat out incorrect when it comes to adding members. Break the API, but replace it with one that is correct.  Co-Authored-By: Jonas Maurus <jonas-github@maurus.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testReplaceTeamPushRestrictions.txt",
        "commits": [
            "Fix Branch's push restriction API (#1290)  The current API for changing user and teams push restrictions is brittle, and flat out incorrect when it comes to adding members. Break the API, but replace it with one that is correct.  Co-Authored-By: Jonas Maurus <jonas-github@maurus.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testReplaceUserPushRestrictions.txt",
        "commits": [
            "Fix Branch's push restriction API (#1290)  The current API for changing user and teams push restrictions is brittle, and flat out incorrect when it comes to adding members. Break the API, but replace it with one that is correct.  Co-Authored-By: Jonas Maurus <jonas-github@maurus.net>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Topic.setUp.txt",
        "commits": [
            "Expand Topic class and add test coverage (#1252)  * Expand Topic class and add test coverage  * Add test coverage for Topic properties  * Fix misspelling in comment"
        ]
    },
    {
        "fileName": "tests/ReplayData/Team.testDiscussions.txt",
        "commits": [
            "Add support for team discussions (#1246) (#1249)  * Add support for team discussions (#1246)  * Make a TeamDiscussion completeable"
        ]
    },
    {
        "fileName": "tests/ReplayData/NamedUser.testGetOrganizationMembership.txt",
        "commits": [
            "Correct API for NamedUser.get_organization_membership (#1277)  NamedUser.get_organization_membership() was calling the API method for fetching the currently authenticated user only, which is incorrect. The method was not tested directly, so add tests.  Furthermore, Membership had some errors which had slipped through review, so correct them.  Sadly, this is an API break, since passing the organization as an int made no sense in this case.  Fixes #1276"
        ]
    },
    {
        "fileName": "tests/ReplayData/NamedUser.testGetOrganizationMembershipNotMember.txt",
        "commits": [
            "Correct API for NamedUser.get_organization_membership (#1277)  NamedUser.get_organization_membership() was calling the API method for fetching the currently authenticated user only, which is incorrect. The method was not tested directly, so add tests.  Furthermore, Membership had some errors which had slipped through review, so correct them.  Sadly, this is an API break, since passing the organization as an int made no sense in this case.  Fixes #1276"
        ]
    },
    {
        "fileName": "tests/ReplayData/SpecificExceptions.test2FARequired.txt",
        "commits": [
            "Correct header check for 2FA required (#1274)  Currently, we were checking for an uppercase header if GitHub was refusing our authentication because we didn't provide a token. Requests returns headers with all lowercase. Fix the const, and add a test for good measure.  Fixes #1273"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue142.testDecodeJson.txt",
        "commits": [
            "Use replay framework for Issue142 test (#1271)  * Use replay framework for Issue142 test  * Remove unused import"
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1168.setUp.txt",
        "commits": [
            "Jump from notifications to related PRs/issues. (#1168)  * Jump from notifications to related PRs/issues.  * Add test case for jumping to related PRs/issues.  Also another method to get notifications scoped to a repository, otherwise it's hard to keep out sensitive information from the test cases."
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1168.testGetIssue.txt",
        "commits": [
            "Jump from notifications to related PRs/issues. (#1168)  * Jump from notifications to related PRs/issues.  * Add test case for jumping to related PRs/issues.  Also another method to get notifications scoped to a repository, otherwise it's hard to keep out sensitive information from the test cases."
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1168.testGetPullRequest.txt",
        "commits": [
            "Jump from notifications to related PRs/issues. (#1168)  * Jump from notifications to related PRs/issues.  * Add test case for jumping to related PRs/issues.  Also another method to get notifications scoped to a repository, otherwise it's hard to keep out sensitive information from the test cases."
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1169.setUp.txt",
        "commits": [
            "Code review bodies are optional in some cases. (#1169)  * Code review bodies are optional in some cases.  * Add test for approving PRs without body set."
        ]
    },
    {
        "fileName": "tests/ReplayData/PullRequest1169.testReviewApproveWithoutBody.txt",
        "commits": [
            "Code review bodies are optional in some cases. (#1169)  * Code review bodies are optional in some cases.  * Add test for approving PRs without body set."
        ]
    },
    {
        "fileName": "tests/ReplayData/LazyRepository.setUp.txt",
        "commits": [
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement"
        ]
    },
    {
        "fileName": "tests/ReplayData/LazyRepository.testChangeAutomateFixWhenNoVulnerabilityAlert.txt",
        "commits": [
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement"
        ]
    },
    {
        "fileName": "tests/ReplayData/LazyRepository.testDisableAutomatedSecurityFixes.txt",
        "commits": [
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement"
        ]
    },
    {
        "fileName": "tests/ReplayData/LazyRepository.testDisableVulnerabilityAlert.txt",
        "commits": [
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement"
        ]
    },
    {
        "fileName": "tests/ReplayData/LazyRepository.testEnableAutomatedSecurityFixes.txt",
        "commits": [
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement"
        ]
    },
    {
        "fileName": "tests/ReplayData/LazyRepository.testEnableVulnerabilityAlert.txt",
        "commits": [
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement"
        ]
    },
    {
        "fileName": "tests/ReplayData/LazyRepository.testGetIssues.txt",
        "commits": [
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement"
        ]
    },
    {
        "fileName": "tests/ReplayData/LazyRepository.testGetVulnerabilityAlert.txt",
        "commits": [
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement"
        ]
    },
    {
        "fileName": "tests/ReplayData/LazyRepository.testGetVulnerabilityAlertWhenTurnedOff.txt",
        "commits": [
            "Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement"
        ]
    },
    {
        "fileName": "github/Legacy.py",
        "commits": [
            "Delete Legacy submodule (#1192)  Since the only part of the Legacy submodule that is used and tested is the transform issue function, refactor it into a Repository method and delete it.",
            "Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Add default parameters to greatly reduce code redoundancy",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Add a param to Requester.requestXxx for request headers",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Update copyright information",
            "Remove helper method in Legacy.py",
            "Update NamedUser.py",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Rename methods in Requester",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'develop'",
            "Reduce assumptions on legacy API",
            "Merge branch 'topic/ExposePagination' into develop",
            "Complete Legacy.convertXxx (issue #81)",
            "Legacy.PaginatedList.get_page (issue #77)",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "dos2unix, chmod +x",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Specify a server url for Github.  Allows connection to GitHub Enterprise installs on local URLs.",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Refactor PaginatedLists (legacy and modern) to restore test coverage",
            "Implement legacy pagination",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination",
            "Convert legacy objects to v3 ones  Still needed: - test completion of objects returned by legacy API - implement legacy pagination"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetPendingInvitations.txt",
        "commits": [
            "Add Repository methods for pending invitations (#1159)  Make a start on implementing more of the invitations API, by adding methods to Repository to list and remove pending invitations.  Closes #1120"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testRemoveInvitation.txt",
        "commits": [
            "Add Repository methods for pending invitations (#1159)  Make a start on implementing more of the invitations API, by adding methods to Repository to list and remove pending invitations.  Closes #1120"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetInvitations.txt",
        "commits": [
            "Add invitee and inviter to Invitation (#1156)  Invitations contain information about the user they are for, and which user invited them, so export that too.  During invesigating attmepting to test the new attributes of Invitation, it was discovered that there are no code paths to fetch them, so add AuthenticatedUser.get_invitations(). The test added can do double duty."
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue823.setUp.txt",
        "commits": [
            "Adding support for pending team invitations (#993)  * fixes issue#823  * Update GithubObject.py  * Added tests for Pending team invitations(Issue#823)   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue823.testGetPendingInvitationAttributes.txt",
        "commits": [
            "Adding support for pending team invitations (#993)  * fixes issue#823  * Update GithubObject.py  * Added tests for Pending team invitations(Issue#823)   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Organization.testGetTeamBySlug.txt",
        "commits": [
            "Add new Organization.get_team_by_slug method (#1144)  Add a new API call to Organization that allows fetching teams by slug.  Closes #1116"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetContentsDir.txt",
        "commits": [
            "Handle a path of / in Repository.get_contents() (#1070)  The path requested in Repository.get_contents() is appended to the URL, so the root path should be requested with the empty string. If path is '/', set it to the empty string. Copy the replay data from the original test, since it is identical.  Drive-by renaming the test to include the missing 's'.  Closes #1059"
        ]
    },
    {
        "fileName": "tests/ReplayData/Repository.testGetContentsDirWithSlash.txt",
        "commits": [
            "Handle a path of / in Repository.get_contents() (#1070)  The path requested in Repository.get_contents() is appended to the URL, so the root path should be requested with the empty string. If path is '/', set it to the empty string. Copy the replay data from the original test, since it is identical.  Drive-by renaming the test to include the missing 's'.  Closes #1059"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testLock.txt",
        "commits": [
            "issue: add lock/unlock (#1107)  * issue: add lock/unlock  * tests: add test for issue lock/unlock  * tests: add lock/unlock sample data  * Fix tests, add locked and active_lock_reason   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testUnlock.txt",
        "commits": [
            "issue: add lock/unlock (#1107)  * issue: add lock/unlock  * tests: add test for issue lock/unlock  * tests: add lock/unlock sample data  * Fix tests, add locked and active_lock_reason   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testAcceptInvitation.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateAuthorizationWithAllArguments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateAuthorizationWithClientIdAndSecret.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateAuthorizationWithoutArguments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateGist.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateGistWithoutDescription.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateKey.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateMigration.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateRepository.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testCreateRepositoryWithAutoInit.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testEditWithAllArguments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testEditWithoutArguments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testFollowing.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetAuthorizations.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetEvents.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetGists.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetIssues.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetIssuesWithAllArguments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetKeys.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetMigrations.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetNotification.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetOrganizationEvents.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetOrgs.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetRepos.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetReposWithArguments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetStarredGists.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testGetTeams.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testMarkNotificationsAsRead.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testStarring.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testSubscriptions.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/AuthenticatedUser.testWatching.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testAuthorizationHeaderWithLogin.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testAuthorizationHeaderWithToken.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testBasicAuthentication.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testJWTAuthentication.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testNoAuthentication.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testOAuthAuthentication.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authentication.testUserAgent.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authorization.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authorization.testDelete.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Authorization.testEdit.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/BadAttributes.testBadAttributeInClassAttribute.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/BadAttributes.testBadAttributeTransformation.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/BadAttributes.testBadSimpleAttribute.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/BadAttributes.testBadSimpleAttributeInList.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/BadAttributes.testBadTransformedAttribute.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/BadAttributes.testBadTransformedAttributeInDict.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/BadAttributes.testBadTransformedAttributeInList.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/BadAttributes.testIssue195.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testAddRequiredSignatures.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testAdminEnforcement.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testCommitCommentsOnLine.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditRequiredPullRequestReviews.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditRequiredPullRequestReviewsWithTooLargeApprovingReviewCount.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditRequiredPullRequestReviewsWithUserBranchAndDismissalUsers.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditRequiredStatusChecks.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditTeamPushRestrictions.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testEditUserPushRestrictions.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testGetRequiredSignatures.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testProtectedAttributes.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testRemoveProtection.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testRemovePushRestrictions.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testRemoveRequiredPullRequestReviews.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testRemoveRequiredSignatures.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Branch.testRemoveRequiredStatusChecks.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Commit.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Commit.testCreateComment.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Commit.testCreateCommentOnFileLine.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Commit.testCreateCommentOnFilePosition.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Commit.testCreateStatusWithAllParameters.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Commit.testCreateStatusWithoutOptionalParameters.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Commit.testGetComments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/CommitCombinedStatus.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/CommitComment.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/CommitComment.testCreateReaction.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/CommitComment.testDelete.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/CommitComment.testEdit.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/CommitComment.testGetReactions.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/CommitStatus.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/ConditionalRequestUpdate.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/ConditionalRequestUpdate.testDidNotUpdate.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/ConditionalRequestUpdate.testDidUpdate.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/ConditionalRequestUpdate.testUpdateObjectWithoutEtag.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/ContentFile.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Download.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Download.testDelete.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Enterprise.testHttp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Enterprise.testHttps.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Enterprise.testLongUrl.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Enterprise.testSpecificPort.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Equality.testBranchEquality.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Equality.testUserDifference.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Equality.testUserEquality.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Event.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Exceptions.testBadAuthentication.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Exceptions.testInvalidInput.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Exceptions.testNonJsonDataReturnedByGithub.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Exceptions.testUnknownObject.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Exceptions.testUnknownUser.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testAttributes.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testCreateComment.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testDelete.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testDeleteFile.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testEditWithAllParameters.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testEditWithoutParameters.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testFork.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testGetComments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testRenameFile.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Gist.testStarring.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GistComment.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GistComment.testDelete.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GistComment.testEdit.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitBlob.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitCommit.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRef.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRef.testDelete.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRef.testEdit.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitRef.testEditWithForce.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitTag.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/GitTree.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetEmojis.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetGists.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetGistsWithSince.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetGitignoreTemplate.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetGitignoreTemplates.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetHook.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetHooks.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetLicense.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetLicenses.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetOrganizations.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetOrganizationsSince.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetRepoFromFullName.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetRepoFromId.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetRepos.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetReposSince.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetUsers.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testGetUsersSince.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testSearchRepos.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testSearchUserByEmail.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Github.testSearchUsers.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Hook.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Hook.testDelete.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Hook.testEditWithAllParameters.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Hook.testEditWithMinimalParameters.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Hook.testPing.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Hook.testTest.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testAddAndRemoveAssignees.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testAddAndRemoveLabels.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testAddAndRemoveLabelsWithStringArguments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testAttributes.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testCreateComment.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testCreateReaction.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testDeleteAndSetLabels.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testDeleteAndSetLabelsWithStringArguments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testEditResetAssignee.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testEditResetMilestone.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testEditWithAllParameters.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testEditWithoutParameters.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testGetComments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testGetCommentsSince.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testGetEvents.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testGetLabels.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue.testGetReactions.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue131.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue131.testGetPullWithOrgHeadUser.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue131.testGetPullsWithOrgHeadUser.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue133.testGetPageWithoutInitialArguments.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue134.testGetAuthorizationsFailsWhenAutenticatedThroughOAuth.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue134.testGetAuthorizationsSucceedsWhenAutenticatedThroughLoginPassword.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue134.testGetOAuthScopesFromHeader.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue139.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue139.testCompletion.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue140.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue140.testGetDirContents.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue140.testGetDirContentsThenLazyCompletionOfFile.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue140.testGetDirContentsWithRef.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue140.testGetFileContents.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue174.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue174.testGetDirContentsWhithHttpRedirect.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue214.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue214.testAssignees.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue214.testCollaborators.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue214.testCreateIssue.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue214.testEditIssue.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue214.testGetIssues.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue216.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue216.testIteration.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue278.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue278.testIteration.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue33.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue33.testClosedIssues.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue33.testOpenIssues.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue494.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.testAddLabelToIssue.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.testCreateIssueWithLabel.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.testCreateLabel.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.testGetIssuesWithLabel.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.testGetLabel.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.testGetLabels.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.testIssueGetLabels.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.testRemoveLabelFromIssue.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue50.testSetIssueLabels.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "tests/ReplayData/Issue54.setUp.txt",
        "commits": [
            "Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! \ud83d\ude04  # Solution/Implementation #   - Moved \"tests\" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed \"tests\" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
        ]
    },
    {
        "fileName": "github/tests/GithubIntegration.py",
        "commits": [
            "Use non-deprecated path for creating GitHub App access tokens (#1086)  /installations/<installation_id>/access_tokens was deprecated as of https://developer.github.com/changes/2018-08-16-renaming-and-deprecation-of-github-app-installation-access-token-route/",
            "resolves #1023 (#1042)  resolves #1023"
        ]
    },
    {
        "fileName": "github/tests/AllTests.py",
        "commits": [
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860",
            "Remove status API, closes #1080",
            "resolves #1023 (#1042)  resolves #1023",
            "Adding migration api wrapper (#899)  Closes #818",
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926",
            "Added missing params to constructor when reversed (#946)  This PR proposes adding two missing params to constructor in `.reversed`. This preserves the `headers` as well as the `list_item` once cloned.  Fixes #945.",
            "Ability to filter repository collaborators (#938)  ## Changes - Add `affiliation` parameter to `get_collaborators()` and use it to filter collaborators through the API - Resolves #937   PS: Would have loved to add a simple test for this but there seems to be a problem on my end using OAuth as I'm just not able to authenticate to the API during tests.",
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead.",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card",
            "Sync copyright header",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Include GitReleaseAsset test, closes #778",
            "Re-work PullRequest reviewer request (#765)  Add create_review_request() and delete_review_request() methods to PullRequest, as well as renaming get_reviewer_requests() to get_review_requests() and cleaning up its return value to firstly respect teams, and secondly to cut out the middleman of PullRequestReviewerRequests, which has been removed.  Fixes #597",
            "Implement License API (#734)  * Implement License API  * Update copyright",
            "Added Issue.as_pull_request() and PullReqest.as_issue() (#630)",
            "Source Import API (#673)  * add import source  * add import header  * create/get source import for repo, SourceImport class  * Corrected use_lfs, not considered completed with creation  * vcs creds optional  * SourceImport test, removed unneeded attributes  * create/get source import tests for repo  * Encoding and copyright comment  * styling fixes  * Update SourceImport.py  * Update SourceImport.py  * Update SourceImport.py",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6",
            "Merge pull request #538 from allevin/Add_Pull_Request_Reviews_Feature  Add Support for Pull Request Reviews feature",
            "Updates to API and changes to resolve testing issues.",
            "Add testing for Pull Request Reviews and Review Requests",
            "Support HTTP 302 redirect in Organization.has_in_members",
            "Merge pull request #495 from sjcorbett/fix/githubobject-repr  Encode GithubObject repr values in utf-8",
            "Encode GithubObject repr values in utf-8 when using Python2",
            "update doc url everywhere (#420)",
            "Merge pull request #382 from doctoryes/master  Add ability to check combined status.",
            "Add:   - CommitCombinedStatus class   - get_combined_status() to Commit class to return combined status   - Add test for combined status.",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet",
            "Work-around Issue278",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs",
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "Fix #216: handle 'Link' header  Headers with capitals are returned by http.client (replacing httplib in Python 3)",
            "adding the tests for issue 214",
            "Merge branch 'develop'",
            "Implement equality comparison of CompletableGithubObject (#201)",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Homogenize AllTests.py",
            "./manage.sh fix_headers",
            "Github.get_rate_limit",
            "Merge branch 'topic/ApiStatus' into develop",
            "Get status of Github API (#188)",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Implement object persistence  This follows my proposal for #193. Largely inspired by AKFish's work.",
            "Add test case for conditional request",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Merge branch 'topic/HttpRedirect' into develop",
            "Add test for pull request #174",
            "Merge branch 'develop'",
            "De-activate our only intergration test, to pass on Travis-CI",
            "Merge branch 'develop'",
            "Fix pagination with secret-key authentication (issue #158)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Expose raw data of objects (Issue #144)",
            "Merge branch 'master' into develop",
            "Fix decoding on Python3 (bytes instead of str) (Issue #142)",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Implement Repository.get_dir_contents (issue #140)",
            "Add a test showing the silly bug described in issue #139",
            "Merge branch 'develop'",
            "Add a test reproducing issue #131",
            "Reproduce issue #134",
            "Add a failing test for pull #133",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Fix test when run on Linux with source tree on case-insensitive filesystem",
            "Merge branch 'develop'",
            "Add test showing error described in issue #87",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/Logging' into develop (pull #88)",
            "Test the logging facility",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "Fixes for issue #86"
        ]
    },
    {
        "fileName": "github/tests/Framework.py",
        "commits": [
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860",
            "Add support for JWT authentication (#948)  APIs such as https://developer.github.com/v3/apps/#find-organization-installation use a JWT for authentication. Adding support for JWT auth.",
            "Sync copyright header",
            "Add missing properties to Repository (#842)  Closes #784 Closes #785  First commit fixes a small bug that I observed while trying to record some new test fixtures: the stringification of the headers is not correctly printed as a list of tuples, but as an `iteritems` object, so I forced the list evaluation.  Second commit adds the missing properties `allow_merge_commit`, `allow_rebase_merge`, `allow_squash_merge`, and `has_projects` to the `Repository` class.  Note however that I ran into some trouble while modifying the `edit` method of the `Repository` class to make use of the new properties, specifically while writing tests, so I will fix the `edit` method in a future PR.",
            "Test Framework improvement (#795)  Hi!  As part of my app, I use this lib, and then your test Framework to record my own upper level tests. Here's some patches I had to make that I humbly think could interest you:  - As stated by @kyogi14 in [this comment](https://github.com/PyGithub/PyGithub/pull/664#issuecomment-389964369), since you use `requests` recording is broken. This fixes that. - Fix some Python 3 troubles while recording - Add a `replayDataFolder` gloval class variable, to override the default place to put the recording. Otherwise, if a third party app (like mine :)) has a dependency on PyGithub and wants to use the Framework, recordings are saved in `site-packages/github/tests/ReplayData` instead of my own place.  Hope this helps, please let me know if I can improve the PR.  Thanks!",
            "Use 'requests' instead of 'httplib' (#664)  * works (but tests fail)  * Refactor to use python requests rather than httplib  * add requests dependency in setup.py  * touch so travis-ci will run  * clean up some unused comments  * Handle HTTP vs HTTPS; handle custom base_url  * Use requests session  * Don't use a persistent session in tests (which don't use the real requests library)  * Use an older version of requests for python 3.2  Requests dropped support for Python 3.2 in the 2.10 series (though it didn't detect this until 2.11).  PyGithub probably doesn't need to support Python 3.2 at all; it's quite old, with negligably few users, but that should be addressed elsewhere.  * Revert \"Use an older version of requests for python 3.2\"  This reverts commit fb0367614f5413968eeab98f4094e710aa1bc2d1.  * Improve readability  * Update requirements.txt  * Disable custom proxy handling code (unneeded and broken); use requests'  * Remove comment and superflous code  * Fix iteritems() removal from Python3  * pin requests to 2.14.0 or greater in prep for no_proxy  * pin requests to 2.14.0 or greater in prep for no_proxy",
            "Fix a bug for test recording when input is None",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases",
            "update doc url everywhere (#420)",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #307 from Jucyio/tokentest  Support recording tests when using an OAuth token",
            "Add support to record tests using the oauth token instead of a username/password. This lets people whose account uses 2-factor authentication record tests.",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers",
            "Merge branch 'develop'",
            "Assert response headers",
            "Enable debug in TestCase",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Document `#pragma no cover`s (Issue #154)",
            "Remove branches for hypothetical unknown Authorization headers",
            "Add a test that would have caught #153",
            "Fix tests for Python 2.5",
            "Fix tests for Python 2.5",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix tests for Python 3.2 on Windows",
            "Merge branch 'master' into develop",
            "Fix decoding on Python3 (bytes instead of str) (Issue #142)",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Merge branch 'topic/RetrieveGitignoreTemplates' into develop",
            "Github.get_gitignore_template[s] (issue #120)",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/UnauthenticatedRateLimitedRequests' into develop",
            "Add tests for pull #112",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "Fixes for issue #86",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.testUploadAsset.txt",
        "commits": [
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860",
            "Fix Content-Length invalid headers exception (#787)",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Retry.testRaisesRetryErrorAfterMaxRetries.txt",
        "commits": [
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Retry.testReturnsRepoAfter1Retry.txt",
        "commits": [
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Retry.testReturnsRepoAfter3Retries.txt",
        "commits": [
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Retry.testShouldNotRetryWhenStatusNotOnList.txt",
        "commits": [
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860"
        ]
    },
    {
        "fileName": "github/tests/Retry.py",
        "commits": [
            "Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860"
        ]
    },
    {
        "fileName": "github/Status.py",
        "commits": [
            "Remove status API, closes #1080",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Get status of Github API (#188)"
        ]
    },
    {
        "fileName": "github/StatusMessage.py",
        "commits": [
            "Remove status API, closes #1080",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Factorize the creation of attributes (preparation for #195)",
            "Use ValuedAttribute and NotSet.value (preparation for #195)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Get status of Github API (#188)"
        ]
    },
    {
        "fileName": "github/tests/ExposeAllAttributes.py",
        "commits": [
            "Remove status API, closes #1080",
            "Adding support for search/graphql rate limit, fixes #553",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Add many missing attributes"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/ExposeAllAttributes.testAllClasses.txt",
        "commits": [
            "Remove status API, closes #1080",
            "Add a trailing slash to URL when updating or deleting a file (tests fixed) (#931)  * Add a trailing slash to URL when updating or deleting a file.  * Update test files to match new create/update/delete_file Repo methods  * Add trailing slash to get_contents() method  * update tests  * add missing slash in get_dir_contents  * add example usage  * remove dup slashes in tests  * clarify example comments",
            "Adding support for search/graphql rate limit, fixes #553",
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Fix github API requests after asset upload (#771)  In the old code the self.__hostname would be overwritten with uploads.github.com but it could not be correctly re-set to api.github.com after completing the upload Create a separate connection if hostname or port differ in requestBlobAndCheck  in the end this became quite a large overhaul, to also make this change generic for e.g. connecting to status.github.com and similar methods  ~~not sure if tests need (more) updating, if so I will update the PR accordingly~~",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Add many missing attributes"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Status.testGetLastMessage.txt",
        "commits": [
            "Remove status API, closes #1080",
            "Fix github API requests after asset upload (#771)  In the old code the self.__hostname would be overwritten with uploads.github.com but it could not be correctly re-set to api.github.com after completing the upload Create a separate connection if hostname or port differ in requestBlobAndCheck  in the end this became quite a large overhaul, to also make this change generic for e.g. connecting to status.github.com and similar methods  ~~not sure if tests need (more) updating, if so I will update the PR accordingly~~",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Get status of Github API (#188)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Status.testGetMessages.txt",
        "commits": [
            "Remove status API, closes #1080",
            "Fix github API requests after asset upload (#771)  In the old code the self.__hostname would be overwritten with uploads.github.com but it could not be correctly re-set to api.github.com after completing the upload Create a separate connection if hostname or port differ in requestBlobAndCheck  in the end this became quite a large overhaul, to also make this change generic for e.g. connecting to status.github.com and similar methods  ~~not sure if tests need (more) updating, if so I will update the PR accordingly~~",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Get status of Github API (#188)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Status.testGetStatus.txt",
        "commits": [
            "Remove status API, closes #1080",
            "Fix github API requests after asset upload (#771)  In the old code the self.__hostname would be overwritten with uploads.github.com but it could not be correctly re-set to api.github.com after completing the upload Create a separate connection if hostname or port differ in requestBlobAndCheck  in the end this became quite a large overhaul, to also make this change generic for e.g. connecting to status.github.com and similar methods  ~~not sure if tests need (more) updating, if so I will update the PR accordingly~~",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Get status of Github API (#188)"
        ]
    },
    {
        "fileName": "github/tests/Status.py",
        "commits": [
            "Remove status API, closes #1080",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'topic/ApiStatus' into develop",
            "Get status of Github API (#188)"
        ]
    },
    {
        "fileName": "github/tests/Gist.py",
        "commits": [
            "Run pyupgrade across the project (#1067)  https://github.com/asottile/pyupgrade  - Use dict comprehension - Use set literals",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Use POST /gists/:id/forks instead of POST /gists/:id/fork",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Fix tests for Python 3.3 (dictionary ordering...)",
            "Merge branch 'topic/GistRenameAndDeleteFile' into develop",
            "Rename a file in a gist (issue #156)",
            "Delete file from gist (issue #156)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Add new test showing https git urls for gists (Issue #119)",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Fixes for Python 3: setup.py install will call 2to3  We temporary loose coverage measurement... again!",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Follow pep8",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/PullRequestReview.py",
        "commits": [
            "Add new dismiss() method on PullRequestReview (#1053)  The GitHub v3 API has the ability to dismiss reviews, export it by way of a new dismiss() method on PullRequestReview.  Closes #1050",
            "Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353",
            "Sync copyright header",
            "Added option to create review for Pull request (#662)  * Added option to create review for Pull request  * Fix tests",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Add 'submitted at' to PullRequestReview (#565)  This field is not currently listed in the Github documentation at https://developer.github.com/v3/pulls/reviews/, but it's been included since Github 2.9  (It even exists in the test data returned for the original PullRequestReview PR)",
            "Merge pull request #538 from allevin/Add_Pull_Request_Reviews_Feature  Add Support for Pull Request Reviews feature",
            "Updates to API and changes to resolve testing issues.",
            "Add testing for Pull Request Reviews and Review Requests"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestReview.testDismiss.txt",
        "commits": [
            "Add new dismiss() method on PullRequestReview (#1053)  The GitHub v3 API has the ability to dismiss reviews, export it by way of a new dismiss() method on PullRequestReview.  Closes #1050"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testAddMembersAdminRole.txt",
        "commits": [
            "Fix Organization.add_to_members() role passing (#1039)  * Fix role passing  * Fix typo  * Fix another typo  * Move parameter to JSON payload  * Move parameter to JSON payload  * Add content type  * Add content type  * Double Quotes  * Double quotes",
            "Add add_to_members() and remove_from_membership() (#741)  * Add methods add_to_members(), has_in_pending_members(), and remove_from_membership() methods to Organization class.  * Add scrubbed replay files used for testing  * More massaging of test data  * Fix URL to remove organization membership  * Remove `has_in_pending_members()` method"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testAddMembersDefaultRole.txt",
        "commits": [
            "Fix Organization.add_to_members() role passing (#1039)  * Fix role passing  * Fix typo  * Fix another typo  * Move parameter to JSON payload  * Move parameter to JSON payload  * Add content type  * Add content type  * Double Quotes  * Double quotes",
            "Add add_to_members() and remove_from_membership() (#741)  * Add methods add_to_members(), has_in_pending_members(), and remove_from_membership() methods to Organization class.  * Add scrubbed replay files used for testing  * More massaging of test data  * Fix URL to remove organization membership  * Remove `has_in_pending_members()` method"
        ]
    },
    {
        "fileName": "github/tests/Project.py",
        "commits": [
            "add: create project column card route (#1003)  Add the missing route to create cards for projects columns Test written and passing locally.",
            "Add \"create repository project\" and \"create project column\" methods (#995)  Added the two methods:  - Create a project for a given repo  - Create a column for a given project   Tests are basics but done :)",
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testCreateCardFromIssue.txt",
        "commits": [
            "add: create project column card route (#1003)  Add the missing route to create cards for projects columns Test written and passing locally."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testCreateCardWithNote.txt",
        "commits": [
            "add: create project column card route (#1003)  Add the missing route to create cards for projects columns Test written and passing locally."
        ]
    },
    {
        "fileName": "github/tests/AuthenticatedUser.py",
        "commits": [
            "user.node_id missing (#1001)  'node_id' attribute was missing. Hence added the attribute using add_attribute script in AuthorizedUser  and NamedUser classes.  This fixes issue #999 .",
            "Adding migration api wrapper (#899)  Closes #818",
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead.",
            "get repos missing params for authenticated users (#915)  first commit to fix issue #435",
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do.",
            "Sync copyright header",
            "Add missing properties to Repository (#842)  Closes #784 Closes #785  First commit fixes a small bug that I observed while trying to record some new test fixtures: the stringification of the headers is not correctly printed as a list of tuples, but as an `iteritems` object, so I forced the list evaluation.  Second commit adds the missing properties `allow_merge_commit`, `allow_rebase_merge`, `allow_squash_merge`, and `has_projects` to the `Repository` class.  Note however that I ran into some trouble while modifying the `edit` method of the `Repository` class to make use of the new properties, specifically while writing tests, so I will fix the `edit` method in a future PR.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Added missing parameters for repo creation (#623)  * Added missing parameters to organisation repo creation  * team_id should already be an id not a team object  * Name arguments in the test  * Fixed assertion check  * Added missing parameters to user repo creation  * Fixed comments",
            "fix failing tests on py26",
            "added repository collaborator invitation",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)",
            "Add parameters to AuthenticatedUser.get_issues (issue #166)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/Notifications' into develop",
            "Improve test coverage (pull #148)",
            "Move get_notification(s) to AuthenticatedUser (pull #148)",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Fix unit tests (my sed was a bit violent)",
            "Change home page",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Add client_id and client_secret parameters to AuthenticatedUser.create_authorization (issue #125)",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Add auto_init and gitignore_template to create_repo (issue #106)  http://developer.github.com/changes/2012-9-28-auto-init-for-repositories/",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/NamedUser.py",
        "commits": [
            "user.node_id missing (#1001)  'node_id' attribute was missing. Hence added the attribute using add_attribute script in AuthorizedUser  and NamedUser classes.  This fixes issue #999 .",
            "adding suspended_at property to NamedUSer (#922)",
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add __eq__ and __hash__ to NamedUser (#706)  * Add __eq__ and __hash__ to NamedUser  * Remove extra outer brackets from __eq__ in NamedUser  * Add unit tests for __eq__ and __hash__  * Remove redundant brackets in __eq__ : NamedUser",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Remove tests for deleted methods!",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "NamedUser.has_in_following",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "NamedUser.get_keys (Issue #130)",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testAttributes.txt",
        "commits": [
            "user.node_id missing (#1001)  'node_id' attribute was missing. Hence added the attribute using add_attribute script in AuthorizedUser  and NamedUser classes.  This fixes issue #999 .",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.setUp.txt",
        "commits": [
            "user.node_id missing (#1001)  'node_id' attribute was missing. Hence added the attribute using add_attribute script in AuthorizedUser  and NamedUser classes.  This fixes issue #999 .",
            "adding suspended_at property to NamedUSer (#922)",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testAttributesOfOtherUser.txt",
        "commits": [
            "user.node_id missing (#1001)  'node_id' attribute was missing. Hence added the attribute using add_attribute script in AuthorizedUser  and NamedUser classes.  This fixes issue #999 .",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/PullRequest.py",
        "commits": [
            "Add missing import to PullRequest (#1007)  PullRequest.get_review_comments() works with no arguments passed due to if short circuiting, but as soon as you pass since, you get an exception since datetime wasn't imported. Import it, and add a test case for good measure.  Closes #1004",
            "Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353",
            "Sync copyright header",
            "Add tests for mergeable state (#801)",
            "Re-work PullRequest reviewer request (#765)  Add create_review_request() and delete_review_request() methods to PullRequest, as well as renaming get_reviewer_requests() to get_review_requests() and cleaning up its return value to firstly respect teams, and secondly to cut out the middleman of PullRequestReviewerRequests, which has been removed.  Fixes #597",
            "PullRequest labels should use Issues URL (#754)  The Github API docs for PullRequests say to make use of the Issues API to add, remove, set and query labels. This means that we need to make use of the issue_url property for the PullRequest, not its own URL.",
            "Support labels for PullRequests (#752)  PullRequests can also have labels attached to them, like Issues or Milestones. Extend PullRequest to also export them if they are present, as well as adding methods to add, remove and set labels.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"assignees\" attribute to PullRequest object.",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge branch 'topic/PullRequest.assignee' into develop",
            "Documentation and tests for PullRequest.assignee (Pull #111)",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testGetReviewComments.txt",
        "commits": [
            "Add missing import to PullRequest (#1007)  PullRequest.get_review_comments() works with no arguments passed due to if short circuiting, but as soon as you pass since, you get an exception since datetime wasn't imported. Import it, and add a test case for good measure.  Closes #1004"
        ]
    },
    {
        "fileName": "github/tests/Migration.py",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/Organization.py",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818",
            "Implement Organization.invite_user (#880)  Utilize the API preview for the organization invite system to allow organization owners to invite outside colloborators either via passing in the user directly, or their email address.      Fixes #851",
            "Fix Organization display name",
            "Sync copyright header",
            "Add missing properties to Repository (#842)  Closes #784 Closes #785  First commit fixes a small bug that I observed while trying to record some new test fixtures: the stringification of the headers is not correctly printed as a list of tuples, but as an `iteritems` object, so I forced the list evaluation.  Second commit adds the missing properties `allow_merge_commit`, `allow_rebase_merge`, `allow_squash_merge`, and `has_projects` to the `Repository` class.  Note however that I ran into some trouble while modifying the `edit` method of the `Repository` class to make use of the new properties, specifically while writing tests, so I will fix the `edit` method in a future PR.",
            "Add description to Organizations (#838)  As mentioned in https://developer.github.com/v3/orgs/, an organization also has a description. This PR adds this attribute to the `Organization` class, as well as modifies its `edit` method so that it's possible to update it.  I noticed too late the [`add_attribute.py` script](https://github.com/PyGithub/PyGithub/blob/8ae2bcb1e6f96beeec99fbbcf00f4af46bb38cde/scripts/add_attribute.py), so I did my modifications by hand, but I noticed that the output of the script and the style used for all the other attributes are different. I preferred the style that is prevalent in the file, rather than the output of the script.",
            "API outside collaborators (#533)  * API outside collaborators  * Include remaining to organization api calls.",
            "Add add_to_members() and remove_from_membership() (#741)  * Add methods add_to_members(), has_in_pending_members(), and remove_from_membership() methods to Organization class.  * Add scrubbed replay files used for testing  * More massaging of test data  * Fix URL to remove organization membership  * Remove `has_in_pending_members()` method",
            "Add team privacy parameter to create team (#702)  * Add team privacy and add additional parameter to test. Still requires replaydata  * Reorder parameters to not break existing code  * Update tests for #702",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add hook support for organizations (#729)  * Add hook support for organizations Specifically, the create_hook, get_hook, and get_hooks calls  * Added support for the edit and delete hook functions",
            "Added missing parameters for repo creation (#623)  * Added missing parameters to organisation repo creation  * team_id should already be an id not a team object  * Name arguments in the test  * Fixed assertion check  * Added missing parameters to user repo creation  * Fixed comments",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Add auto_init and gitignore_template to create_repo (issue #106)  http://developer.github.com/changes/2012-9-28-auto-init-for-repositories/",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateMigration.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetMigrations.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Migration.setUp.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Migration.testDelete.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Migration.testGetArchiveUrlWhenDeleted.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Migration.testGetArchiveUrlWhenExported.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Migration.testGetArchiveUrlWhenNotExported.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Migration.testGetStatus.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Migration.testUnlockRepo.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testCreateMigration.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetMigrations.txt",
        "commits": [
            "Adding migration api wrapper (#899)  Closes #818"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testCreateColumn.txt",
        "commits": [
            "Add \"create repository project\" and \"create project column\" methods (#995)  Added the two methods:  - Create a project for a given repo  - Create a column for a given project   Tests are basics but done :)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateProject.txt",
        "commits": [
            "Add \"create repository project\" and \"create project column\" methods (#995)  Added the two methods:  - Create a project for a given repo  - Create a column for a given project   Tests are basics but done :)"
        ]
    },
    {
        "fileName": "github/tests/Repository.py",
        "commits": [
            "Add \"create repository project\" and \"create project column\" methods (#995)  Added the two methods:  - Create a project for a given repo  - Create a column for a given project   Tests are basics but done :)",
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead.",
            "Add a trailing slash to URL when updating or deleting a file (tests fixed) (#931)  * Add a trailing slash to URL when updating or deleting a file.  * Update test files to match new create/update/delete_file Repo methods  * Add trailing slash to get_contents() method  * update tests  * add missing slash in get_dir_contents  * add example usage  * remove dup slashes in tests  * clarify example comments",
            "Fix handling of 301 redirects (#916)  Requester.__requestRaw() was handling 301 redirects by passing the full URL to itself, when it only expects a URL path, so parse out the path, and pass that in. Add a test for this behaviour.  Closes: #906",
            "Implement Repository.get_collaborator_permission (#881)  Add a method to Repository, collaborator_permission that allows users with push access to repositories to query the permission level of collaborators.  Fixes #722",
            "Sync copyright header",
            "Use TestCase.assertRaises() (#782)  Now that we no longer support Python 2.6, we can use the assertRaises() method of TestCase as a context manager, tiding up a large amount of technical debt.",
            "Revert \"Remove NamedUser.contributions (#774)\" (#865)  This reverts commit a519e4675a911a3f20f1ad197cbbbb14bdd1842d.  NamedUser.contributions can be populated, so we should fill in the data.  Fixes #850",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Add missing arguments to Repository.edit (#844)  As promised in https://github.com/PyGithub/PyGithub/pull/842, here's a PR to update the `edit` method so that it allows editing the newly added properties.",
            "Add support for getting / replacing topics (#634) (#832)  * Add support for getting and replacing topics on a repository #634  * Add / fix tests, accept list vs dict for replace_topics (#634)",
            "Handle HTTP 202 HEAD&GET with a retry (#791)  * Handle HTTP 202 Fixes #564 After some testing, it seems GitHub seems to be able to process the chrunching of statistics for every repository I tested in around 2 seconds. So a delay of around 5 seconds should be plenty to be very certain that the next try should succeed. Another option would be to put this value lower and possibly waste an extra retry on it.  * Only re-request data if HEAD or GET (those are 'safe') to e.g. avoid running a duplicate POST or PUT, that can change stuff on the server Using RFC 2616 and https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html as guideline  * Fix testStatistics  * change wait time to 2 secs",
            "Remove NamedUser.contributions (#774)  The contributions attribute is no longer sent by Github for NamedUsers, so remove the attribute.  Fixes #443",
            "Correct Repository.get_git_tree recursive use (#767)  The API docs for Repository.get_git_tree specify that the URL parameter for fetching a tree recursively should be ?recursive=1, not a truthy value. To not change the API we present, check if it is True before setting it to 1. Change another callsite of Repository.get_git_tree to specify recursive=False to make sure it doesn't appear in the query string.  Fixes #560",
            "Implement License API (#734)  * Implement License API  * Update copyright",
            "Labels API: support description (#738)  The description attribute handling requirement is   a custom media type in the Accept header:     application/vnd.github.symmetra-preview+json  Limitation: Repository.get_labels does not report description, possibly something has changed in the preview API.",
            "Source Import API (#673)  * add import source  * add import header  * create/get source import for repo, SourceImport class  * Corrected use_lfs, not considered completed with creation  * vcs creds optional  * SourceImport test, removed unneeded attributes  * create/get source import tests for repo  * Encoding and copyright comment  * styling fixes  * Update SourceImport.py  * Update SourceImport.py  * Update SourceImport.py",
            "Apply fix_headers script to update copyright info",
            "Added target_commitish option to Repository.create_git_release() (#625)  * Added is_draft and is_prerelease property to GitRelease  * Added target_commitish option to Repository.create_git_release()  * Added test for Repository.create_git_release()  * Renamed attr of GitRelease: is_draft, is_prerelease -> draft, prerelease",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Collaborator site admin (#719)  * Add admin_user property to NamedUser  * Fix type from string to bool for site_admin property  * Add a test for site_admin",
            "Add maintainer can modify flag to create pull request (#703)  * Add flag for maintainer can modify when creating pull requests  * Change default to be None to let github decide the behaviour  * Update docstring  * Follow conventions from other functions",
            "Add permissions field to NamedUser (#676)",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"assignees\" argument in Repository.create_issue()",
            "Merge pull request #448 from PyGithub/contentfile-listing  Support directories in repo.get_contents",
            "adds support for content dirs",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "Merge branch 'enix223-master'",
            "Merge branch 'master' of https://github.com/enix223/PyGithub into enix223-master",
            "update doc url everywhere (#420)",
            "Merge branch 'master' of https://github.com/enix223/PyGithub",
            "fix python3 compatibility issue for using json/base64",
            "fix python3 compatability error in test case",
            "Add repo content create/update/delete testcase",
            "fix protect branch tests",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint",
            "add content file create/update/delete api",
            "Merge pull request #347 from danvk/starred-at  Add repo.get_stargazers_with_dates()",
            "Add repo.get_stargazers_with_dates()",
            "Merge pull request #340 from crwilcox/master  Fixes #339 by allowing strings in the labels list.",
            "Add test for #339 fix",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #305 from Jucyio/develop  Add support to create Repository objects lazily in MainClass.",
            "Add support to create Repository objects lazily in MainClass.  This lets users do the following without issuing an unnecessary request:  issues_of_my_repository = g.get_repo('PyGithub/PyGithub').get_issues()  Since the GithubObject layer handles laziness transparently, lazy loading is enabled by default, and can be disabled via the `lazy` kwarg. This does not affect any test except tests that pertain to caching or laziness itself.",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Publish version 1.21.0",
            "Merge branch 'develop'",
            "Fix tests for Python 2.5 and 2.6",
            "Finish .../stats/... (#203)",
            "First step of implementation of Repository.get_stats_xxx (#203)",
            "Add 'author' to 'Repository.get_commits' (#204)",
            "Merge branch 'develop'",
            "Remove tests for deleted methods!",
            "Fix public/private in Repository.edit (#199)",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "pep8",
            "Merge branch 'develop'",
            "Improve coverage for #187",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Reduce 2to3 differences",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Fix unit tests (my sed was a bit violent)",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring.",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Repository.get_issues_comments and Repository.get_pulls_comments (issue #126)",
            "Complete \"ref in Repository.get_contents and .get_readme\" (pull #124)  Add documentation and automated tests",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Implement default_branch in Repository.edit (issue #107)  See http://developer.github.com/changes/2012-10-24-set-default-branch/",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Merge branch 'develop'",
            "pep8...",
            "Implement optional revert of #102 (issue #104)",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.setUp.txt",
        "commits": [
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Fix tests broken by previous commit",
            "Add 'author' to 'Repository.get_commits' (#204)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Traffic.setUp.txt",
        "commits": [
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Traffic.testGetClones.txt",
        "commits": [
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Traffic.testGetPaths.txt",
        "commits": [
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Traffic.testGetReferrers.txt",
        "commits": [
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Traffic.testGetViews.txt",
        "commits": [
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/tests/Traffic.py",
        "commits": [
            "Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926"
        ]
    },
    {
        "fileName": "github/tests/GitRelease.py",
        "commits": [
            "Change type of GitRelease.author to NamedUser (#969)  Github's release object in the API response contains an `author` field having a value much more like a `NamedUser` but not `GitAuthor`.  e.g. https://api.github.com/repos/edhollandAL/PyGithub/releases/1210902  ``` {   \"id\": 1210902,   \"author\": {     \"login\": \"edhollandAL\",     \"id\": 11922660,     \"node_id\": \"MDQ6VXNlcjExOTIyNjYw\",     \"avatar_url\": \"https://avatars1.githubusercontent.com/u/11922660?v=4\",     \"gravatar_id\": \"\",     \"url\": \"https://api.github.com/users/edhollandAL\",     \"html_url\": \"https://github.com/edhollandAL\",     \"followers_url\": \"https://api.github.com/users/edhollandAL/followers\",     \"following_url\": \"https://api.github.com/users/edhollandAL/following{/other_user}\",     \"gists_url\": \"https://api.github.com/users/edhollandAL/gists{/gist_id}\",     \"starred_url\": \"https://api.github.com/users/edhollandAL/starred{/owner}{/repo}\",     \"subscriptions_url\": \"https://api.github.com/users/edhollandAL/subscriptions\",     \"organizations_url\": \"https://api.github.com/users/edhollandAL/orgs\",     \"repos_url\": \"https://api.github.com/users/edhollandAL/repos\",     \"events_url\": \"https://api.github.com/users/edhollandAL/events{/privacy}\",     \"received_events_url\": \"https://api.github.com/users/edhollandAL/received_events\",     \"type\": \"User\",     \"site_admin\": false   },   // (ignored) } ```",
            "Sync copyright header",
            "GitRelease methods documentation (#821)  Hi, here's my small contribution to the documentation in relation to #819   Few things: * the `delete_release` method always returns `True` so not sure if the return type is truly valid - potentially a bug * I've tried generating the documentation locally to check if formatting is ok but failed - is there a guide to it?   I followed the read the docs starter guide but that didn't seem to reflect the way it's done here",
            "Include target_commitish in GitRelease (#788)",
            "added tarball_url, zipball_url, prerelease and draft property (#522)  * added tarball_url, zipball_url, prerelease and draft property to GitRelease  * Add tests for new attributes",
            "Apply fix_headers script to update copyright info",
            "Added target_commitish option to Repository.create_git_release() (#625)  * Added is_draft and is_prerelease property to GitRelease  * Added target_commitish option to Repository.create_git_release()  * Added test for Repository.create_git_release()  * Renamed attr of GitRelease: is_draft, is_prerelease -> draft, prerelease",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "make created_at/published_at attrs available for Release objects (#689)",
            "Add method to get latest release of a repository (#609)",
            ":recycle: Fix all pep8 coding conventions",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases",
            "Merge pull request #479 from ben-whitney/html_url_release  add html_url to GitRelease",
            "add html_url to GitRelease",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Fix style problems in new code",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testSearchReposWithNoResults.txt",
        "commits": [
            "Use total_count from data in PaginatedList (#963)  When there is no link header sent, this signifies that this is the only page of results. If data is empty, or only contains a list of items, we should count them, but this can be defeated -- if the returned data contains a total_count key, we should use it. This also uncovered a bug in the test suite for searching topics.  Closes #960"
        ]
    },
    {
        "fileName": "github/tests/Search.py",
        "commits": [
            "Use total_count from data in PaginatedList (#963)  When there is no link header sent, this signifies that this is the only page of results. If data is empty, or only contains a list of items, we should count them, but this can be defeated -- if the returned data contains a total_count key, we should use it. This also uncovered a bug in the test suite for searching topics.  Closes #960",
            "Add a Topic object to cover search_topics (#959)  The return value of MainClass.search_topics() was a paginated list of Repository, which is incorrect. Add a Topic class to encapuslate what is returned.  Fixes #929",
            "Add highlight search to search_code function (#925)  * :sparkles: add highlight search to search_code function  * :white_check_mark: add highlighting search code tests",
            "Feature: Search By Topics (#893)",
            "Sync copyright header",
            "Calcuate totalCount without iterating PaginatedList (#820)  This PR #596 seems stale, so I have opened up this one with the requested changes from @sfdye.  This is the code from @Tommos0's [comment][1] with some modification.  There are 2 tests failing. I think this is due to the change in the query string and the cached test data just needs to be refreshed for those tests.  [1]: https://github.com/PyGithub/PyGithub/pull/596#issuecomment-315013949",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Finished search_commits PR (#727)  * Added support for newer commit search API endpoint  * Added tests for new commit search method on main Github class  * Fixed sort parameter of search_commits",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Fix urlencoding for search (see #237)  Parameters are encoded in Requester => simply remove urllib.quote Path needs to be encoded => change to urllib.quote_plus as in #237",
            "Fix tests for Python 3",
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs"
        ]
    },
    {
        "fileName": "github/tests/Authentication.py",
        "commits": [
            "Add support for JWT authentication (#948)  APIs such as https://developer.github.com/v3/apps/#find-organization-installation use a JWT for authentication. Adding support for JWT auth.",
            "Sync copyright header",
            "Use TestCase.assertRaises() (#782)  Now that we no longer support Python 2.6, we can use the assertRaises() method of TestCase as a context manager, tiding up a large amount of technical debt.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Add a test that would have caught #153",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Prepare version 1.9.0",
            "Add a customizable User-Agent (issue #109)",
            "Merge branch 'topic/UnauthenticatedRateLimitedRequests' into develop",
            "Add tests for pull #112",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authentication.testJWTAuthentication.txt",
        "commits": [
            "Add support for JWT authentication (#948)  APIs such as https://developer.github.com/v3/apps/#find-organization-installation use a JWT for authentication. Adding support for JWT auth."
        ]
    },
    {
        "fileName": "github/tests/__main__.py",
        "commits": [
            "Add support for JWT authentication (#948)  APIs such as https://developer.github.com/v3/apps/#find-organization-installation use a JWT for authentication. Adding support for JWT auth.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #307 from Jucyio/tokentest  Support recording tests when using an OAuth token",
            "Add support to record tests using the oauth token instead of a username/password. This lets people whose account uses 2-factor authentication record tests.",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Restore Python 2.5",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Fixes for issue #86"
        ]
    },
    {
        "fileName": "github/tests/Issue945.py",
        "commits": [
            "Added missing params to constructor when reversed (#946)  This PR proposes adding two missing params to constructor in `.reversed`. This preserves the `headers` as well as the `list_item` once cloned.  Fixes #945."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue945.setUp.txt",
        "commits": [
            "Added missing params to constructor when reversed (#946)  This PR proposes adding two missing params to constructor in `.reversed`. This preserves the `headers` as well as the `list_item` once cloned.  Fixes #945."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue945.testReservedPaginatedListAttributePreservation.txt",
        "commits": [
            "Added missing params to constructor when reversed (#946)  This PR proposes adding two missing params to constructor in `.reversed`. This preserves the `headers` as well as the `list_item` once cloned.  Fixes #945."
        ]
    },
    {
        "fileName": "github/tests/Exceptions.py",
        "commits": [
            "Fix unable to trigger RateLimitExceededException. (#943)  I found when authorized, the ratelimit error message is different from unauthorized.  so i add this.  After studying hard with my 2b colleagues @AnYeMoWang , we finally realized how tests wrote.  \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38",
            "Sync copyright header",
            "Use TestCase.assertRaises() (#782)  Now that we no longer support Python 2.6, we can use the assertRaises() method of TestCase as a context manager, tiding up a large amount of technical debt.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "update doc url everywhere (#420)",
            "Merge pull request #395 from jlafleche/jlf/fixExceptionPickling  Fix for pickling exception when deserializing GithubException.",
            "Fix for pickling exception when deserializing GithubException.  See: https://bugs.python.org/issue9400  \"Because CalledProcessError extends PyExc_BaseException, which defines a __reduce__ method, that special method cause the pickle load to call the exception type's __init__ method with packed self.args as arguments. So if a subclass of \"Exception\" needs to behave correctly in pickling, it should make self.args meet its __init__ method's function signature. \"",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Add test coverage for #182",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Add two new types of exceptions (issue #152)",
            "Merge branch 'topic/SpecificExceptions' into develop",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Refactor tests  We don't need to inspect the exception, so we can use unittest.TestCase.assertRaises",
            "Raise a specific exception for non-existing objects (issue #152)",
            "Raise a specific exception for bad credentials (issue #152)",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Document `#pragma no cover`s (Issue #154)",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Small fixes => tests pass after 2to3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/SpecificExceptions.testAuthenticatedRateLimitExceeded.txt",
        "commits": [
            "Fix unable to trigger RateLimitExceededException. (#943)  I found when authorized, the ratelimit error message is different from unauthorized.  so i add this.  After studying hard with my 2b colleagues @AnYeMoWang , we finally realized how tests wrote.  \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38 \ud83d\ude38"
        ]
    },
    {
        "fileName": "github/tests/Branch.py",
        "commits": [
            "Added support for required signatures on protected branches (#939)  Wraps the parts of the branch protection API that allows the user to require signed commits on a branch. New methods are : * Branch.get_required_signatures : returns true if signed commits are required * Branch.add_required_signatures : adds the requirements for signed commits on a branch * Branch.remove_required_signatures : removes the requirement for signed commits on a branch  It uses the API provided on this page : https://developer.github.com/v3/repos/branches/  Since this feature is in [preview](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures/) I pass the 'Accept application/vnd.github.zzzax-preview+json' header to each request.",
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353",
            "Sync copyright header",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testAddRequiredSignatures.txt",
        "commits": [
            "Added support for required signatures on protected branches (#939)  Wraps the parts of the branch protection API that allows the user to require signed commits on a branch. New methods are : * Branch.get_required_signatures : returns true if signed commits are required * Branch.add_required_signatures : adds the requirements for signed commits on a branch * Branch.remove_required_signatures : removes the requirement for signed commits on a branch  It uses the API provided on this page : https://developer.github.com/v3/repos/branches/  Since this feature is in [preview](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures/) I pass the 'Accept application/vnd.github.zzzax-preview+json' header to each request."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testGetRequiredSignatures.txt",
        "commits": [
            "Added support for required signatures on protected branches (#939)  Wraps the parts of the branch protection API that allows the user to require signed commits on a branch. New methods are : * Branch.get_required_signatures : returns true if signed commits are required * Branch.add_required_signatures : adds the requirements for signed commits on a branch * Branch.remove_required_signatures : removes the requirement for signed commits on a branch  It uses the API provided on this page : https://developer.github.com/v3/repos/branches/  Since this feature is in [preview](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures/) I pass the 'Accept application/vnd.github.zzzax-preview+json' header to each request."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testRemoveRequiredSignatures.txt",
        "commits": [
            "Added support for required signatures on protected branches (#939)  Wraps the parts of the branch protection API that allows the user to require signed commits on a branch. New methods are : * Branch.get_required_signatures : returns true if signed commits are required * Branch.add_required_signatures : adds the requirements for signed commits on a branch * Branch.remove_required_signatures : removes the requirement for signed commits on a branch  It uses the API provided on this page : https://developer.github.com/v3/repos/branches/  Since this feature is in [preview](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures/) I pass the 'Accept application/vnd.github.zzzax-preview+json' header to each request."
        ]
    },
    {
        "fileName": "github/tests/Issue937.py",
        "commits": [
            "Ability to filter repository collaborators (#938)  ## Changes - Add `affiliation` parameter to `get_collaborators()` and use it to filter collaborators through the API - Resolves #937   PS: Would have loved to add a simple test for this but there seems to be a problem on my end using OAuth as I'm just not able to authenticate to the API during tests."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue937.setUp.txt",
        "commits": [
            "Ability to filter repository collaborators (#938)  ## Changes - Add `affiliation` parameter to `get_collaborators()` and use it to filter collaborators through the API - Resolves #937   PS: Would have loved to add a simple test for this but there seems to be a problem on my end using OAuth as I'm just not able to authenticate to the API during tests."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue937.testCollaboratorsAffiliation.txt",
        "commits": [
            "Ability to filter repository collaborators (#938)  ## Changes - Add `affiliation` parameter to `get_collaborators()` and use it to filter collaborators through the API - Resolves #937   PS: Would have loved to add a simple test for this but there seems to be a problem on my end using OAuth as I'm just not able to authenticate to the API during tests."
        ]
    },
    {
        "fileName": "github/tests/Notification.py",
        "commits": [
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testMarkNotificationsAsRead.txt",
        "commits": [
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Notification.setUp.txt",
        "commits": [
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Notification.testMarkAsRead.txt",
        "commits": [
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testMarkNotificationsAsRead.txt",
        "commits": [
            "Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + \"/notifications\" instead."
        ]
    },
    {
        "fileName": "github/tests/Issue140.py",
        "commits": [
            "Add a trailing slash to URL when updating or deleting a file (tests fixed) (#931)  * Add a trailing slash to URL when updating or deleting a file.  * Update test files to match new create/update/delete_file Repo methods  * Add trailing slash to get_contents() method  * update tests  * add missing slash in get_dir_contents  * add example usage  * remove dup slashes in tests  * clarify example comments",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Fix coverage",
            "Fix pep8 and coverage",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Implement Repository.get_dir_contents (issue #140)"
        ]
    },
    {
        "fileName": "github/tests/Issue174.py",
        "commits": [
            "Add a trailing slash to URL when updating or deleting a file (tests fixed) (#931)  * Add a trailing slash to URL when updating or deleting a file.  * Update test files to match new create/update/delete_file Repo methods  * Add trailing slash to get_contents() method  * update tests  * add missing slash in get_dir_contents  * add example usage  * remove dup slashes in tests  * clarify example comments",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Merge branch 'topic/HttpRedirect' into develop",
            "Add test for pull request #174"
        ]
    },
    {
        "fileName": "doc/examples/Commit.rst",
        "commits": [
            "Example to show How to get Commit Date (#927)  ## What does this change do? Adds a small example of how to get at the date a commit took place.  ### Changes #### doc/examples/Commit.rst Adds a block of code that demonstrates how to get at a commit's date.  ## Motivation This example is in the spirit of #874.  When I began using PyGithub it was not readily apparent to me where the commit date was being abstracted to. Being unfamiliar with Git's API, it took some convincing for me to be satisfied that the `Commit.commit.author/committer.date` path would get me the commit date.  I would hope that this would save somebody a little bit of time in the future.  ## How has this been tested? I've built the docs locally and made sure the HTML is generated as expected.  ## Screenshots ![2018-10-11 3](https://user-images.githubusercontent.com/16039329/46782728-add4d980-ccfd-11e8-88dd-1e48be629eb5.png)",
            "Set up example docs skeleton"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testSearchHighlightingCode.txt",
        "commits": [
            "Fix test",
            "Add highlight search to search_code function (#925)  * :sparkles: add highlight search to search_code function  * :white_check_mark: add highlighting search code tests"
        ]
    },
    {
        "fileName": "doc/examples/Milestone.rst",
        "commits": [
            "New use examples (#920)  This PR add the follow code examples  * Issue examples (get list, get specific issue, create issue) * Milestone examples (get list, get specific milestone, create milestone)  Ref.: https://github.com/PyGithub/PyGithub/issues/874"
        ]
    },
    {
        "fileName": "github/tests/Milestone.py",
        "commits": [
            "Improve __repr__ method of Milestone class (#921)  This commit add the title of milestone in string representation of Milestone class. This modification improve readbility of milestone instances.  Before: ```python >>> repo.get_milestone(number=1) Milestone(number=1)  ``` After: ```python >>> repo.get_milestone(number=1) Milestone(title='Milestone Example', number=1)  ```",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetRepositoryWith301Redirect.txt",
        "commits": [
            "Fix handling of 301 redirects (#916)  Requester.__requestRaw() was handling 301 redirects by passing the full URL to itself, when it only expects a URL path, so parse out the path, and pass that in. Add a test for this behaviour.  Closes: #906"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetReposWithArguments.txt",
        "commits": [
            "get repos missing params for authenticated users (#915)  first commit to fix issue #435",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Github_.py",
        "commits": [
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do.",
            "Sync copyright header",
            "Add get_organizations() (#748)  * Add get_organizations()  * Add unit tests for get_organizations",
            "Implement License API (#734)  * Implement License API  * Update copyright",
            "Depreciate legacy search API",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop' of https://github.com/tylertreat/PyGithub into develop",
            "Implement support for getting repo by id  This allows the Github class to retrieve repos by either their full name or id. If the user passes in an id for a repo which doesn't exist or in which they don't have sufficient permissions, an UnknownObjectException will be raised. This addresses issue #245.",
            "Fix urlencoding for search (see #237)  Parameters are encoded in Requester => simply remove urllib.quote Path needs to be encoded => change to urllib.quote_plus as in #237",
            "Add initial version of getemojis",
            "Merge branch 'develop'",
            "Github.get_hook (#196)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Github.get_repos (to get all public repositories)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pep8 and copyrights",
            "Implement `GET /users` (issue #173)",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "pep8",
            "Slightly improve coverage :-D",
            "Move get_notification(s) to AuthenticatedUser (pull #148)",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "this fixes #108",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Prepare version 1.10.0 + pep8",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Merge branch 'topic/RetrieveGitignoreTemplates' into develop",
            "Github.get_gitignore_template[s] (issue #120)",
            "Merge branch 'topic/GetRepoFromFullName' into develop  Conflicts: \tReadMe.md",
            "Get repo from full name: tests, doc, fix param name (Pull #121)",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Fix test when run on Linux with source tree on case-insensitive filesystem"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetGists.txt",
        "commits": [
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetGistsWithSince.txt",
        "commits": [
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetGists.txt",
        "commits": [
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Time.py",
        "commits": [
            "Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.setUp.txt",
        "commits": [
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testGetAllProjectCards.txt",
        "commits": [
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testGetOrganizationProjects.txt",
        "commits": [
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testGetProject.txt",
        "commits": [
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testGetProjectCardContent.txt",
        "commits": [
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testGetRepositoryProjects.txt",
        "commits": [
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testProjectAttributes.txt",
        "commits": [
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testProjectCardAttributes.txt",
        "commits": [
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Project.testProjectColumnAttributes.txt",
        "commits": [
            "Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (\"get_content\" method?) - [x] centralize header management for \"preview\" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testPaginateSearchTopics.txt",
        "commits": [
            "Feature: Search By Topics (#893)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testSearchTopics.txt",
        "commits": [
            "Feature: Search By Topics (#893)"
        ]
    },
    {
        "fileName": "github/tests/Issue142.py",
        "commits": [
            "Adding support for search/graphql rate limit, fixes #553",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Github.get_rate_limit",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'master' into develop",
            "Fix decoding on Python3 (bytes instead of str) (Issue #142)"
        ]
    },
    {
        "fileName": "github/tests/RateLimiting.py",
        "commits": [
            "Adding support for search/graphql rate limit, fixes #553",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Make Rate.reset an UTC datetime",
            "Github.get_rate_limit",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Fix copyrights (#181 #182 #184 #186 #187)",
            "Improve coverage",
            "Merge branch 'topic/ImproveRateLimiting' into develop",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Minor enhancements to rate limiting information  If rate limiting information hasn't been retrieved already, it will be checked rather than just assuming 5000 requests remaining of 5000.  Add an additional attribute `rate_limiting_resettime` to reflect github's new X-RateLimit-Reset header. This integer value is a unix timestamp.  RateLimiting unit test updated accordingly.",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RateLimiting.testGetRateLimit.txt",
        "commits": [
            "Adding support for search/graphql rate limit, fixes #553",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Github.get_rate_limit"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RateLimiting.testRateLimiting.txt",
        "commits": [
            "Adding support for search/graphql rate limit, fixes #553",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/ImproveRateLimiting' into develop",
            "Minor enhancements to rate limiting information  If rate limiting information hasn't been retrieved already, it will be checked rather than just assuming 5000 requests remaining of 5000.  Add an additional attribute `rate_limiting_resettime` to reflect github's new X-RateLimit-Reset header. This integer value is a unix timestamp.  RateLimiting unit test updated accordingly.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RateLimiting.testResetTime.txt",
        "commits": [
            "Adding support for search/graphql rate limit, fixes #553",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Improve coverage"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testInviteUserAsNonOwner.txt",
        "commits": [
            "Implement Organization.invite_user (#880)  Utilize the API preview for the organization invite system to allow organization owners to invite outside colloborators either via passing in the user directly, or their email address.      Fixes #851"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testInviteUserByEmail.txt",
        "commits": [
            "Implement Organization.invite_user (#880)  Utilize the API preview for the organization invite system to allow organization owners to invite outside colloborators either via passing in the user directly, or their email address.      Fixes #851"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testInviteUserByName.txt",
        "commits": [
            "Implement Organization.invite_user (#880)  Utilize the API preview for the organization invite system to allow organization owners to invite outside colloborators either via passing in the user directly, or their email address.      Fixes #851"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testInviteUserWithBoth.txt",
        "commits": [
            "Implement Organization.invite_user (#880)  Utilize the API preview for the organization invite system to allow organization owners to invite outside colloborators either via passing in the user directly, or their email address.      Fixes #851"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testInviteUserWithRoleAndTeam.txt",
        "commits": [
            "Implement Organization.invite_user (#880)  Utilize the API preview for the organization invite system to allow organization owners to invite outside colloborators either via passing in the user directly, or their email address.      Fixes #851"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditProtection.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditProtectionDismissalUsersWithUserOwnedBranch.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditProtectionPushRestrictionsAndDismissalUser.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditProtectionPushRestrictionsWithUserOwnedBranch.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditRequiredPullRequestReviews.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditRequiredPullRequestReviewsWithTooLargeApprovingReviewCount.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditRequiredPullRequestReviewsWithUserBranchAndDismissalUsers.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testRemoveProtection.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testRemoveRequiredPullRequestReviews.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/BranchProtection.setUp.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RequiredPullRequestReviews.setUp.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RequiredPullRequestReviews.testOrganizationOwnedTeam.txt",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/RequiredPullRequestReviews.py",
        "commits": [
            "Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.",
            "Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353",
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCollaboratorPermission.txt",
        "commits": [
            "Implement Repository.get_collaborator_permission (#881)  Add a method to Repository, collaborator_permission that allows users with push access to repositories to query the permission level of collaborators.  Fixes #722"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCollaboratorPermissionNoPushAccess.txt",
        "commits": [
            "Implement Repository.get_collaborator_permission (#881)  Add a method to Repository, collaborator_permission that allows users with push access to repositories to query the permission level of collaborators.  Fixes #722"
        ]
    },
    {
        "fileName": "github/tests/BadAttributes.py",
        "commits": [
            "Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353",
            "Switch remaining try/except tests to assertRaises (#879)  The BadAttributes and Enterprise tests made use of try/except to check details of raised exceptions, so switch to using assertRaises, much like the github.GithubException tests[1].  1: cf056883592b59e2aafe5dde7b94917868b6c315",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Fix (?) Travis for Python 2.5 and 2.6",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)"
        ]
    },
    {
        "fileName": "github/tests/CommitCombinedStatus.py",
        "commits": [
            "Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "Merge pull request #382 from doctoryes/master  Add ability to check combined status.",
            "Add:   - CommitCombinedStatus class   - get_combined_status() to Commit class to return combined status   - Add test for combined status."
        ]
    },
    {
        "fileName": "github/tests/Issue494.py",
        "commits": [
            "Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #495 from sjcorbett/fix/githubobject-repr  Encode GithubObject repr values in utf-8",
            "Encode GithubObject repr values in utf-8 when using Python2"
        ]
    },
    {
        "fileName": "github/tests/IssueEvent.py",
        "commits": [
            "Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353",
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testGetEvents.txt",
        "commits": [
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/IssueEvent.setUp.txt",
        "commits": [
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/IssueEvent.testAttributes.txt",
        "commits": [
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetIssuesEvents.txt",
        "commits": [
            "Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Enterprise.py",
        "commits": [
            "Switch remaining try/except tests to assertRaises (#879)  The BadAttributes and Enterprise tests made use of try/except to check details of raised exceptions, so switch to using assertRaises, much like the github.GithubException tests[1].  1: cf056883592b59e2aafe5dde7b94917868b6c315",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Fix tests for Python <= 2.6",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Improve test coverage a bit",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "doc/index.rst",
        "commits": [
            "Set up example docs skeleton",
            "Fix a few docs error",
            "Merge branch 'develop'",
            "Improve documentation",
            "Improve",
            "Improve",
            "Re-organize doc"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testAcceptInvitation.txt",
        "commits": [
            "Remove custom swamp-thing-preview header (#873)  The Repository Invitation API graduated on July 17, 2017, so the custom Accept header is no longer required.",
            "added repository collaborator invitation"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue214.testCollaborators.txt",
        "commits": [
            "Remove custom swamp-thing-preview header (#873)  The Repository Invitation API graduated on July 17, 2017, so the custom Accept header is no longer required.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "added repository collaborator invitation",
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "adding the tests for issue 214"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testAssignees.txt",
        "commits": [
            "Remove custom swamp-thing-preview header (#873)  The Repository Invitation API graduated on July 17, 2017, so the custom Accept header is no longer required.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "added repository collaborator invitation",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCollaborators.txt",
        "commits": [
            "Remove custom swamp-thing-preview header (#873)  The Repository Invitation API graduated on July 17, 2017, so the custom Accept header is no longer required.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add permissions field to NamedUser (#676)",
            "added repository collaborator invitation",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ContentFile.py",
        "commits": [
            "Sync copyright header",
            "Add download_url to ContentFile, closes #575",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Fix ContentFile.decoded_content for Python 3.0 to 3.2",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Document `#pragma no cover`s (Issue #154)",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "pep8 + readme",
            "Restore Python 2.5 and 2.6",
            "Small fixes => tests pass after 2to3",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Issue134.py",
        "commits": [
            "Sync copyright header",
            "Use TestCase.assertRaises() (#782)  Now that we no longer support Python 2.6, we can use the assertRaises() method of TestCase as a context manager, tiding up a large amount of technical debt.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Retrieve scopes for current oauth token from response headers (Issue #134)",
            "Fix indentation",
            "Reproduce issue #134"
        ]
    },
    {
        "fileName": "github/tests/Issue572.py",
        "commits": [
            "Sync copyright header",
            "Added Issue.as_pull_request() and PullReqest.as_issue() (#630)"
        ]
    },
    {
        "fileName": "github/tests/Label.py",
        "commits": [
            "Sync copyright header",
            "Labels API: support description (#738)  The description attribute handling requirement is   a custom media type in the Accept header:     application/vnd.github.symmetra-preview+json  Limitation: Repository.get_labels does not report description, possibly something has changed in the preview API.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/RepositoryKey.py",
        "commits": [
            "Sync copyright header",
            "Fix delete method for RepositoryKey",
            "Update the RepositoryKey class (#530)  # The problems I attempt to solve  - `RepositoryKey.created_at` is available on the Github API, but not in PyGithub - `RepositoryKey.edit()` is not supported anymore by the Github API, see https://developer.github.com/v3/repos/keys/#edit-a-deploy-key  # How I went about solving the problem  I added myself a new deploy key to one of my repositories, and recorded the existing tests using my account. I could not keep the existing test data as the specified key does not exist anymore, I added a comment for the next contributor to help him figure out how to record new tests.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions."
        ]
    },
    {
        "fileName": "github/tests/SourceImport.py",
        "commits": [
            "Sync copyright header",
            "Source Import API (#673)  * add import source  * add import header  * create/get source import for repo, SourceImport class  * Corrected use_lfs, not considered completed with creation  * vcs creds optional  * SourceImport test, removed unneeded attributes  * create/get source import tests for repo  * Encoding and copyright comment  * styling fixes  * Update SourceImport.py  * Update SourceImport.py  * Update SourceImport.py"
        ]
    },
    {
        "fileName": "github/tests/Team.py",
        "commits": [
            "Sync copyright header",
            "Allow editing of Team descriptions (#839)  PR https://github.com/PyGithub/PyGithub/pull/753 added this property but forgot to make it editable. The current PR fixes this omission.",
            "Add remove_membership() method to Teams class (#807)  Per the Github v3 API [docs](https://developer.github.com/v3/teams/members/#deprecation-notice-2), the \"remove team member\" api is deprecated. This PR implements the new API call.  Deprecated API: ``` DELETE /teams/:team_id/members/:username ```  New API: ``` DELETE /teams/:team_id/memberships/:username ```  This PR also adds a `deprecation` notice to the docstring of the deprecated methods.",
            "Add support for team privacy (#763)  Teams contain support for privacy, by being either closed, or secret. Export the string via a property, and allow editing it via the edit method.",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Get organization from the team (#590)  * Get organization from the team  * Fix ReplayData for Team",
            "Add role parameter to Team.add_membership method (#638)",
            "Add add_membership testcase (#637)",
            "Merge pull request #454 from mattjmorrison/add-team-repo-permissions  Add ability to set permission for team repo",
            "Add ability to set permission for team repo  https://developer.github.com/v3/orgs/teams/#add-or-update-team-repository",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions."
        ]
    },
    {
        "fileName": "github/tests/UserKey.py",
        "commits": [
            "Sync copyright header",
            "Remove edit for UserKey as it's immutable now",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions."
        ]
    },
    {
        "fileName": "github/tests/BranchProtection.py",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.setUp.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testAdminEnforcement.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditRequiredStatusChecks.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditTeamPushRestrictions.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testEditUserPushRestrictions.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testRemovePushRestrictions.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testRemoveRequiredStatusChecks.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testChangeBranchProtectionContexts.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "fix protect branch tests",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testChangeBranchProtectionEnforcementLevel.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "fix protect branch tests",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testProtectBranch.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header.",
            "fix protect branch tests",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testRaiseErrorWithBranchProtectionWithInvalidEnforcementLevel.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header.",
            "fix protect branch tests",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testRaiseErrorWithBranchProtectionWithOutContext.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header.",
            "fix protect branch tests",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testRaiseErrorWithOutBranch.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header.",
            "fix protect branch tests",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testRemoveBranchProtection.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586",
            "Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header.",
            "fix protect branch tests",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RequiredStatusChecks.setUp.txt",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/RequiredStatusChecks.py",
        "commits": [
            "Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API",
            "Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testEditWithAllArguments.txt",
        "commits": [
            "Add missing arguments to Repository.edit (#844)  As promised in https://github.com/PyGithub/PyGithub/pull/842, here's a PR to update the `edit` method so that it allows editing the newly added properties.",
            "Merge branch 'develop'",
            "Fix public/private in Repository.edit (#199)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateRepositoryWithAllArguments.txt",
        "commits": [
            "Add missing properties to Repository (#842)  Closes #784 Closes #785  First commit fixes a small bug that I observed while trying to record some new test fixtures: the stringification of the headers is not correctly printed as a list of tuples, but as an `iteritems` object, so I forced the list evaluation.  Second commit adds the missing properties `allow_merge_commit`, `allow_rebase_merge`, `allow_squash_merge`, and `has_projects` to the `Repository` class.  Note however that I ran into some trouble while modifying the `edit` method of the `Repository` class to make use of the new properties, specifically while writing tests, so I will fix the `edit` method in a future PR.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testCreateRepoWithAllArguments.txt",
        "commits": [
            "Add missing properties to Repository (#842)  Closes #784 Closes #785  First commit fixes a small bug that I observed while trying to record some new test fixtures: the stringification of the headers is not correctly printed as a list of tuples, but as an `iteritems` object, so I forced the list evaluation.  Second commit adds the missing properties `allow_merge_commit`, `allow_rebase_merge`, `allow_squash_merge`, and `has_projects` to the `Repository` class.  Note however that I ran into some trouble while modifying the `edit` method of the `Repository` class to make use of the new properties, specifically while writing tests, so I will fix the `edit` method in a future PR.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Team.testEditWithAllArguments.txt",
        "commits": [
            "Allow editing of Team descriptions (#839)  PR https://github.com/PyGithub/PyGithub/pull/753 added this property but forgot to make it editable. The current PR fixes this omission.",
            "Add support for team privacy (#763)  Teams contain support for privacy, by being either closed, or secret. Export the string via a property, and allow editing it via the edit method.",
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testEditWithAllArguments.txt",
        "commits": [
            "Add description to Organizations (#838)  As mentioned in https://developer.github.com/v3/orgs/, an organization also has a description. This PR adds this attribute to the `Organization` class, as well as modifies its `edit` method so that it's possible to update it.  I noticed too late the [`add_attribute.py` script](https://github.com/PyGithub/PyGithub/blob/8ae2bcb1e6f96beeec99fbbcf00f4af46bb38cde/scripts/add_attribute.py), so I did my modifications by hand, but I noticed that the output of the script and the style used for all the other attributes are different. I preferred the style that is prevalent in the file, rather than the output of the script.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testPaginateSearchCommits.txt",
        "commits": [
            "Calcuate totalCount without iterating PaginatedList (#820)  This PR #596 seems stale, so I have opened up this one with the requested changes from @sfdye.  This is the code from @Tommos0's [comment][1] with some modification.  There are 2 tests failing. I think this is due to the change in the query string and the cached test data just needs to be refreshed for those tests.  [1]: https://github.com/PyGithub/PyGithub/pull/596#issuecomment-315013949",
            "Finished search_commits PR (#727)  * Added support for newer commit search API endpoint  * Added tests for new commit search method on main Github class  * Fixed sort parameter of search_commits"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testSearchUsers.txt",
        "commits": [
            "Calcuate totalCount without iterating PaginatedList (#820)  This PR #596 seems stale, so I have opened up this one with the requested changes from @sfdye.  This is the code from @Tommos0's [comment][1] with some modification.  There are 2 tests failing. I think this is due to the change in the query string and the cached test data just needs to be refreshed for those tests.  [1]: https://github.com/PyGithub/PyGithub/pull/596#issuecomment-315013949",
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetTopics.txt",
        "commits": [
            "Add support for getting / replacing topics (#634) (#832)  * Add support for getting and replacing topics on a repository #634  * Add / fix tests, accept list vs dict for replace_topics (#634)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testReplaceTopics.txt",
        "commits": [
            "Add support for getting / replacing topics (#634) (#832)  * Add support for getting and replacing topics on a repository #634  * Add / fix tests, accept list vs dict for replace_topics (#634)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testStatistics.txt",
        "commits": [
            "Handle HTTP 202 HEAD&GET with a retry (#791)  * Handle HTTP 202 Fixes #564 After some testing, it seems GitHub seems to be able to process the chrunching of statistics for every repository I tested in around 2 seconds. So a delay of around 5 seconds should be plenty to be very certain that the next try should succeed. Another option would be to put this value lower and possibly waste an extra retry on it.  * Only re-request data if HEAD or GET (those are 'safe') to e.g. avoid running a duplicate POST or PUT, that can change stuff on the server Using RFC 2616 and https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html as guideline  * Fix testStatistics  * change wait time to 2 secs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testStatisticsBeforeCaching.txt",
        "commits": [
            "Handle HTTP 202 HEAD&GET with a retry (#791)  * Handle HTTP 202 Fixes #564 After some testing, it seems GitHub seems to be able to process the chrunching of statistics for every repository I tested in around 2 seconds. So a delay of around 5 seconds should be plenty to be very certain that the next try should succeed. Another option would be to put this value lower and possibly waste an extra retry on it.  * Only re-request data if HEAD or GET (those are 'safe') to e.g. avoid running a duplicate POST or PUT, that can change stuff on the server Using RFC 2616 and https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html as guideline  * Fix testStatistics  * change wait time to 2 secs",
            "Merge branch 'develop'",
            "First step of implementation of Repository.get_stats_xxx (#203)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Team.testMembers.txt",
        "commits": [
            "Add remove_membership() method to Teams class (#807)  Per the Github v3 API [docs](https://developer.github.com/v3/teams/members/#deprecation-notice-2), the \"remove team member\" api is deprecated. This PR implements the new API call.  Deprecated API: ``` DELETE /teams/:team_id/members/:username ```  New API: ``` DELETE /teams/:team_id/memberships/:username ```  This PR also adds a `deprecation` notice to the docstring of the deprecated methods.",
            "Add role parameter to Team.add_membership method (#638)",
            "Add add_membership testcase (#637)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.setUp.txt",
        "commits": [
            "Add tests for mergeable state (#801)",
            "PullRequest labels should use Issues URL (#754)  The Github API docs for PullRequests say to make use of the Issues API to add, remove, set and query labels. This means that we need to make use of the issue_url property for the PullRequest, not its own URL.",
            "Support labels for PullRequests (#752)  PullRequests can also have labels attached to them, like Issues or Milestones. Extend PullRequest to also export them if they are present, as well as adding methods to add, remove and set labels.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"assignees\" attribute to PullRequest object.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge branch 'topic/PullRequest.assignee' into develop",
            "Documentation and tests for PullRequest.assignee (Pull #111)",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/GitReleaseAsset.py",
        "commits": [
            "Include GitReleaseAsset test, closes #778",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testProtectedAttributes.txt",
        "commits": [
            "Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint",
            "Add branch protection endpoint"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetGitTreeWithRecursive.txt",
        "commits": [
            "Correct Repository.get_git_tree recursive use (#767)  The API docs for Repository.get_git_tree specify that the URL parameter for fetching a tree recursively should be ?recursive=1, not a truthy value. To not change the API we present, check if it is True before setting it to 1. Change another callsite of Repository.get_git_tree to specify recursive=False to make sure it doesn't appear in the query string.  Fixes #560",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/PullRequestReviewerRequest.py",
        "commits": [
            "Re-work PullRequest reviewer request (#765)  Add create_review_request() and delete_review_request() methods to PullRequest, as well as renaming get_reviewer_requests() to get_review_requests() and cleaning up its return value to firstly respect teams, and secondly to cut out the middleman of PullRequestReviewerRequests, which has been removed.  Fixes #597",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Fix broken Github reference link in class docstrings",
            "Merge pull request #538 from allevin/Add_Pull_Request_Reviews_Feature  Add Support for Pull Request Reviews feature",
            "Updates to API and changes to resolve testing issues."
        ]
    },
    {
        "fileName": "github/tests/PullRequestReviewerRequests.py",
        "commits": [
            "Re-work PullRequest reviewer request (#765)  Add create_review_request() and delete_review_request() methods to PullRequest, as well as renaming get_reviewer_requests() to get_review_requests() and cleaning up its return value to firstly respect teams, and secondly to cut out the middleman of PullRequestReviewerRequests, which has been removed.  Fixes #597",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #538 from allevin/Add_Pull_Request_Reviews_Feature  Add Support for Pull Request Reviews feature",
            "Updates to API and changes to resolve testing issues."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testReviewRequests.txt",
        "commits": [
            "Re-work PullRequest reviewer request (#765)  Add create_review_request() and delete_review_request() methods to PullRequest, as well as renaming get_reviewer_requests() to get_review_requests() and cleaning up its return value to firstly respect teams, and secondly to cut out the middleman of PullRequestReviewerRequests, which has been removed.  Fixes #597"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestReviewerRequests.setUp.txt",
        "commits": [
            "Re-work PullRequest reviewer request (#765)  Add create_review_request() and delete_review_request() methods to PullRequest, as well as renaming get_reviewer_requests() to get_review_requests() and cleaning up its return value to firstly respect teams, and secondly to cut out the middleman of PullRequestReviewerRequests, which has been removed.  Fixes #597",
            "PullRequest review methods no longer need black cats (#760)  The preview period of the PullRequest review API ended May 9, 2017 so remove the custom Accept headers for the relevant methods.",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #538 from allevin/Add_Pull_Request_Reviews_Feature  Add Support for Pull Request Reviews feature",
            "Updates to API and changes to resolve testing issues."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Team.setUp.txt",
        "commits": [
            "Add support for team privacy (#763)  Teams contain support for privacy, by being either closed, or secret. Export the string via a property, and allow editing it via the edit method.",
            "Get organization from the team (#590)  * Get organization from the team  * Fix ReplayData for Team"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestReview.setUp.txt",
        "commits": [
            "PullRequest review methods no longer need black cats (#760)  The preview period of the PullRequest review API ended May 9, 2017 so remove the custom Accept headers for the relevant methods.",
            "Added option to create review for Pull request (#662)  * Added option to create review for Pull request  * Fix tests",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #538 from allevin/Add_Pull_Request_Reviews_Feature  Add Support for Pull Request Reviews feature",
            "Updates to API and changes to resolve testing issues."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestReview.testAttributes.txt",
        "commits": [
            "PullRequest review methods no longer need black cats (#760)  The preview period of the PullRequest review API ended May 9, 2017 so remove the custom Accept headers for the relevant methods.",
            "Added option to create review for Pull request (#662)  * Added option to create review for Pull request  * Fix tests"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetOutsideCollaborators.txt",
        "commits": [
            "API outside collaborators (#533)  * API outside collaborators  * Include remaining to organization api calls."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testOutsideCollaborators.txt",
        "commits": [
            "API outside collaborators (#533)  * API outside collaborators  * Include remaining to organization api calls."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testAddAndRemoveLabels.txt",
        "commits": [
            "PullRequest labels should use Issues URL (#754)  The Github API docs for PullRequests say to make use of the Issues API to add, remove, set and query labels. This means that we need to make use of the issue_url property for the PullRequest, not its own URL.",
            "Support labels for PullRequests (#752)  PullRequests can also have labels attached to them, like Issues or Milestones. Extend PullRequest to also export them if they are present, as well as adding methods to add, remove and set labels."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testAddAndRemoveLabelsWithStringArguments.txt",
        "commits": [
            "PullRequest labels should use Issues URL (#754)  The Github API docs for PullRequests say to make use of the Issues API to add, remove, set and query labels. This means that we need to make use of the issue_url property for the PullRequest, not its own URL.",
            "Support labels for PullRequests (#752)  PullRequests can also have labels attached to them, like Issues or Milestones. Extend PullRequest to also export them if they are present, as well as adding methods to add, remove and set labels."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testDeleteAndSetLabels.txt",
        "commits": [
            "PullRequest labels should use Issues URL (#754)  The Github API docs for PullRequests say to make use of the Issues API to add, remove, set and query labels. This means that we need to make use of the issue_url property for the PullRequest, not its own URL.",
            "Support labels for PullRequests (#752)  PullRequests can also have labels attached to them, like Issues or Milestones. Extend PullRequest to also export them if they are present, as well as adding methods to add, remove and set labels."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testDeleteAndSetLabelsWithStringArguments.txt",
        "commits": [
            "PullRequest labels should use Issues URL (#754)  The Github API docs for PullRequests say to make use of the Issues API to add, remove, set and query labels. This means that we need to make use of the issue_url property for the PullRequest, not its own URL.",
            "Support labels for PullRequests (#752)  PullRequests can also have labels attached to them, like Issues or Milestones. Extend PullRequest to also export them if they are present, as well as adding methods to add, remove and set labels."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testGetLabels.txt",
        "commits": [
            "PullRequest labels should use Issues URL (#754)  The Github API docs for PullRequests say to make use of the Issues API to add, remove, set and query labels. This means that we need to make use of the issue_url property for the PullRequest, not its own URL.",
            "Support labels for PullRequests (#752)  PullRequests can also have labels attached to them, like Issues or Milestones. Extend PullRequest to also export them if they are present, as well as adding methods to add, remove and set labels."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetOrganizations.txt",
        "commits": [
            "Add get_organizations() (#748)  * Add get_organizations()  * Add unit tests for get_organizations"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetOrganizationsSince.txt",
        "commits": [
            "Add get_organizations() (#748)  * Add get_organizations()  * Add unit tests for get_organizations"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.setUp.txt",
        "commits": [
            "Add add_to_members() and remove_from_membership() (#741)  * Add methods add_to_members(), has_in_pending_members(), and remove_from_membership() methods to Organization class.  * Add scrubbed replay files used for testing  * More massaging of test data  * Fix URL to remove organization membership  * Remove `has_in_pending_members()` method",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/ContentFile.setUp.txt",
        "commits": [
            "Add download_url to ContentFile, closes #575",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testCreateTeamWithAllArguments.txt",
        "commits": [
            "Add team privacy parameter to create team (#702)  * Add team privacy and add additional parameter to test. Still requires replaydata  * Reorder parameters to not break existing code  * Update tests for #702",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/License.py",
        "commits": [
            "Implement License API (#734)  * Implement License API  * Update copyright"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetLicense.txt",
        "commits": [
            "Implement License API (#734)  * Implement License API  * Update copyright"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetLicenses.txt",
        "commits": [
            "Implement License API (#734)  * Implement License API  * Update copyright"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/License.setUp.txt",
        "commits": [
            "Implement License API (#734)  * Implement License API  * Update copyright"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetLicense.txt",
        "commits": [
            "Implement License API (#734)  * Implement License API  * Update copyright"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/UserKey.testEditWithAllArguments.txt",
        "commits": [
            "Remove edit for UserKey as it's immutable now",
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/UserKey.testEditWithoutArguments.txt",
        "commits": [
            "Remove edit for UserKey as it's immutable now",
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.testCreateLabel.txt",
        "commits": [
            "Labels API: support description (#738)  The description attribute handling requirement is   a custom media type in the Accept header:     application/vnd.github.symmetra-preview+json  Limitation: Repository.get_labels does not report description, possibly something has changed in the preview API.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Label.testEdit.txt",
        "commits": [
            "Labels API: support description (#738)  The description attribute handling requirement is   a custom media type in the Accept header:     application/vnd.github.symmetra-preview+json  Limitation: Repository.get_labels does not report description, possibly something has changed in the preview API.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateLabel.txt",
        "commits": [
            "Labels API: support description (#738)  The description attribute handling requirement is   a custom media type in the Accept header:     application/vnd.github.symmetra-preview+json  Limitation: Repository.get_labels does not report description, possibly something has changed in the preview API.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue572.setUp.txt",
        "commits": [
            "Added Issue.as_pull_request() and PullReqest.as_issue() (#630)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue572.testIssueAsPullRequest.txt",
        "commits": [
            "Added Issue.as_pull_request() and PullReqest.as_issue() (#630)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue572.testPullReqeustAsIssue.txt",
        "commits": [
            "Added Issue.as_pull_request() and PullReqest.as_issue() (#630)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RepositoryKey.setUp.txt",
        "commits": [
            "Update the RepositoryKey class (#530)  # The problems I attempt to solve  - `RepositoryKey.created_at` is available on the Github API, but not in PyGithub - `RepositoryKey.edit()` is not supported anymore by the Github API, see https://developer.github.com/v3/repos/keys/#edit-a-deploy-key  # How I went about solving the problem  I added myself a new deploy key to one of my repositories, and recorded the existing tests using my account. I could not keep the existing test data as the specified key does not exist anymore, I added a comment for the next contributor to help him figure out how to record new tests."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RepositoryKey.testDelete.txt",
        "commits": [
            "Update the RepositoryKey class (#530)  # The problems I attempt to solve  - `RepositoryKey.created_at` is available on the Github API, but not in PyGithub - `RepositoryKey.edit()` is not supported anymore by the Github API, see https://developer.github.com/v3/repos/keys/#edit-a-deploy-key  # How I went about solving the problem  I added myself a new deploy key to one of my repositories, and recorded the existing tests using my account. I could not keep the existing test data as the specified key does not exist anymore, I added a comment for the next contributor to help him figure out how to record new tests."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RepositoryKey.testEdit.txt",
        "commits": [
            "Update the RepositoryKey class (#530)  # The problems I attempt to solve  - `RepositoryKey.created_at` is available on the Github API, but not in PyGithub - `RepositoryKey.edit()` is not supported anymore by the Github API, see https://developer.github.com/v3/repos/keys/#edit-a-deploy-key  # How I went about solving the problem  I added myself a new deploy key to one of my repositories, and recorded the existing tests using my account. I could not keep the existing test data as the specified key does not exist anymore, I added a comment for the next contributor to help him figure out how to record new tests.",
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RepositoryKey.testEditWithoutParameters.txt",
        "commits": [
            "Update the RepositoryKey class (#530)  # The problems I attempt to solve  - `RepositoryKey.created_at` is available on the Github API, but not in PyGithub - `RepositoryKey.edit()` is not supported anymore by the Github API, see https://developer.github.com/v3/repos/keys/#edit-a-deploy-key  # How I went about solving the problem  I added myself a new deploy key to one of my repositories, and recorded the existing tests using my account. I could not keep the existing test data as the specified key does not exist anymore, I added a comment for the next contributor to help him figure out how to record new tests.",
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateSourceImport.txt",
        "commits": [
            "Source Import API (#673)  * add import source  * add import header  * create/get source import for repo, SourceImport class  * Corrected use_lfs, not considered completed with creation  * vcs creds optional  * SourceImport test, removed unneeded attributes  * create/get source import tests for repo  * Encoding and copyright comment  * styling fixes  * Update SourceImport.py  * Update SourceImport.py  * Update SourceImport.py"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetSourceImport.txt",
        "commits": [
            "Source Import API (#673)  * add import source  * add import header  * create/get source import for repo, SourceImport class  * Corrected use_lfs, not considered completed with creation  * vcs creds optional  * SourceImport test, removed unneeded attributes  * create/get source import tests for repo  * Encoding and copyright comment  * styling fixes  * Update SourceImport.py  * Update SourceImport.py  * Update SourceImport.py"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/SourceImport.setUp.txt",
        "commits": [
            "Source Import API (#673)  * add import source  * add import header  * create/get source import for repo, SourceImport class  * Corrected use_lfs, not considered completed with creation  * vcs creds optional  * SourceImport test, removed unneeded attributes  * create/get source import tests for repo  * Encoding and copyright comment  * styling fixes  * Update SourceImport.py  * Update SourceImport.py  * Update SourceImport.py"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testGetCommits.txt",
        "commits": [
            "Added option to create review for Pull request (#662)  * Added option to create review for Pull request  * Fix tests",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testLegacySearchRepos.txt",
        "commits": [
            "Depreciate legacy search API",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Fix urlencoding for search (see #237)  Parameters are encoded in Requester => simply remove urllib.quote Path needs to be encoded => change to urllib.quote_plus as in #237",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testLegacySearchReposExplicitPagination.txt",
        "commits": [
            "Depreciate legacy search API",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testLegacySearchReposPagination.txt",
        "commits": [
            "Depreciate legacy search API",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testLegacySearchReposWithLanguage.txt",
        "commits": [
            "Depreciate legacy search API",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testLegacySearchUserByEmail.txt",
        "commits": [
            "Depreciate legacy search API",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testLegacySearchUsers.txt",
        "commits": [
            "Depreciate legacy search API",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testLegacySearchUsersExplicitPagination.txt",
        "commits": [
            "Depreciate legacy search API",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "dos2unix",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testLegacySearchUsersPagination.txt",
        "commits": [
            "Depreciate legacy search API",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "scripts/compare_to_api_ref_doc.py",
        "commits": [
            "Clean up",
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Twitt about releases",
            "Merge branch 'develop'",
            "Github.get_hook (#196)",
            "Merge branch 'develop'",
            "Small updates of doc",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Fix copyrights (#181 #182 #184 #186 #187)",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Check links to ref in :calls: sections",
            "Generate doc/apis.rst instead of checking it",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Add todos",
            "Draft a script comparing URLs called in PyGithub to Github API v3 reference"
        ]
    },
    {
        "fileName": "doc/.gitignore",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Generate doc/apis.rst instead of checking it",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Improve documentation",
            "Generate some repetitive doc files",
            "sphinx-quickstart"
        ]
    },
    {
        "fileName": "doc/github_objects/.gitignore",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Merge branch 'develop'",
            "Generate some repetitive doc files"
        ]
    },
    {
        "fileName": "github/tests/Authorization.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Fix unit tests (my sed was a bit violent)",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Commit.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add unit test for tree attribute of GitCommit (#668)",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/CommitComment.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/CommitStatus.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "Patch issue 358 status context (#428)  * Add \"context\" to CommitStatus * Add testcase for context in CommitStatus",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ConditionalRequestUpdate.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #305 from Jucyio/develop  Add support to create Repository objects lazily in MainClass.",
            "Add support to create Repository objects lazily in MainClass.  This lets users do the following without issuing an unnecessary request:  issues_of_my_repository = g.get_repo('PyGithub/PyGithub').get_issues()  Since the GithubObject layer handles laziness transparently, lazy loading is enabled by default, and can be disabled via the `lazy` kwarg. This does not affect any test except tests that pertain to caching or laziness itself.",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "./manage.sh fix_headers",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Fix line ending",
            "#193: Fix test coverage",
            "Separate tests for conditional requests (#193)",
            "Fix remarks on #189 to #193",
            "Review of #189: pep8, copyrights, style, remarks  For remarks, run: git grep \"#189\" They are only my first thoughts while reviewing this pull request, and should be reviewed themselves.",
            "Add test case for conditional request"
        ]
    },
    {
        "fileName": "github/tests/Download.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Equality.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Fix copyright headers",
            "Implement equality comparison of CompletableGithubObject (#201)"
        ]
    },
    {
        "fileName": "github/tests/Event.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Reduce 2to3 differences",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/GistComment.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Fixes for Python 3: setup.py install will call 2to3  We temporary loose coverage measurement... again!",
            "Merge branch 'develop'",
            "Change URL of gist comments (issue #113)",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/GitBlob.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/GitCommit.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/GitRef.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Prepend \"/refs/\" in Repository.get_git_ref (issue #102)",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/GitTag.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/GitTree.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            ":recycle: Fix all pep8 coding conventions",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Hook.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add ping_url and ping to Hook (#669)",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Issue.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"add_to_assignees\" & \"remove_from_assignees\" method to Issue object.",
            "Enhance support of \"assignees\" argument in Issue.edit()",
            "Added \"assignees\" attribute to Issue object.",
            "Merge pull request #466 from PyGithub/issue-assignees  Issue assignees",
            "add issue assignee param",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "Adding \"since\" param to Issue.get_comments() (#426)",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Accept strings as well as Label objects (#202)  This should be more generic, but it's a wig work to do it everywhere. Let's keep that in mind for V2.",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Fix copyrights (#181 #182 #184 #186 #187)",
            "Merge branch 'topic/KnowYourParent' into develop",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Populates Issue's repository from URL when not in response.",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Issue131.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Fix unit tests on Python <= 2.6",
            "Add a test reproducing issue #131"
        ]
    },
    {
        "fileName": "github/tests/Issue133.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Add a failing test for pull #133"
        ]
    },
    {
        "fileName": "github/tests/Issue139.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Refactor XxxGithubObject",
            "Use assertTrue and assertFalse where applicable",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Fix lazy completion!!! (issue #139)",
            "Add a test showing the silly bug described in issue #139"
        ]
    },
    {
        "fileName": "github/tests/Issue158.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Fix pagination with secret-key authentication (issue #158)"
        ]
    },
    {
        "fileName": "github/tests/Issue214.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "meeting coding conventions",
            "adding the tests for issue 214"
        ]
    },
    {
        "fileName": "github/tests/Issue216.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Fix #216: handle 'Link' header  Headers with capitals are returned by http.client (replacing httplib in Python 3)"
        ]
    },
    {
        "fileName": "github/tests/Issue278.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "Work-around Issue278"
        ]
    },
    {
        "fileName": "github/tests/Issue33.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Issue50.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Issue54.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Issue80.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Issue87.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Follow pep8",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Add test showing error described in issue #87"
        ]
    },
    {
        "fileName": "github/tests/IssueComment.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Merge branch 'topic/Pull170' into develop",
            "Add tests for html_url for Issue and PullComment (#170)  I just modified the ReplayData manually and added a \"get\" in the tests.",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Logging_.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Reduce 2to3 differences",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Fix unit tests about logging",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Fix test when run on Linux with source tree on case-insensitive filesystem"
        ]
    },
    {
        "fileName": "github/tests/Markdown.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/OrganizationHasInMembers.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Support HTTP 302 redirect in Organization.has_in_members"
        ]
    },
    {
        "fileName": "github/tests/PaginatedList.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #295 from ewalker11/develop  Fix paginated list handling of 204 No Content",
            "Use more primitive asserts for Python 2.6",
            "Fix paginated list handling of 204s",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Make PaginatedList.reversed return a new list (follow-up #184)  This will avoid surprises if both the list and its reversed version are iterated.",
            "Merge branch 'topic/ReversePagination' into develop",
            "Merge branch 'develop' into topic/KnowYourParent",
            "bugfix: returning real list instead of generator  Changed reversed(content) to content[::-1] in order to return a real list and not a generator. The code in PaginatedListBase.__grow does an iteration over newElements when using `+=` and then returns them. When using a generator, newElements would be empty when they are returned.",
            "support reverse iteration in PaginatedList  This uses the 'last' and 'prev' links in the HTTP headers. The usage is repo.get_issues().reversed",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Run the script added in previous commit",
            "Restore coverage",
            "pep8",
            "Merge branch 'develop'",
            "Merge branch 'topic/CustomPerPageWithoutUrlParam' into develop",
            "Add a (redoundant) test for pull #176",
            "bugfix: using custom per_page in repo.get_comments",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Restore 100% test coverage",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/PaginatedListPerPage' into develop",
            "Add Github.per_page to tweak PaginatedList (Issue #145)",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore measure of test coverage",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Persistence.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Small fixes and todos",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Adapt to Python 2.5 (again:))",
            "Adapt to Python 2.5",
            "Implement object persistence  This follows my proposal for #193. Largely inspired by AKFish's work."
        ]
    },
    {
        "fileName": "github/tests/PullRequestComment.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Merge branch 'develop'",
            "Merge branch 'topic/Pull170' into develop",
            "Add tests for html_url for Issue and PullComment (#170)  I just modified the ReplayData manually and added a \"get\" in the tests.",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/PullRequestFile.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/RawData.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Respect pep 8",
            "Reduce 2to3 differences",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Add a way to create an object from raw data (Issue #144)",
            "Refactor XxxGithubObject",
            "Expose raw data of objects (Issue #144)"
        ]
    },
    {
        "fileName": "github/tests/Reaction.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/Tag.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects",
            "sort params and make them work on py3",
            "adds a nicer __repr__",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions."
        ]
    },
    {
        "fileName": "github/tests/__init__.py",
        "commits": [
            "Apply fix_headers script to update copyright info",
            "Fix copyright formatting",
            "Update doc link in copyright text",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/FixFileHeaders' into develop",
            "Change source file header format",
            "Add a script to check copyrights with git log. And fix copyrights.",
            "Merge branch 'develop'",
            "Change home page",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Simplify",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore Python 2.5 and 2.6?  (This commit was 'push --force'd)",
            "Restore measure of test coverage",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Fixes for issue #86"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitRelease.txt",
        "commits": [
            "Added target_commitish option to Repository.create_git_release() (#625)  * Added is_draft and is_prerelease property to GitRelease  * Added target_commitish option to Repository.create_git_release()  * Added test for Repository.create_git_release()  * Renamed attr of GitRelease: is_draft, is_prerelease -> draft, prerelease"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitReleaseWithAllArguments.txt",
        "commits": [
            "Added target_commitish option to Repository.create_git_release() (#625)  * Added is_draft and is_prerelease property to GitRelease  * Added target_commitish option to Repository.create_git_release()  * Added test for Repository.create_git_release()  * Renamed attr of GitRelease: is_draft, is_prerelease -> draft, prerelease"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testCreateHookWithAllParameters.txt",
        "commits": [
            "Add hook support for organizations (#729)  * Add hook support for organizations Specifically, the create_hook, get_hook, and get_hooks calls  * Added support for the edit and delete hook functions"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testCreateHookWithMinimalParameters.txt",
        "commits": [
            "Add hook support for organizations (#729)  * Add hook support for organizations Specifically, the create_hook, get_hook, and get_hooks calls  * Added support for the edit and delete hook functions"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testDeleteHook.txt",
        "commits": [
            "Add hook support for organizations (#729)  * Add hook support for organizations Specifically, the create_hook, get_hook, and get_hooks calls  * Added support for the edit and delete hook functions"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testEditHookWithAllParameters.txt",
        "commits": [
            "Add hook support for organizations (#729)  * Add hook support for organizations Specifically, the create_hook, get_hook, and get_hooks calls  * Added support for the edit and delete hook functions"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testEditHookWithMinimalParameters.txt",
        "commits": [
            "Add hook support for organizations (#729)  * Add hook support for organizations Specifically, the create_hook, get_hook, and get_hooks calls  * Added support for the edit and delete hook functions"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetHooks.txt",
        "commits": [
            "Add hook support for organizations (#729)  * Add hook support for organizations Specifically, the create_hook, get_hook, and get_hooks calls  * Added support for the edit and delete hook functions"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testWatching.txt",
        "commits": [
            "Fix add_to_watched for AuthenticatedUser (#716)  * 'watching' != 'staring'   The functionality was completely broken - api endpoints were wrong/didn't work. Tested by logging in as an authenticated user - verified listing watches, add watch, and remove watch.  * fix unit tests",
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testUserEquality.txt",
        "commits": [
            "Add __eq__ and __hash__ to NamedUser (#706)  * Add __eq__ and __hash__ to NamedUser  * Remove extra outer brackets from __eq__ in NamedUser  * Add unit tests for __eq__ and __hash__  * Remove redundant brackets in __eq__ : NamedUser"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreatePull.txt",
        "commits": [
            "Add maintainer can modify flag to create pull request (#703)  * Add flag for maintainer can modify when creating pull requests  * Change default to be None to let github decide the behaviour  * Update docstring  * Follow conventions from other functions",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "doc/Design.md",
        "commits": [
            "Fix typo in Design.md (#701)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Move files around"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateMilestone.txt",
        "commits": [
            "Fix date format for milestone creation (#593)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateFork.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testEmails.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testFollowing.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetAuthorizations.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetEvents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetIssues.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetIssuesWithAllArguments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Add parameters to AuthenticatedUser.get_issues (issue #166)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetKeys.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetNotification.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/Notifications' into develop",
            "Move get_notification(s) to AuthenticatedUser (pull #148)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetNotifications.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/Notifications' into develop",
            "Move get_notification(s) to AuthenticatedUser (pull #148)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetNotificationsWithOtherArguments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/Notifications' into develop",
            "Improve test coverage (pull #148)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetOrganizationEvents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetOrgs.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetRepos.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetStarredGists.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetTeams.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetUserIssues.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testGetUserIssuesWithAllArguments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testStarring.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testSubscriptions.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authentication.testAuthorizationHeaderWithLogin.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Add a test that would have caught #153"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authentication.testAuthorizationHeaderWithToken.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Merge branch 'topic/CheckPragmaNoCover' into develop",
            "Add a test that would have caught #153"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authentication.testBasicAuthentication.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authentication.testNoAuthentication.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authentication.testOAuthAuthentication.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authentication.testSecretKeyAuthentication.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/UnauthenticatedRateLimitedRequests' into develop",
            "Refactor",
            "Add tests for pull #112"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authentication.testUserAgent.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Add a customizable User-Agent (issue #109)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authorization.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authorization.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/BadAttributes.testBadAttributeInClassAttribute.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/BadAttributes.testBadAttributeTransformation.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/BadAttributes.testBadSimpleAttribute.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/BadAttributes.testBadSimpleAttributeInList.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/BadAttributes.testBadTransformedAttribute.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/BadAttributes.testBadTransformedAttributeInDict.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/BadAttributes.testBadTransformedAttributeInList.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #305 from Jucyio/develop  Add support to create Repository objects lazily in MainClass.",
            "Add support to create Repository objects lazily in MainClass.  This lets users do the following without issuing an unnecessary request:  issues_of_my_repository = g.get_repo('PyGithub/PyGithub').get_issues()  Since the GithubObject layer handles laziness transparently, lazy loading is enabled by default, and can be disabled via the `lazy` kwarg. This does not affect any test except tests that pertain to caching or laziness itself.",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/BadAttributes.testIssue195.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Branch.testCommitCommentsOnLine.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Commit.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Commit.testGetComments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/CommitCombinedStatus.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #382 from doctoryes/master  Add ability to check combined status.",
            "Add:   - CommitCombinedStatus class   - get_combined_status() to Commit class to return combined status   - Add test for combined status."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/CommitComment.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/CommitComment.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/CommitComment.testGetReactions.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/CommitStatus.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Patch issue 358 status context (#428)  * Add \"context\" to CommitStatus * Add testcase for context in CommitStatus",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/ConditionalRequestUpdate.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Separate tests for conditional requests (#193)",
            "Add test case for conditional request"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/ConditionalRequestUpdate.testDidNotUpdate.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Separate tests for conditional requests (#193)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/ConditionalRequestUpdate.testDidUpdate.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Add test case for conditional request"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Download.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Download.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Enterprise.testHttp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Enterprise.testHttps.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Enterprise.testLongUrl.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Enterprise.testSpecificPort.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Equality.testBranchEquality.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Implement equality comparison of CompletableGithubObject (#201)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Equality.testUserDifference.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Implement equality comparison of CompletableGithubObject (#201)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Equality.testUserEquality.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Implement equality comparison of CompletableGithubObject (#201)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Event.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Exceptions.testBadAuthentication.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Exceptions.testNonJsonDataReturnedByGithub.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Add test coverage for #182"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Exceptions.testUnknownObject.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Exceptions.testUnknownUser.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testAttributes.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testCreateComment.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testDeleteFile.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Merge branch 'topic/GistRenameAndDeleteFile' into develop",
            "Delete file from gist (issue #156)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testEditWithAllParameters.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testEditWithoutParameters.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testFork.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Use POST /gists/:id/forks instead of POST /gists/:id/fork",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testGetComments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testRenameFile.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Merge branch 'topic/GistRenameAndDeleteFile' into develop",
            "Rename a file in a gist (issue #156)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testStarring.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GistComment.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Change URL of gist comments (issue #113)",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GistComment.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Change URL of gist comments (issue #113)",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GitBlob.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GitCommit.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GitRef.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GitRef.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GitTag.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GitTree.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetEmojis.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add initial version of getemojis"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetGists.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetGitignoreTemplate.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Merge branch 'topic/RetrieveGitignoreTemplates' into develop",
            "Github.get_gitignore_template[s] (issue #120)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetGitignoreTemplates.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Merge branch 'topic/RetrieveGitignoreTemplates' into develop",
            "Github.get_gitignore_template[s] (issue #120)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetHook.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Github.get_hook (#196)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetHooks.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetRepoFromFullName.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Merge branch 'topic/GetRepoFromFullName' into develop  Conflicts: \tReadMe.md",
            "Get repo from full name: tests, doc, fix param name (Pull #121)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetRepoFromId.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop' of https://github.com/tylertreat/PyGithub into develop",
            "Implement support for getting repo by id  This allows the Github class to retrieve repos by either their full name or id. If the user passes in an id for a repo which doesn't exist or in which they don't have sufficient permissions, an UnknownObjectException will be raised. This addresses issue #245."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetRepos.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Github.get_repos (to get all public repositories)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetReposSince.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Github.get_repos (to get all public repositories)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetUsers.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Implement `GET /users` (issue #173)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetUsersSince.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Implement `GET /users` (issue #173)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testSearchRepos.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testSearchUserByEmail.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testSearchUsers.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Hook.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add ping_url and ping to Hook (#669)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Hook.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Hook.testPing.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add ping_url and ping to Hook (#669)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Hook.testTest.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Use POST /repos/:owner/:repo/hooks/:id/tests instead of POST /repos/:owner/:repo/hooks/:id/test",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"assignees\" attribute to Issue object.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testAddAndRemoveAssignees.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"add_to_assignees\" & \"remove_from_assignees\" method to Issue object."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testAddAndRemoveLabels.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testAddAndRemoveLabelsWithStringArguments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Accept strings as well as Label objects (#202)  This should be more generic, but it's a wig work to do it everywhere. Let's keep that in mind for V2."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testAttributes.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"assignees\" attribute to Issue object.",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/KnowYourParent' into develop",
            "Populates Issue's repository from URL when not in response."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testDeleteAndSetLabels.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testDeleteAndSetLabelsWithStringArguments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Accept strings as well as Label objects (#202)  This should be more generic, but it's a wig work to do it everywhere. Let's keep that in mind for V2."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testEditWithAllParameters.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Enhance support of \"assignees\" argument in Issue.edit()",
            "Merge pull request #466 from PyGithub/issue-assignees  Issue assignees",
            "add issue assignee param",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testGetComments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testGetCommentsSince.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Adding \"since\" param to Issue.get_comments() (#426)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testGetLabels.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testGetReactions.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue131.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Add a test reproducing issue #131"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue131.testGetPullWithOrgHeadUser.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Add a test reproducing issue #131"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue131.testGetPullsWithOrgHeadUser.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Add a test reproducing issue #131"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue133.testGetPageWithoutInitialArguments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Add a failing test for pull #133"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue134.testGetAuthorizationsFailsWhenAutenticatedThroughOAuth.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Reproduce issue #134"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue134.testGetAuthorizationsSucceedsWhenAutenticatedThroughLoginPassword.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Reproduce issue #134"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue134.testGetOAuthScopesFromHeader.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Retrieve scopes for current oauth token from response headers (Issue #134)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue139.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Add a test showing the silly bug described in issue #139"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue139.testCompletion.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Fix lazy completion!!! (issue #139)",
            "Add a test showing the silly bug described in issue #139"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue140.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Implement Repository.get_dir_contents (issue #140)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue140.testGetDirContents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Implement Repository.get_dir_contents (issue #140)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue140.testGetDirContentsThenLazyCompletionOfFile.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Implement Repository.get_dir_contents (issue #140)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue140.testGetDirContentsWithRef.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Fix coverage"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue140.testGetFileContents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Implement Repository.get_dir_contents (issue #140)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue158.testPaginationWithSecretKeyAuthentication.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Fix pagination with secret-key authentication (issue #158)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue174.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/HttpRedirect' into develop",
            "Add test for pull request #174"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue174.testGetDirContentsWhithHttpRedirect.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/HttpRedirect' into develop",
            "Add test for pull request #174"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue214.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "adding the tests for issue 214"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue214.testAssignees.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "adding the tests for issue 214"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue214.testGetIssues.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "adding the tests for issue 214"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue216.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Fix #216: handle 'Link' header  Headers with capitals are returned by http.client (replacing httplib in Python 3)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue216.testIteration.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Fix #216: handle 'Link' header  Headers with capitals are returned by http.client (replacing httplib in Python 3)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue278.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Work-around Issue278"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue278.testIteration.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Work-around Issue278"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue33.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue33.testClosedIssues.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue33.testOpenIssues.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue494.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #495 from sjcorbett/fix/githubobject-repr  Encode GithubObject repr values in utf-8",
            "Encode GithubObject repr values in utf-8 when using Python2"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.testAddLabelToIssue.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.testCreateIssueWithLabel.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.testGetIssuesWithLabel.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.testGetLabel.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.testGetLabels.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.testIssueGetLabels.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.testRemoveLabelFromIssue.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue50.testSetIssueLabels.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue54.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue54.testConversion.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue80.testIgnoreHttpsFromGithubEnterprise.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue80.testIgnoreHttpsFromGithubEnterpriseWithPort.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue87.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Add test showing error described in issue #87"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/IssueComment.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/Pull170' into develop",
            "Add tests for html_url for Issue and PullComment (#170)  I just modified the ReplayData manually and added a \"get\" in the tests.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/IssueComment.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/IssueComment.testGetReactions.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Label.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Label.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/LazyRepository.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #305 from Jucyio/develop  Add support to create Repository objects lazily in MainClass.",
            "Add support to create Repository objects lazily in MainClass.  This lets users do the following without issuing an unnecessary request:  issues_of_my_repository = g.get_repo('PyGithub/PyGithub').get_issues()  Since the GithubObject layer handles laziness transparently, lazy loading is enabled by default, and can be disabled via the `lazy` kwarg. This does not affect any test except tests that pertain to caching or laziness itself."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/LazyRepository.testGetIssues.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #305 from Jucyio/develop  Add support to create Repository objects lazily in MainClass.",
            "Add support to create Repository objects lazily in MainClass.  This lets users do the following without issuing an unnecessary request:  issues_of_my_repository = g.get_repo('PyGithub/PyGithub').get_issues()  Since the GithubObject layer handles laziness transparently, lazy loading is enabled by default, and can be disabled via the `lazy` kwarg. This does not affect any test except tests that pertain to caching or laziness itself."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/LazyRepository.testGetUser.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #305 from Jucyio/develop  Add support to create Repository objects lazily in MainClass.",
            "Add support to create Repository objects lazily in MainClass.  This lets users do the following without issuing an unnecessary request:  issues_of_my_repository = g.get_repo('PyGithub/PyGithub').get_issues()  Since the GithubObject layer handles laziness transparently, lazy loading is enabled by default, and can be disabled via the `lazy` kwarg. This does not affect any test except tests that pertain to caching or laziness itself."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/LazyRepository.testOwner.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #305 from Jucyio/develop  Add support to create Repository objects lazily in MainClass.",
            "Add support to create Repository objects lazily in MainClass.  This lets users do the following without issuing an unnecessary request:  issues_of_my_repository = g.get_repo('PyGithub/PyGithub').get_issues()  Since the GithubObject layer handles laziness transparently, lazy loading is enabled by default, and can be disabled via the `lazy` kwarg. This does not affect any test except tests that pertain to caching or laziness itself."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Logging.testLoggingWithBaseUrl.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Improve logging (related to #88)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Logging.testLoggingWithBasicAuthentication.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Improve logging (related to #88)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Logging.testLoggingWithOAuthAuthentication.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Improve logging (related to #88)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Logging.testLoggingWithoutAuthentication.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Improve logging (related to #88)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Markdown.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Milestone.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Milestone.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Milestone.testGetLabels.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetEvents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetFollowers.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetFollowing.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetKeys.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "NamedUser.get_keys (Issue #130)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetOrgs.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetPublicEvents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetPublicReceivedEvents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetReceivedEvents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetRepo.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetRepos.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetReposWithType.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetStarred.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetSubscriptions.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testGetWatched.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testHasInFollowing.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "NamedUser.has_in_following"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testCreateFork.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetEvents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetIssues.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetIssuesWithAllArguments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetMembers.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetPublicMembers.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetRepos.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetReposWithType.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testGetTeams.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testMembers.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testPublicMembers.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/OrganizationHasInMembers.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Support HTTP 302 redirect in Organization.has_in_members"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testCustomPerPage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/PaginatedListPerPage' into develop",
            "Add Github.per_page to tweak PaginatedList (Issue #145)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testCustomPerPageWithGetPage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/PaginatedListPerPage' into develop",
            "Add Github.per_page to tweak PaginatedList (Issue #145)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testCustomPerPageWithNoUrlParams2.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/CustomPerPageWithoutUrlParam' into develop",
            "Add a (redoundant) test for pull #176"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testGetFirstPage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "dos2unix",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testGetThirdPage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testGettingTheReversedListDoesNotModifyTheOriginalList.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Make PaginatedList.reversed return a new list (follow-up #184)  This will avoid surprises if both the list and its reversed version are iterated."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testIntIndexingAfterIteration.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testIntIndexingInFirstPage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "dos2unix",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testIntIndexingInThirdPage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testInterruptedIteration.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testInterruptedIterationInSlice.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testIteration.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testNoFirstPage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #295 from ewalker11/develop  Fix paginated list handling of 204 No Content",
            "Fix paginated list handling of 204s"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testReversedIterationSupportsIterator.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/ReversePagination' into develop",
            "bugfix: returning real list instead of generator  Changed reversed(content) to content[::-1] in order to return a real list and not a generator. The code in PaginatedListBase.__grow does an iteration over newElements when using `+=` and then returns them. When using a generator, newElements would be empty when they are returned."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testReversedIterationWithMultiplePages.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/ReversePagination' into develop",
            "support reverse iteration in PaginatedList  This uses the 'last' and 'prev' links in the HTTP headers. The usage is repo.get_issues().reversed"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testReversedIterationWithSinglePage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/ReversePagination' into develop",
            "bug fix: empty nextUrl if no next/prev  Fixes a bug introduced in the previous commits. Now testing a case where no lastUrl is returned. Also fixing a regression where nextUrl wasn't erased properly.",
            "support reverse iteration in PaginatedList  This uses the 'last' and 'prev' links in the HTTP headers. The usage is repo.get_issues().reversed"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testSeveralIterations.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testSliceIndexingInFirstPage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "dos2unix",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testSliceIndexingUntilEnd.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PaginatedList.testSliceIndexingUntilFourthPage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Persistence.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Implement object persistence  This follows my proposal for #193. Largely inspired by AKFish's work."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Persistence.testLoadAndUpdate.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Implement object persistence  This follows my proposal for #193. Largely inspired by AKFish's work."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testCreateComment.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testGetComments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testGetFiles.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testGetIssueComment.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testGetIssueComments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testMerge.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testMergeWithCommitMessage.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestComment.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/Pull170' into develop",
            "Add tests for html_url for Issue and PullComment (#170)  I just modified the ReplayData manually and added a \"get\" in the tests.",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestComment.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestComment.testGetReactions.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestFile.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RawData.testCompletedObject.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Expose raw data of objects (Issue #144)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RawData.testNonCompletableObject.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Expose raw data of objects (Issue #144)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/RawData.testNotYetCompletedObject.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Expose raw data of objects (Issue #144)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Reaction.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Reaction.testAttributes.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Reaction.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.setUp.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.testAttributes.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.testCreateGitTagAndRelease.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.testGetAsset.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.testGetAssets.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.testGetLatestRelease.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add method to get latest release of a repository (#609)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.testGetRelease.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Release.testUpdate.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/ReleaseAsset.testAttributes.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/ReleaseAsset.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/ReleaseAsset.testUpdate.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCompare.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitCommit.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitCommitWithAllArguments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitCommitWithParents.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitTreeWithBaseTree.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateIssueWithAllArguments.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"assignees\" argument in Repository.create_issue()",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateIssueWithAllArgumentsStringLabel.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest",
            "Added \"assignees\" argument in Repository.create_issue()",
            "Merge pull request #340 from crwilcox/master  Fixes #339 by allowing strings in the labels list.",
            "Add test for #339 fix"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreatePullFromIssue.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testDelete.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testDeleteFile.txt",
        "commits": [
            "Remove the default \"null\" input send during GET request (#691)  * Remove the default \"null\" input send during GET request  * Remove the 'null' value from all tests",
            "adds missing testfile corrections",
            "Merge branch 'enix223-master'",
            "Merge branch 'master' of https://github.com/enix223/PyGithub into enix223-master",
            "Add repo content create/update/delete testcase"
        ]
    },
    {
        "fileName": "python25-requirements.txt",
        "commits": [
            "Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "dos2unix",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Simplify",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Restore Python 2.5 and 2.6?  (This commit was 'push --force'd)",
            "Enable Travis CI"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/CommitComment.testCreateReaction.txt",
        "commits": [
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testCreateReaction.txt",
        "commits": [
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/IssueComment.testCreateReaction.txt",
        "commits": [
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestComment.testCreateReaction.txt",
        "commits": [
            "Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateKey.txt",
        "commits": [
            "Add read_only attribute to Deploy Keys (#570)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/PullRequestReviewRequests.py",
        "commits": [
            "Add testing for Pull Request Reviews and Review Requests"
        ]
    },
    {
        "fileName": "github/PullRequestReviewerRequests.py",
        "commits": [
            "Remove unnecessary lines",
            "Add Support for Pull Request Reviews feature"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetContentDir.txt",
        "commits": [
            "Merge pull request #448 from PyGithub/contentfile-listing  Support directories in repo.get_contents",
            "adds support for content dirs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Team.testRepoPermission.txt",
        "commits": [
            "Merge pull request #454 from mattjmorrison/add-team-repo-permissions  Add ability to set permission for team repo",
            "Add ability to set permission for team repo  https://developer.github.com/v3/orgs/teams/#add-or-update-team-repository"
        ]
    },
    {
        "fileName": "scripts/twitt_release.py",
        "commits": [
            "Merge pull request #437 from PyGithub/travis  Releases based on travis",
            "upgrade release process based on travis",
            "update doc url everywhere (#420)",
            "pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate.",
            "Merge branch 'develop'",
            "Add reference of import twitter",
            "Twitt about releases"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateFile.txt",
        "commits": [
            "adds missing testfile corrections",
            "Merge branch 'enix223-master'",
            "Merge branch 'master' of https://github.com/enix223/PyGithub into enix223-master",
            "Add repo content create/update/delete testcase"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetContents.txt",
        "commits": [
            "Merge branch 'enix223-master'",
            "Merge branch 'master' of https://github.com/enix223/PyGithub into enix223-master",
            "Add repo content create/update/delete testcase",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetContentsWithRef.txt",
        "commits": [
            "Merge branch 'enix223-master'",
            "Merge branch 'master' of https://github.com/enix223/PyGithub into enix223-master",
            "Add repo content create/update/delete testcase",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Complete \"ref in Repository.get_contents and .get_readme\" (pull #124)  Add documentation and automated tests"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testUpdateFile.txt",
        "commits": [
            "Merge branch 'enix223-master'",
            "Merge branch 'master' of https://github.com/enix223/PyGithub into enix223-master",
            "change replay data for update file test case",
            "Add repo content create/update/delete testcase"
        ]
    },
    {
        "fileName": "Contributing.rst",
        "commits": [
            "update project files",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Merge pull request #307 from Jucyio/tokentest  Support recording tests when using an OAuth token",
            "Add support to record tests using the oauth token instead of a username/password. This lets people whose account uses 2-factor authentication record tests.",
            "Merge branch 'develop'",
            "Improve documentation"
        ]
    },
    {
        "fileName": "MANIFEST.in",
        "commits": [
            "update project files",
            "Merge commit 'refs/pull/277/head'",
            "Added MANIFEST.in"
        ]
    },
    {
        "fileName": "README.rst",
        "commits": [
            "update project files",
            "remove not covered API from readme",
            "add MAINTAINERS file  [skip ci]",
            "Merge pull request #365 from PyGithub/nhomar-travis-button  Add travis button on README.",
            "Add travis button on README.",
            "Publish version",
            "Merge pull request #308 from jhermann/patch-1  Fixed documentation link",
            "Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop",
            "Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop",
            "Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet",
            "Fixed documentation link",
            "Merge pull request #301 from sbellem/patch-1  fixed small typo",
            "fixed typo",
            "Merge pull request #289 from andycasey/master  Add optional context when creating a status for a commit",
            "Fix link",
            "Looking for volunteers",
            "Update README.rst",
            "Publish version 1.25.2",
            "Publish version 1.25.1",
            "Update README.rst",
            "Update readme",
            "Fix typo in README",
            "Publish version 1.25.0",
            "Typo",
            "Put v2 alpha 2 in main Readme",
            "Publish version 1.24.1",
            "Typos",
            "Publish version 1.24.0",
            "Readme",
            "Merge pull request #221 from clouserw/patch-1  fix typos",
            "one more typo",
            "fix typos",
            "Merge branch 'develop'",
            "Merge branch 'pr220' into develop",
            "Integrate #220 (fix tests and pep8)",
            "Merge branch 'develop'",
            "Fix #216: handle 'Link' header  Headers with capitals are returned by http.client (replacing httplib in Python 3)",
            "Publish version 1.22.0",
            "Merge branch 'develop'",
            "Update readme for #203",
            "Add 'author' to 'Repository.get_commits' (#204)",
            "Implement equality comparison of CompletableGithubObject (#201)",
            "Accept strings as well as Label objects (#202)  This should be more generic, but it's a wig work to do it everywhere. Let's keep that in mind for V2.",
            "Twitt about releases",
            "Publish version 1.20.0",
            "Merge branch 'develop'",
            "Update the list of unsupported APIs  We have some work to do!",
            "Remove Repository.create_download and NamedUser.create_gist",
            "Fix public/private in Repository.edit (#199)",
            "Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop",
            "Raise exception only when user *accesses* an attribute with a bad value (#195)",
            "Fix typo",
            "Github.get_hook (#196)",
            "Publish version 1.19.0",
            "Merge branch 'develop'",
            "Add many missing attributes",
            "Github.get_rate_limit",
            "Update readme",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "Say thank you to stargazers",
            "Update readme",
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: \tgithub/Issue.py \tgithub/MainClass.py \tgithub/PaginatedList.py \tgithub/Repository.py \tgithub/Requester.py",
            "Github.get_repos (to get all public repositories)",
            "NamedUser.has_in_following",
            "Use POST /repos/:owner/:repo/hooks/:id/tests instead of POST /repos/:owner/:repo/hooks/:id/test",
            "Use POST /gists/:id/forks instead of POST /gists/:id/fork",
            "Fix date of 1.18.0",
            "Merge branch 'develop'",
            "Run compare_to_api_ref_doc.py",
            "Update readme and doc for #184",
            "Update readme",
            "Update readme",
            "Update readme",
            "Fix readme :-D",
            "Merge branch 'topic/KnowYourParent' into develop",
            "Update readme",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Update readme with missing URLs",
            "Merge branch 'develop'",
            "Prepare version 1.17.0",
            "Publish version 1.16.0",
            "Publish version 1.15.0",
            "Publish version 1.14.2",
            "Small fixes in doc",
            "Fix link to milestone",
            "Prepare version 1.14.1",
            "Talk about #160",
            "Prepare version 1.14.0",
            "Publish version 1.13.1",
            "Publish version 1.13.0",
            "Merge branch 'topic/ExposeRawData' into develop",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "ReadMe",
            "Merge branch 'topic/PaginatedListPerPage' into develop",
            "Add Github.per_page to tweak PaginatedList (Issue #145)",
            "Merge branch 'topic/FixPythonVersions' into develop",
            "Avoid confusion between github/ and Github.py on case-insensitive file systems (#143)",
            "Merge branch 'master' into develop",
            "Publish version 1.12.2",
            "Publish version 1.12.1",
            "Publish version 1.12.0"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetStargazersWithDates.txt",
        "commits": [
            "Merge pull request #347 from danvk/starred-at  Add repo.get_stargazers_with_dates()",
            "Add repo.get_stargazers_with_dates()"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.setUp.txt",
        "commits": [
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Gist.testNewAttributes.txt",
        "commits": [
            "Merge branch 'pr247' into develop",
            "Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Add new test showing https git urls for gists (Issue #119)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testUrlquotingOfQualifiers.txt",
        "commits": [
            "Fix urlencoding for search (see #237)  Parameters are encoded in Requester => simply remove urllib.quote Path needs to be encoded => change to urllib.quote_plus as in #237"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testUrlquotingOfQuery.txt",
        "commits": [
            "Fix urlencoding for search (see #237)  Parameters are encoded in Requester => simply remove urllib.quote Path needs to be encoded => change to urllib.quote_plus as in #237"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testSearchCode.txt",
        "commits": [
            "Fix tests for Python 3",
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testGetPageOnSearchUsers.txt",
        "commits": [
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testPaginateSearchUsers.txt",
        "commits": [
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testSearchIssues.txt",
        "commits": [
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Search.testSearchRepos.txt",
        "commits": [
            "Merge branch 'pr224'",
            "Restore coverage for several previous PRs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue214.testCreateIssue.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "adding the tests for issue 214"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue214.testEditIssue.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge pull request #218 from farrd/master  Can now specify assignee as a string",
            "adding the tests for issue 214"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetCommitsWithAuthor.txt",
        "commits": [
            "Merge branch 'develop'",
            "Add 'author' to 'Repository.get_commits' (#204)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testStatisticsAfterCaching.txt",
        "commits": [
            "Merge branch 'develop'",
            "First step of implementation of Repository.get_stats_xxx (#203)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testCreateGist.txt",
        "commits": [
            "Merge branch 'develop'",
            "Remove tests for deleted methods!",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/NamedUser.testCreateGistWithoutDescription.txt",
        "commits": [
            "Merge branch 'develop'",
            "Remove tests for deleted methods!",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateDownloadWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Remove tests for deleted methods!",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateDownloadWithMinimalArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Remove tests for deleted methods!",
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/ConditionalRequestUpdate.testUpdateObjectWithoutEtag.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConditionalRequest' into develop  Conflicts: \tREADME.rst",
            "#193: Fix test coverage"
        ]
    },
    {
        "fileName": "github/tests/_record_.py",
        "commits": [
            "Remove _record_.py (#193)  According to https://github.com/jacquev6/PyGithub/commit/0f74e4389b3c0fa57a83083ecfbbf5c331022674#commitcomment-3919786",
            "Fix remarks on #189 to #193",
            "Review of #189: pep8, copyrights, style, remarks  For remarks, run: git grep \"#189\" They are only my first thoughts while reviewing this pull request, and should be reviewed themselves.",
            "Add test case for conditional request",
            "Add test record helper"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetCommitsWithSinceUntil.txt",
        "commits": [
            "Merge branch 'develop' into topic/ConditionalRequest  Conflicts: \t.gitignore \tgithub/Requester.py",
            "Merge branch 'develop'",
            "Improve coverage for #187"
        ]
    },
    {
        "fileName": "doc/apis.rst",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/KnowYourParent",
            "Merge branch 'topic/CompareToReferenceDoc' into develop",
            "Generate doc/apis.rst instead of checking it",
            "Fix our doc to match URLs described in Github API v3 ref doc",
            "Merge branch 'develop'",
            "Implement `GET /users` (issue #173)",
            "Merge branch 'develop'",
            "AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)",
            "Merge branch 'topic/Notifications' into develop",
            "Complete doc/apis.rst (pull #148)",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/FixPythonVersions' into develop",
            "Avoid confusion between github/ and Github.py on case-insensitive file systems (#143)",
            "Merge branch 'develop'",
            "Improve documentation",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Improve docs"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/SpecificExceptions.testBadUserAgent.txt",
        "commits": [
            "Merge branch 'develop'",
            "Add two new types of exceptions (issue #152)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/SpecificExceptions.testRateLimitExceeded.txt",
        "commits": [
            "Merge branch 'develop'",
            "Add two new types of exceptions (issue #152)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateAuthorizationWithAllArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateAuthorizationWithClientIdAndSecret.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Add client_id and client_secret parameters to AuthenticatedUser.create_authorization (issue #125)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateAuthorizationWithoutArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateGist.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateGistWithoutDescription.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateKey.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateRepository.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testCreateRepositoryWithAutoInit.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Add auto_init and gitignore_template to create_repo (issue #106)  http://developer.github.com/changes/2012-9-28-auto-init-for-repositories/"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testEditWithAllArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/AuthenticatedUser.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Authorization.testEdit.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Commit.testCreateComment.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Commit.testCreateCommentOnFileLine.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Commit.testCreateCommentOnFilePosition.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Commit.testCreateStatusWithAllParameters.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Commit.testCreateStatusWithoutOptionalParameters.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/CommitComment.testEdit.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Exceptions.testInvalidInput.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GistComment.testEdit.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Change URL of gist comments (issue #113)",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GitRef.testEdit.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/GitRef.testEditWithForce.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Hook.testEditWithAllParameters.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Hook.testEditWithMinimalParameters.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testCreateComment.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testEditResetAssignee.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testEditResetMilestone.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue.testEditWithoutParameters.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue87.testCreateIssueWithEscapedPercentInBody.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Add test showing error described in issue #87"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue87.testCreateIssueWithEscapedPercentInTitle.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Add test showing error described in issue #87"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue87.testCreateIssueWithPercentInBody.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Add test showing error described in issue #87"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Issue87.testCreateIssueWithPercentInTitle.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Add test showing error described in issue #87"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/IssueComment.testEdit.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Markdown.testRenderGithubFlavoredMarkdown.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Markdown.testRenderMarkdown.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Milestone.testEditWithAllParameters.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Milestone.testEditWithMinimalParameters.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testCreateRepoWithMinimalArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testCreateRepositoryWithAutoInit.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Add auto_init and gitignore_template to create_repo (issue #106)  http://developer.github.com/changes/2012-9-28-auto-init-for-repositories/"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testCreateTeam.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Organization.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testCreateIssueComment.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testEditWithAllArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequest.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/PullRequestComment.testEdit.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testBadSubscribePubSubHubbub.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Remove useless Content-Length header",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitBlob.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitRef.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitTag.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitTagWithAllArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitTree.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateGitTreeWithSha.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateHookWithAllParameters.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateHookWithMinimalParameters.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateIssue.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testCreateMilestoneWithMinimalArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testEditWithDefaultBranch.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Implement default_branch in Repository.edit (issue #107)  See http://developer.github.com/changes/2012-10-24-set-default-branch/"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Fix Content-Type to allow '%' in json payload (issue #87)",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetArchiveLink.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetBranch.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetComments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetCommits.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetCommitsWithArguments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetContributors.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetDownloads.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetEvents.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetForks.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetGitRef.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Implement optional revert of #102 (issue #104)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetGitRefWithIssue102Reverted.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'develop'",
            "Implement optional revert of #102 (issue #104)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetGitRefs.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetHooks.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetIssues.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetIssuesComments.txt",
        "commits": [
            "Merge branch 'topic/AddDefaultUserAgent'",
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Repository.get_issues_comments and Repository.get_pulls_comments (issue #126)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetIssuesWithArguments.txt",
        "commits": [
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetIssuesWithWildcards.txt",
        "commits": [
            "Fix tests for #161",
            "Fix tests on Python 3.3 (issue #149)  The output order of dicts has changed",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/SpecificExceptions.testBadCredentials.txt",
        "commits": [
            "Merge branch 'topic/SpecificExceptions' into develop",
            "Raise a specific exception for bad credentials (issue #152)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/SpecificExceptions.testUnknownObject.txt",
        "commits": [
            "Merge branch 'topic/SpecificExceptions' into develop",
            "Raise a specific exception for non-existing objects (issue #152)"
        ]
    },
    {
        "fileName": "publish.sh",
        "commits": [
            "Use bash for manage.sh",
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/FixPythonVersions' into develop",
            "Todo",
            "Publish version 1.12.1",
            "Publish version 1.12.0",
            "Merge branch 'develop'",
            "Improve publish.sh",
            "On the way to replace publish.sh by setup.py publish",
            "Fix publish.sh",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Simplify",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Measure coverage simply in publish.sh",
            "pep8 + readme",
            "Minor fixes",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Fixes for issue #86",
            "Merge branch 'develop'",
            "Improve documentation (issue #78)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Publish version 1.6",
            "Fix publish script",
            "dos2unix, chmod +x",
            "Tweak the publish.sh script",
            "Publish version 1.3",
            "Merge branch 'develop'",
            "Fix(?) problem with documentation install path (Issue #48)"
        ]
    },
    {
        "fileName": "doc/github.rst",
        "commits": [
            "Merge remote-tracking branch 'origin/develop' into NotificationAPI",
            "Merge branch 'topic/FixPythonVersions' into develop",
            "Avoid confusion between github/ and Github.py on case-insensitive file systems (#143)",
            "Merge branch 'develop'",
            "Improve"
        ]
    },
    {
        "fileName": "github/Github.py",
        "commits": [
            "this fixes #108",
            "Merge branch 'develop'",
            "Change home page",
            "Improve documentation",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Retrieve scopes for current oauth token from response headers (Issue #134)",
            "Rename methods in Requester",
            "Generate some repetitive doc files",
            "Fix tests and some doc",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Merge branch 'topic/RetrieveGitignoreTemplates' into develop",
            "Github.get_gitignore_template[s] (issue #120)",
            "Merge branch 'topic/GetRepoFromFullName' into develop  Conflicts: \tReadMe.md",
            "Get repo from full name: tests, doc, fix param name (Pull #121)",
            "Add get_repo method to Github top level object",
            "Improve",
            "Update generateDocstrings.py",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Use absolute imports. May help with Python 3",
            "Merge branch 'develop'",
            "Add a customizable User-Agent (issue #109)",
            "Merge branch 'topic/UnauthenticatedRateLimitedRequests' into develop",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "added client_id and client_secret auth option",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Restore support of Python 2.5",
            "Merge branch 'develop'",
            "Implement optional revert of #102 (issue #104)",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Add a temporary script to create docstrings (help for issue #82)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement https://api.github.com/hooks (issue #35)",
            "Merge branch 'develop'",
            "Merge branch 'topic/Timeout' into develop  Conflicts: \tgithub/Requester.py",
            "Add timeout option",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Specify a server url for Github.  Allows connection to GitHub Enterprise installs on local URLs.",
            "Merge branch 'develop'",
            "Merge branch 'topic/Markdown' into develop",
            "Implement markdown rendering (Issue #56)",
            "Small clean-up + type fixes",
            "Urlquote the keyword in legacy search APIs",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination",
            "Convert legacy objects to v3 ones  Still needed: - test completion of objects returned by legacy API - implement legacy pagination",
            "Add 4 (failing) tests for legacy search API (issue #49)  Na\u00efve implementation done in this commit will not work: - pagination is managed another way - users, repositories and issues do not have the standard format",
            "Create documentation and method stubs for issue #49 (legacy search api)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Factorize checking of status",
            "Test more exceptions",
            "Move generated code to 'github' instead of 'src/github'",
            "Merge branch 'develop'",
            "Merge branch 'topic/Authentication' into develop",
            "Implement the three authentication schemes",
            "Fix testGists",
            "Fix testGistsAll, improve testEvents",
            "Restore some tests and explain why others are failing",
            "Simplify",
            "Fix github.get_organization => fix testOrganizationDetails!",
            "Fix github.get_user( login )",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/issue_21' into develop",
            "Add facilities for uniform debug printing",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Finaly do a poor implementation of Github.get_gists",
            "Merge branch 'develop'",
            "Merge branch 'topic/AddGists' into develop",
            "Gists",
            "Extract Requester from Github",
            "Raise on 404 error when getting data",
            "Add unit tests for requests",
            "Rewrite asserts",
            "Reimplement networking with httplib instead of urllib2  This will allow real access to HTTP headers and status",
            "AuthenticatedUser.add_following and .remove_following",
            "Fix previous commit",
            "Add organizations",
            "ExtendedScalarAttributes in Repository",
            "Retrieve user by login",
            "First integration test"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetNotification.txt",
        "commits": [
            "this fixes #108"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Github.testGetNotifications.txt",
        "commits": [
            "this fixes #108"
        ]
    },
    {
        "fileName": "make_doc.sh",
        "commits": [
            "Publish version 1.12.0",
            "Merge branch 'develop'",
            "Simplify",
            "Simplify",
            "Re-organize doc",
            "Do not push docs"
        ]
    },
    {
        "fileName": "Contributing.md",
        "commits": [
            "Merge branch 'develop'",
            "Improve documentation",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Improve doc about automated tests",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Contributing: pull requests on develop",
            "Merge branch 'master' into develop",
            "Add a Contribute.md file (issue #94)  See https://github.com/blog/1184-contributing-guidelines"
        ]
    },
    {
        "fileName": "ReadMe.md",
        "commits": [
            "Merge branch 'develop'",
            "Implement Repository.get_dir_contents (issue #140)",
            "Add link to Fedora packaging ticket",
            "Publish version 1.11.1",
            "Improve doc about automated tests",
            "Publish version 1.11.0",
            "Merge branch 'develop'",
            "Retrieve scopes for current oauth token from response headers (Issue #134)",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring.",
            "Doc for NamedUser.get_keys (Issue #130)",
            "Update readme to list Notifico as a client of PyGithub (#128)",
            "Edit readme for #133",
            "Prepare version 1.10.0 + pep8",
            "Merge branch 'develop'",
            "Readme for issue #126",
            "Complete \"ref in Repository.get_contents and .get_readme\" (pull #124)  Add documentation and automated tests",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'master' into develop",
            "Fix branch in travis status",
            "Merge branch 'topic/RetrieveGitignoreTemplates' into develop",
            "Github.get_gitignore_template[s] (issue #120)",
            "Merge branch 'topic/GetRepoFromFullName' into develop  Conflicts: \tReadMe.md",
            "Get repo from full name: tests, doc, fix param name (Pull #121)",
            "Change ReadMe and ChangeLog to reStructuredText",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Readme",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "pep8 + readme",
            "Minor fixes",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Prepare version 1.9.0",
            "Merge pull request #114 from tymofij/patch-1  typo in ReadMe.md",
            "typo in ReadMe.md",
            "Merge branch 'develop'",
            "Prepare v1.8.1",
            "Prepend \"/refs/\" in Repository.get_git_ref (issue #102)",
            "Publish version 1.8.0",
            "Merge branch 'develop'",
            "Changelog",
            "Gather things that show up when googling PyGithub",
            "Add a Travis image",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "Enable Travis CI",
            "Publish version 1.7",
            "Merge branch 'develop'",
            "Improve documentation (issue #78)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Publish version 1.6",
            "Publish version 1.5",
            "Merge branch 'develop'",
            "Add a note about Upverter (issue #63)",
            "Fix publication date",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Update documentation",
            "Add links to milestones in History",
            "Remove the not-so-new News section",
            "Publish version 1.3",
            "Publish version 1.2",
            "Try to fix location of installed documentation (Issue #48)  I hope I've understood well http://docs.python.org/distutils/setupscript.html#installing-package-data",
            "Prepare version 1.1",
            "Add a note about licensing (issue #45)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Readme",
            "List client projects (issue #25)",
            "Prepare version 1.0",
            "Merge branch 'develop'",
            "Publish version 0.6",
            "Merge branch 'develop'",
            "Publish version 0.5",
            "Publish version 0.4",
            "Merge branch 'develop'",
            "Typo...",
            "Publish version 0.3",
            "Anticipate version 0.3",
            "Typo",
            "Publish version 0.2",
            "Adapt documentation for vincent-jacques.net",
            "Planned releases",
            "Planned releases",
            "Upload to the Python Package Index",
            "Documentation",
            "Doc",
            "Initiate a rewrite"
        ]
    },
    {
        "fileName": "ReadMe.rst",
        "commits": [
            "Merge branch 'develop'",
            "Improve publish.sh",
            "Fix readme",
            "Improve documentation",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Improve",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Change ReadMe and ChangeLog to reStructuredText"
        ]
    },
    {
        "fileName": "doc/ChangeLog.md",
        "commits": [
            "Merge branch 'develop'",
            "Publish version 1.11.1",
            "Publish version 1.11.0",
            "Prepare version 1.10.0 + pep8",
            "Change ReadMe and ChangeLog to reStructuredText",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Minor fixes",
            "Fix assertion failure on big integers (issue #116)",
            "Merge branch 'develop'",
            "Prepare version 1.9.0",
            "Merge branch 'develop'",
            "Prepare v1.8.1",
            "Publish version 1.8.0",
            "Merge branch 'develop'",
            "Changelog",
            "Publish version 1.7",
            "Merge branch 'develop'",
            "Improve documentation (issue #78)"
        ]
    },
    {
        "fileName": "doc/ReferenceOfApis.md",
        "commits": [
            "Merge branch 'develop'",
            "Implement Repository.get_dir_contents (issue #140)",
            "Merge branch 'develop'",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring.",
            "Doc for NamedUser.get_keys (Issue #130)",
            "Generate some repetitive doc files",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Repository.get_issues_comments and Repository.get_pulls_comments (issue #126)",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Merge branch 'topic/RetrieveGitignoreTemplates' into develop",
            "Github.get_gitignore_template[s] (issue #120)",
            "Merge branch 'topic/GetRepoFromFullName' into develop  Conflicts: \tReadMe.md",
            "Get repo from full name: tests, doc, fix param name (Pull #121)",
            "Add a temporary script to create docstrings (help for issue #82)",
            "Merge branch 'develop'",
            "Improve documentation (issue #78)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement https://api.github.com/hooks (issue #35)",
            "Clarify issue comments and review comments on pull requests (issue #59)",
            "Repository.merge (issue #69)",
            "Repository.get_branch",
            "Commit statuses (issue #67)",
            "Repository.get_archive_link (issue #65)",
            "Repository.get_readme and Repository.get_contents (issue #65)",
            "Remove a useless TODO about /rate_limit",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Implement assignees (issue #68)",
            "Generate TODOs from git://github.com/github/developer.github.com.git  Some of them are already covered by issues #65, #67, #68 and #69",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'",
            "Merge remote-tracking branch 'origin/topic/DeleteRepository' into develop",
            "Repository.delete",
            "Merge branch 'develop'",
            "Merge branch 'topic/Markdown' into develop",
            "Implement markdown rendering (Issue #56)",
            "Small clean-up + type fixes",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Create documentation and method stubs for issue #49 (legacy search api)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Move files around"
        ]
    },
    {
        "fileName": "doc/ReferenceOfClasses.md",
        "commits": [
            "Merge branch 'develop'",
            "Implement Repository.get_dir_contents (issue #140)",
            "Merge branch 'develop'",
            "Retrieve scopes for current oauth token from response headers (Issue #134)",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring.",
            "Doc for NamedUser.get_keys (Issue #130)",
            "Generate some repetitive doc files",
            "Fix doc",
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Repository.get_issues_comments and Repository.get_pulls_comments (issue #126)",
            "Add client_id and client_secret parameters to AuthenticatedUser.create_authorization (issue #125)",
            "Complete \"ref in Repository.get_contents and .get_readme\" (pull #124)  Add documentation and automated tests",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Fix doc",
            "Merge branch 'topic/RetrieveGitignoreTemplates' into develop",
            "Github.get_gitignore_template[s] (issue #120)",
            "Merge branch 'topic/GetRepoFromFullName' into develop  Conflicts: \tReadMe.md",
            "Get repo from full name: tests, doc, fix param name (Pull #121)",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tgithub/Github.py \tgithub/GithubObject.py",
            "Merge branch 'develop'",
            "Prepare version 1.9.0",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Add auto_init and gitignore_template to create_repo (issue #106)  http://developer.github.com/changes/2012-9-28-auto-init-for-repositories/",
            "Implement default_branch in Repository.edit (issue #107)  See http://developer.github.com/changes/2012-10-24-set-default-branch/",
            "Merge branch 'topic/PullRequest.assignee' into develop",
            "Documentation and tests for PullRequest.assignee (Pull #111)",
            "Improve generated docstrings (slightly)",
            "Add a temporary script to create docstrings (help for issue #82)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Document PaginatedList.get_page (issue #77)",
            "Improve documentation (issue #78)",
            "Anticipate doc and tests for pull request #74",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement https://api.github.com/hooks (issue #35)",
            "Clarify issue comments and review comments on pull requests (issue #59)",
            "Fix ReferenceOfClasses.md",
            "Repository.merge (issue #69)",
            "Repository.get_branch",
            "Commit statuses (issue #67)",
            "Repository.get_archive_link (issue #65)",
            "Repository.get_readme and Repository.get_contents (issue #65)",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Implement assignees (issue #68)",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'",
            "Merge branch 'topic/Timeout' into develop  Conflicts: \tgithub/Requester.py",
            "Merge remote-tracking branch 'origin/topic/DeleteRepository' into develop",
            "Add notice about timeout to documentation.",
            "Repository.delete",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Update documentation",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414",
            "Merge branch 'topic/Markdown' into develop",
            "Implement markdown rendering (Issue #56)",
            "Small clean-up + type fixes",
            "Add tests about issue #54, according to comments by @bilderbuchi",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Publish version 1.2",
            "Clarify return type of methods giving a collection (asked in issue #51)",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination",
            "Create documentation and method stubs for issue #49 (legacy search api)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Prepare version 1.0",
            "Use datetime where it makes sence (issue #41)",
            "Implement wildcards (\"*\" and \"none\") for milestone and assignee in Repository.get_issues",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Structure parameters of Issue.edit",
            "Manual implementation of typing of last parameters",
            "A litle bit more structure",
            "Acknowledge that some attributes/parameters are variant dictionaries",
            "Structure some attributes",
            "Structure the result of PullRequest.merge",
            "Structure some attributes",
            "Re-implement url parameters and test them (issue #36)",
            "Set types of many parameters",
            "Assert types of parameters of methods of Repository and RepositoryKey",
            "Start to assert the type of the arguments",
            "Fix many attribute types",
            "Reduce differences between generated code and correct code",
            "Do not assert that we know all the attributes we receive",
            "Test PullRequests",
            "Test Team",
            "Improve test coverage",
            "Improve coverage of AuthenticatedUser",
            "Test Issue.getComments",
            "Merge branch 'master' into topic/RewriteWithGeneratedCode  Conflicts: \tgithub/Github.py \tgithub/Requester.py",
            "Merge commit 'c93f9cc8484b7' into topic/RewriteWithGeneratedCode  Conflicts: \ttest/IntegrationTest.py",
            "Test Download and CommitComment",
            "Retrieve rate limiting information",
            "Test IssueEvent attributes",
            "Test Gist",
            "Test Tag attributes",
            "Test attributes of commit comments",
            "Test attributes of NamedUser",
            "Test Issue attributes",
            "Test attributes of Milestone",
            "Create a GitTreeElement class",
            "Test Organization attributes",
            "Create a class Permissions",
            "Test GitTag attributes",
            "Test GitRef attributes",
            "Test Branch and Commit attributes",
            "Move files around"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testSubscribePubSubHubbub.txt",
        "commits": [
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Remove useless Content-Length header",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testUnsubscribePubSubHubbub.txt",
        "commits": [
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md \tgithub/AuthenticatedUser.py \tgithub/Authorization.py \tgithub/CommitComment.py \tgithub/ContentFile.py \tgithub/Download.py \tgithub/Gist.py \tgithub/GistComment.py \tgithub/GitRef.py \tgithub/Github.py \tgithub/Hook.py \tgithub/Issue.py \tgithub/IssueComment.py \tgithub/Label.py \tgithub/Milestone.py \tgithub/PullRequest.py \tgithub/PullRequestComment.py \tgithub/Repository.py \tgithub/RepositoryKey.py \tgithub/Team.py \tgithub/UserKey.py \tsetup.py",
            "Merge branch 'develop'",
            "Remove useless Content-Length header",
            "First implementation of PubSubHubbub (un)subscription (Issue #129)  This will need 'some' refactoring."
        ]
    },
    {
        "fileName": "doc/github_objects.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/AuthenticatedUser.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Authorization.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/AuthorizationApplication.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Branch.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Commit.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/CommitComment.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/CommitStats.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/CommitStatus.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Comparison.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/ContentFile.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Download.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Event.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/File.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Gist.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GistComment.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GistFile.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GistHistoryState.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GitAuthor.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GitBlob.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GitCommit.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GitObject.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GitRef.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GitTag.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GitTree.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GitTreeElement.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/GitignoreTemplate.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Merge branch 'develop' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ReferenceOfApis.md \tdoc/ReferenceOfClasses.md"
        ]
    },
    {
        "fileName": "doc/github_objects/Hook.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/HookDescription.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/HookResponse.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Issue.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/IssueComment.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/IssueEvent.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/IssuePullRequest.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Label.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Milestone.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/NamedUser.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Organization.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Permissions.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Plan.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/PullRequest.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/PullRequestComment.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/PullRequestMergeStatus.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/PullRequestPart.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Repository.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/RepositoryKey.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Tag.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/Team.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "doc/github_objects/UserKey.rst",
        "commits": [
            "Generate some repetitive doc files",
            "Improve",
            "Improve"
        ]
    },
    {
        "fileName": "generateDocstrings.py",
        "commits": [
            "Generate some repetitive doc files",
            "Mark urls to be completed",
            "Improve docs",
            "Improve",
            "Improve",
            "Update generateDocstrings.py",
            "Improve generated docstrings (slightly)",
            "First draft of generated documentation (issue #82)  1) ./generateDocstrings.py 2) cd doc 3) make html 4) open doc/build/html/index.html",
            "Add a temporary script to create docstrings (help for issue #82)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetPullsComments.txt",
        "commits": [
            "Merge branch 'master' into topic/ExperimentOnDocumentation  Conflicts: \tReadMe.md \tdoc/ChangeLog.md \tsetup.py",
            "Merge branch 'develop'",
            "Repository.get_issues_comments and Repository.get_pulls_comments (issue #126)"
        ]
    },
    {
        "fileName": "github/tests/IntegrationTest.py",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Merge branch 'topic/Python3' into develop (issue #93)",
            "Remove unused file",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Merge pull request #110 from Zearin/feature/encoding_comment  Add encoding comment to source files",
            "Add encoding comment to source files  This is a minor thing.  It\u2019s a convention, not a rule (obviously)\u2014but it\u2019s also a best practice.  Many text editors look for this kind of comment as the first line\u2014or second line, if there is a shebang (the `#!/usr/bin/env python`, or whatever else)\u2014and make use of this to determine the file\u2019s encoding.",
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "python26-requirements.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/GetContentsWithRef",
            "Simplify",
            "Merge branch 'develop'",
            "Merge branch 'develop' into topic/UnauthenticatedRateLimitedRequests",
            "Restore Python 2.5 and 2.6?  (This commit was 'push --force'd)"
        ]
    },
    {
        "fileName": "doc/ChangeLog.rst",
        "commits": [
            "Change ReadMe and ChangeLog to reStructuredText"
        ]
    },
    {
        "fileName": "doc/Makefile",
        "commits": [
            "Do not push docs",
            "sphinx-quickstart"
        ]
    },
    {
        "fileName": "doc/make.bat",
        "commits": [
            "Do not push docs",
            "sphinx-quickstart"
        ]
    },
    {
        "fileName": "publish_doc.sh",
        "commits": [
            "Do not push docs",
            "Draft a script for publishing the doc"
        ]
    },
    {
        "fileName": "doc/source/index.rst",
        "commits": [
            "Add disclaimer",
            "First draft of generated documentation (issue #82)  1) ./generateDocstrings.py 2) cd doc 3) make html 4) open doc/build/html/index.html",
            "sphinx-quickstart"
        ]
    },
    {
        "fileName": "github/tests/Github.py",
        "commits": [
            "Merge branch 'develop'",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/Logging.py",
        "commits": [
            "Merge branch 'develop'",
            "Follow pep8",
            "Improve logging (related to #88)",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/Logging' into develop (pull #88)",
            "Test the logging facility"
        ]
    },
    {
        "fileName": "github/Logging.py",
        "commits": [
            "Improve logging (related to #88)",
            "Improve comformance to pep8 (+dos2unix)  PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions.",
            "Merge branch 'topic/Logging' into develop (pull #88)",
            "Test the logging facility"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testMergeWithConflict.txt",
        "commits": [
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testMergeWithMessage.txt",
        "commits": [
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testMergeWithNothingToDo.txt",
        "commits": [
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testMergeWithoutMessage.txt",
        "commits": [
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Team.testEditWithoutArguments.txt",
        "commits": [
            "Fix Content-Type to allow '%' in json payload (issue #87)"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Logging.testLogging.txt",
        "commits": [
            "Merge branch 'topic/Logging' into develop (pull #88)",
            "Test the logging facility"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetKeys.txt",
        "commits": [
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetLabel.txt",
        "commits": [
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetLabels.txt",
        "commits": [
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetLanguages.txt",
        "commits": [
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetMilestones.txt",
        "commits": [
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetMilestonesWithArguments.txt",
        "commits": [
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetNetworkEvents.txt",
        "commits": [
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetPulls.txt",
        "commits": [
            "Merge branch 'topic/EnableTravisCi' into develop",
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "run_tests.sh",
        "commits": [
            "Fixes for issue #86",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Cover custom base url in tests  (we still have to record/replay the protocol, host and port)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Set attributes of executable files",
            "Move generated code to 'github' instead of 'src/github'",
            "Generate more coverage information",
            "Fix code generation and tests after reorganization",
            "Add a Plan class",
            "Start to rewrite integration test",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/Refactor' into develop",
            "Show coverage of integration test as well",
            "Fix previous commit",
            "Prepare for requests interrested only in headers",
            "Retrieve user by login",
            "First skeleton",
            "Initiate a rewrite"
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetPullsWithArguments.txt",
        "commits": [
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetStargazers.txt",
        "commits": [
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetSubscribers.txt",
        "commits": [
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "github/tests/ReplayData/Repository.testGetTeams.txt",
        "commits": [
            "On the way to publish tests (issue #86)  This commit only moves stuff around. Modifications will be done in next commit."
        ]
    },
    {
        "fileName": "test/Exceptions.py",
        "commits": [
            "Fix tests on Python 2.5",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Test more exceptions",
            "Simplify understanding of GithubExceptions by displaying the error message from Github",
            "Restore compatibility with Python 2.6  Remove: - dict comprehensions - unittest.TestCase.assertRaises with only one argument",
            "Manual implementation of some status checks"
        ]
    },
    {
        "fileName": "doc/source/conf.py",
        "commits": [
            "sphinx-quickstart"
        ]
    },
    {
        "fileName": "codegen/JsonDescriptionOfGithubApiV3/description.human_readable.json",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement https://api.github.com/hooks (issue #35)",
            "Clarify issue comments and review comments on pull requests (issue #59)",
            "Repository.merge (issue #69)",
            "Repository.get_branch",
            "Commit statuses (issue #67)",
            "Repository.get_archive_link (issue #65)",
            "Repository.get_readme and Repository.get_contents (issue #65)",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Implement assignees (issue #68)",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Make generated code closer to correct code",
            "Use datetime where it makes sence (issue #41)",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Structure parameters of Issue.edit",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Manual implementation of typing of last parameters",
            "A litle bit more structure",
            "Acknowledge that some attributes/parameters are variant dictionaries",
            "Structure some attributes",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Structure the result of PullRequest.merge",
            "Structure some attributes",
            "Re-implement url parameters and test them (issue #36)",
            "Split template for GithubObject",
            "Remove silly 000 and 001"
        ]
    },
    {
        "fileName": "codegen/JsonDescriptionOfGithubApiV3/description.normalized.json",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement https://api.github.com/hooks (issue #35)",
            "Clarify issue comments and review comments on pull requests (issue #59)",
            "Repository.merge (issue #69)",
            "Repository.get_branch",
            "Commit statuses (issue #67)",
            "Repository.get_archive_link (issue #65)",
            "Repository.get_readme and Repository.get_contents (issue #65)",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Implement assignees (issue #68)",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Make generated code closer to correct code",
            "Use datetime where it makes sence (issue #41)",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Structure parameters of Issue.edit",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Manual implementation of typing of last parameters",
            "Remove some 'todo's",
            "A litle bit more structure",
            "Acknowledge that some attributes/parameters are variant dictionaries",
            "Structure some attributes",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Remove _identity from json description",
            "Merge constant parts in urls",
            "Structure the result of PullRequest.merge",
            "Structure some attributes",
            "Re-implement url parameters and test them (issue #36)",
            "Split template for GithubObject",
            "Remove silly 000 and 001"
        ]
    },
    {
        "fileName": "codegen/JsonDescriptionOfGithubApiV3/normalize.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Make generated code closer to correct code",
            "Set attributes of executable files",
            "Use datetime where it makes sence (issue #41)",
            "Remove some 'todo's",
            "A litle bit more structure",
            "Acknowledge that some attributes/parameters are variant dictionaries",
            "Make 'isCompletable = True' the default case",
            "Remove old 'todo's",
            "Remove _identity from json description",
            "Merge constant parts in urls",
            "Remove silly 000 and 001",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Todo",
            "Generate code with Unix line endings even on Windows",
            "dos2unix",
            "Reduce differences between generated code and correct code",
            "Move 'todo's out of generated code",
            "Merge commit 'c93f9cc8484b7' into topic/RewriteWithGeneratedCode  Conflicts: \ttest/IntegrationTest.py",
            "Remove noise in human readable description",
            "Be explicit about complete-ability",
            "Custom url for AuthenticatedUser",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/generate.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Set attributes of executable files",
            "Move generated code to 'github' instead of 'src/github'",
            "Use datetime where it makes sence (issue #41)",
            "Manual implementation of typing of last parameters",
            "Factorize repeated code in base class GithubObject",
            "Remove silly 000 and 001",
            "Rename"
        ]
    },
    {
        "fileName": "codegen/generate_reference_of_apis.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Generate TODOs from git://github.com/github/developer.github.com.git  Some of them are already covered by issues #65, #67, #68 and #69",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Fix generation of reference of APIs"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.AttributeValue.complex.dict.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore compatibility with Python 2.6  Remove: - dict comprehensions - unittest.TestCase.assertRaises with only one argument",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.AttributeValue.complex.list.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.AttributeValue.complex.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.AttributeValue.complex.scalar.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.AttributeValue.simple.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Use datetime where it makes sence (issue #41)",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Concatenation.argument.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Remove many useless conversions to string",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Concatenation.attribute.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Remove many useless conversions to string",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Concatenation.constant.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Concatenation.identity.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Remove many useless conversions to string",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Concatenation.parentUrl.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Concatenation.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1",
            "Factorize repeated code in base class GithubObject",
            "Remove _identity from json description",
            "Generate code for parent url",
            "Generate code for url quoting",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Concatenation.stringOf.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Make generated code closer to correct code"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Concatenation.urlquote.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Implementation.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "dos2unix, chmod +x",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Manual implementation of typing of last parameters",
            "Refactor switches in templates: step 1",
            "A litle bit more structure",
            "Acknowledge that some attributes/parameters are variant dictionaries",
            "Use a special value for not set attributes and parameters",
            "Factorize repeated code in base class GithubObject",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Split template for GithubObject"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.bool.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.date.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Use datetime where it makes sence (issue #41)"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.datetime.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Use datetime where it makes sence (issue #41)"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.dict.complex.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Manual implementation of typing of last parameters"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.dict.complex_as_dict.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.dict.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.integer.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.list.complex.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.list.complex_as_dict.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.list.simple.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.scalar.complex.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.scalar.complex_as_dict.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.scalar.simple.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.IsInstance.string.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.MethodBody.CheckArguments.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Manual implementation of typing of last parameters",
            "Refactor switches in templates: step 1",
            "Acknowledge that some attributes/parameters are variant dictionaries",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Improve type asserts on lists",
            "Split template for GithubObject"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.MethodBody.DoRequest.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Factorize checking of status",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Use a special value for not set attributes and parameters",
            "Factorize repeated code in base class GithubObject",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Split template for GithubObject",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "dos2unix",
            "Assert types of parameters of methods of Repository and RepositoryKey",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Generate correct code for variadic complex parameter",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.MethodBody.ReturnValue.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "dos2unix, chmod +x",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 2"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.MethodBody.UseResult.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 2",
            "A litle bit more structure",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "dos2unix",
            "Use NoCompletion when creating an object from the result of a request",
            "Improve management of lazy completion",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.Parameters.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Use a special value for not set attributes and parameters",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.PublicAttributes.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 1",
            "Use a special value for not set attributes and parameters",
            "Factorize repeated code in base class GithubObject",
            "Split template for GithubObject"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.PublicMethods.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor switches in templates: step 2",
            "Refactor switches in templates: step 1",
            "Split template for GithubObject"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.py",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Split template for GithubObject",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Generate code for url quoting",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/templates/ReferenceOfClasses.Parameters.md",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/templates/ReferenceOfClasses.Type.md",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Manual implementation of typing of last parameters",
            "A litle bit more structure",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/templates/ReferenceOfClasses.md",
        "commits": [
            "Merge branch 'develop'",
            "Remove all old stuff related to code generation (issue #75)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Reconciliate generated code with shipped code  (no impact on shipped code, only re-ordering)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Reduce differences between generated code and correct code",
            "Merge commit 'c93f9cc8484b7' into topic/RewriteWithGeneratedCode  Conflicts: \ttest/IntegrationTest.py",
            "Retrieve rate limiting information",
            "Move files around"
        ]
    },
    {
        "fileName": "test/Github.py",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Complete Legacy.convertXxx (issue #81)",
            "Legacy.PaginatedList.get_page (issue #77)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement https://api.github.com/hooks (issue #35)",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Implement legacy pagination",
            "Add a (failing) test for legacy pagination",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination",
            "Convert legacy objects to v3 ones  Still needed: - test completion of objects returned by legacy API - implement legacy pagination",
            "Add 4 (failing) tests for legacy search API (issue #49)  Na\u00efve implementation done in this commit will not work: - pagination is managed another way - users, repositories and issues do not have the standard format",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "dos2unix",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/IntegrationTest.py",
        "commits": [
            "Merge branch 'develop'",
            "Work-around Github Enterprise bad URL (issue #80)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Commit statuses (issue #67)",
            "Repository.get_readme and Repository.get_contents (issue #65)",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Cover custom base url in tests  (we still have to record/replay the protocol, host and port)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "Merge branch 'topic/Markdown' into develop",
            "Implement markdown rendering (Issue #56)",
            "Add tests about issue #54, according to comments by @bilderbuchi",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Set executable attribute of IntegrationTest.py",
            "Manual implementation of some status checks",
            "Test PaginatedList",
            "Fix issue #33 and add an integration test",
            "Test PullRequests",
            "Test Team",
            "Improve test coverage",
            "Heavy refactoring of integration tests",
            "Restore coverage of Event",
            "Test three authentication schemes",
            "Merge commit 'c93f9cc8484b7' into topic/RewriteWithGeneratedCode  Conflicts: \ttest/IntegrationTest.py",
            "Test Download and CommitComment",
            "Test Authorization",
            "Retrieve rate limiting information",
            "Test Gist",
            "Test Hooks",
            "Test attributes of NamedUser",
            "Test attributes of Milestone",
            "Test Organization attributes",
            "Modularize integration tests",
            "Fix code generation and tests after reorganization",
            "Rename new tests as only tests",
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/Issue.py",
        "commits": [
            "Merge branch 'develop'",
            "Anticipate doc and tests for pull request #74",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Structure parameters of Issue.edit",
            "Structure some attributes",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "dos2unix",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Test (and implement) Issue.*_label*  And this commit will be used to test PullRequests",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/Issue80.py",
        "commits": [
            "Merge branch 'develop'",
            "Work-around Github Enterprise bad URL (issue #80)"
        ]
    },
    {
        "fileName": "test/PaginatedList.py",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "PaginatedList.get_page (issue #77)",
            "Restore test coverage",
            "dos2unix, chmod +x",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Test PaginatedList"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testLegacySearchReposExplicitPagination.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testLegacySearchUsersExplicitPagination.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testEditResetAssignee.txt",
        "commits": [
            "Merge branch 'develop'",
            "Add recorded conversation with github for #74"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testEditResetMilestone.txt",
        "commits": [
            "Merge branch 'develop'",
            "Add recorded conversation with github for #74"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue80.testIgnoreHttpsFromGithubEnterprise.txt",
        "commits": [
            "Merge branch 'develop'",
            "Work-around Github Enterprise bad URL (issue #80)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue80.testIgnoreHttpsFromGithubEnterpriseWithPort.txt",
        "commits": [
            "Merge branch 'develop'",
            "Work-around Github Enterprise bad URL (issue #80)"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PaginatedList"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testGetFirstPage.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "PaginatedList.get_page (issue #77)"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testGetThirdPage.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "PaginatedList.get_page (issue #77)"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testIntIndexingAfterIteration.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PaginatedList"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testIntIndexingInFirstPage.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testIntIndexingInThirdPage.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PaginatedList"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testInterruptedIteration.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PaginatedList"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testInterruptedIterationInSlice.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PaginatedList"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testIteration.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PaginatedList"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testSeveralIterations.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Restore test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testSliceIndexingInFirstPage.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testSliceIndexingUntilEnd.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PaginatedList"
        ]
    },
    {
        "fileName": "test/ReplayData/PaginatedList.testSliceIndexingUntilFourthPage.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ExposePagination' into develop",
            "Do all paginated calls inside PaginatedList  This was already the case for Legacy.PaginatedList.  Doing it in PaginatedList.PaginatedList reduces the amount of repeated code and will allow a generic solution for issue #77",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PaginatedList"
        ]
    },
    {
        "fileName": "test/Repository.py",
        "commits": [
            "Merge branch 'develop'",
            "Complete Legacy.convertXxx (issue #81)",
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.merge (issue #69)",
            "Repository.get_branch",
            "Repository.get_archive_link (issue #65)",
            "Repository.get_readme and Repository.get_contents (issue #65)",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Implement assignees (issue #68)",
            "Merge branch 'develop'",
            "Merge remote-tracking branch 'origin/topic/DeleteRepository' into develop",
            "Repository.delete",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination",
            "Add 4 (failing) tests for legacy search API (issue #49)  Na\u00efve implementation done in this commit will not work: - pagination is managed another way - users, repositories and issues do not have the standard format",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Implement wildcards (\"*\" and \"none\") for milestone and assignee in Repository.get_issues",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Manual implementation of typing of last parameters",
            "Structure some attributes",
            "Structure some attributes",
            "Re-implement url parameters and test them (issue #36)",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Manual implementation of some url parameters",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Finally achieve 100% coverage! Now is time to refactor and deliver!",
            "Test PullRequests",
            "Improve test coverage",
            "Test Repository.create_git_*",
            "Improve test coverage",
            "Heavy refactoring of integration tests",
            "Refactor tests of Repository",
            "Improve coverage of AuthenticatedUser",
            "Test the new Repository.full_name attribute",
            "Improve test coverage of NamedUser",
            "Test attributes of Milestone",
            "Create a class Permissions",
            "Test Repository.edit",
            "Test AuthenticatedUser.create_repo (requires manual edition of generated code)",
            "Reorganize test fixtures",
            "Modularize integration tests"
        ]
    },
    {
        "fileName": "test/AuthenticatedUser.py",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Manual implementation of typing of last parameters",
            "A litle bit more structure",
            "Re-implement url parameters and test them (issue #36)",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Manual implementation of some url parameters",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Test Repository.create_git_*",
            "Improve test coverage",
            "Heavy refactoring of integration tests",
            "Refactor tests of Repository",
            "Test Authorization",
            "Test AuthenticatedUser watching",
            "Improve test coverage of AuthenticatedUser",
            "Reorganize test fixtures",
            "Modularize integration tests"
        ]
    },
    {
        "fileName": "test/Commit.py",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Commit statuses (issue #67)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Improve test coverage",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/CommitStatus.py",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Commit statuses (issue #67)"
        ]
    },
    {
        "fileName": "test/ContentFile.py",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.get_readme and Repository.get_contents (issue #65)"
        ]
    },
    {
        "fileName": "test/Framework.py",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Small no-impact code improvements",
            "Merge branch 'develop'",
            "Merge remote-tracking branch 'origin/topic/DeleteRepository' into develop",
            "Fix record/replay in test framework",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Cover custom base url in tests  (we still have to record/replay the protocol, host and port)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Move generated code to 'github' instead of 'src/github'",
            "Use Linux line-endings when recording integration tests on Windows",
            "dos2unix",
            "Improve test coverage",
            "Heavy refactoring of integration tests",
            "Refactor tests of NamedUser",
            "Test three authentication schemes",
            "Allow test without pre-set-up Github",
            "Restore some form of Authorization header in replay data",
            "Test Hooks",
            "Test Issue attributes",
            "Reorganize test fixtures"
        ]
    },
    {
        "fileName": "test/NamedUser.py",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement subscriptions (issue #70)",
            "Implement stargazers (issue #70)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Manual implementation of typing of last parameters",
            "Re-implement url parameters and test them (issue #36)",
            "Test NamedUser.create_gist withour description",
            "Refactor tests of NamedUser",
            "Use setUp in test for NamedUser",
            "Improve test coverage of NamedUser",
            "Test attributes of NamedUser"
        ]
    },
    {
        "fileName": "test/PullRequest.py",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Clarify issue comments and review comments on pull requests (issue #59)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Structure some attributes",
            "Structure the result of PullRequest.merge",
            "Re-implement url parameters and test them (issue #36)",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "dos2unix",
            "Fix many attribute types",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testStarring.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement stargazers (issue #70)"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testSubscriptions.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement subscriptions (issue #70)"
        ]
    },
    {
        "fileName": "test/ReplayData/Commit.testCreateStatusWithAllParameters.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Commit statuses (issue #67)"
        ]
    },
    {
        "fileName": "test/ReplayData/Commit.testCreateStatusWithoutOptionalParameters.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Commit statuses (issue #67)"
        ]
    },
    {
        "fileName": "test/ReplayData/CommitStatus.setUp.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Commit statuses (issue #67)"
        ]
    },
    {
        "fileName": "test/ReplayData/ContentFile.setUp.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.get_readme and Repository.get_contents (issue #65)"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testGetHooks.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement https://api.github.com/hooks (issue #35)"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetStarred.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement stargazers (issue #70)"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetSubscriptions.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement subscriptions (issue #70)"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testCreateIssueComment.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Clarify issue comments and review comments on pull requests (issue #59)"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testGetIssueComment.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Clarify issue comments and review comments on pull requests (issue #59)"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testGetIssueComments.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Clarify issue comments and review comments on pull requests (issue #59)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testAssignees.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement assignees (issue #68)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testDelete.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Merge remote-tracking branch 'origin/topic/DeleteRepository' into develop",
            "Repository.delete"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetArchiveLink.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.get_archive_link (issue #65)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetBranch.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.get_branch"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetContents.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.get_readme and Repository.get_contents (issue #65)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetStargazers.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement stargazers (issue #70)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetSubscribers.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Implement subscriptions (issue #70)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testMergeWithConflict.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.merge (issue #69)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testMergeWithMessage.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.merge (issue #69)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testMergeWithNothingToDo.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.merge (issue #69)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testMergeWithoutMessage.txt",
        "commits": [
            "Merge branch 'master' of github.com:servalproject/PyGithub",
            "Merge branch 'develop'",
            "Repository.merge (issue #69)"
        ]
    },
    {
        "fileName": "test/Enterprise.py",
        "commits": [
            "dos2unix, chmod +x",
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Test GET on url returned by Github Enterprise",
            "Cover custom base url in tests  (we still have to record/replay the protocol, host and port)"
        ]
    },
    {
        "fileName": "test/Issue54.py",
        "commits": [
            "dos2unix, chmod +x",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414",
            "Add tests about issue #54, according to comments by @bilderbuchi"
        ]
    },
    {
        "fileName": "test/Markdown.py",
        "commits": [
            "dos2unix, chmod +x",
            "Merge branch 'develop'",
            "Merge branch 'topic/Markdown' into develop",
            "Implement markdown rendering (Issue #56)"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testAttributes.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore some form of Authorization header in replay data",
            "Rename new tests as only tests"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testCreateAuthorizationWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testCreateAuthorizationWithoutArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testCreateFork.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testCreateGist.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testCreateGistWithoutDescription.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testCreateKey.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testCreateRepository.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor tests of Repository"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testCreateRepositoryWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Refactor tests of Repository"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testEditWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage",
            "Restore some form of Authorization header in replay data",
            "Rename new tests as only tests"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore some form of Authorization header in replay data",
            "Rename new tests as only tests"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testEmails.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of AuthenticatedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testFollowing.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of AuthenticatedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetAuthorizations.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore some form of Authorization header in replay data",
            "Test Authorization"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetGists.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetIssues.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetKeys.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetOrganizationEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetOrgs.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetRepos.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetReposWithArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Re-implement url parameters and test them (issue #36)",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Manual implementation of some url parameters"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testGetStarredGists.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/AuthenticatedUser.testWatching.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test AuthenticatedUser watching"
        ]
    },
    {
        "fileName": "test/ReplayData/Authentication.testBasicAuthentication.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Test three authentication schemes"
        ]
    },
    {
        "fileName": "test/ReplayData/Authentication.testNoAuthentication.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Test three authentication schemes"
        ]
    },
    {
        "fileName": "test/ReplayData/Authentication.testOAuthAuthentication.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Test three authentication schemes"
        ]
    },
    {
        "fileName": "test/ReplayData/Authorization.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Authorization.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Authorization"
        ]
    },
    {
        "fileName": "test/ReplayData/Authorization.testEdit.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Authorization"
        ]
    },
    {
        "fileName": "test/ReplayData/Branch.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test attributes of commit comments",
            "Reorganize test fixtures",
            "Test Branch and Commit attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/Branch.testCommitCommentsOnLine.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore some form of Authorization header in replay data",
            "Test attributes of commit comments"
        ]
    },
    {
        "fileName": "test/ReplayData/Commit.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Improve test coverage",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Commit.testCreateComment.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Commit.testCreateCommentOnFileLine.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Commit.testCreateCommentOnFilePosition.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Commit.testGetComments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/CommitComment.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "dos2unix",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/CommitComment.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/CommitComment.testEdit.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Download.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Download.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Enterprise.testHttp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Cover custom base url in tests  (we still have to record/replay the protocol, host and port)"
        ]
    },
    {
        "fileName": "test/ReplayData/Enterprise.testHttps.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Cover custom base url in tests  (we still have to record/replay the protocol, host and port)"
        ]
    },
    {
        "fileName": "test/ReplayData/Enterprise.testLongUrl.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Test GET on url returned by Github Enterprise",
            "Record/replay protocol, host, port",
            "Cover custom base url in tests  (we still have to record/replay the protocol, host and port)"
        ]
    },
    {
        "fileName": "test/ReplayData/Enterprise.testSpecificPort.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Cover custom base url in tests  (we still have to record/replay the protocol, host and port)"
        ]
    },
    {
        "fileName": "test/ReplayData/Event.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore coverage of Event"
        ]
    },
    {
        "fileName": "test/ReplayData/Exceptions.testBadAuthentication.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Test more exceptions"
        ]
    },
    {
        "fileName": "test/ReplayData/Exceptions.testInvalidInput.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Manual implementation of some status checks"
        ]
    },
    {
        "fileName": "test/ReplayData/Exceptions.testUnknownObject.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Test more exceptions"
        ]
    },
    {
        "fileName": "test/ReplayData/Exceptions.testUnknownUser.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Test more exceptions"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testCreateComment.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testEditWithAllParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testEditWithoutParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testFork.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testGetComments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testStarring.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/GistComment.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "dos2unix",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/GistComment.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/GistComment.testEdit.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/GitBlob.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures",
            "Rename new tests as only tests"
        ]
    },
    {
        "fileName": "test/ReplayData/GitCommit.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures",
            "Rename new tests as only tests"
        ]
    },
    {
        "fileName": "test/ReplayData/GitRef.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Repository.create_git_ref, GitRef.edit and .delete (needs a manual edition of Repository.py)",
            "Test GitRef attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/GitRef.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/GitRef.testEdit.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/GitRef.testEditWithForce.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/GitTag.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures",
            "Test GitTag attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/GitTree.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures",
            "Rename new tests as only tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testGetGists.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testLegacySearchRepos.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Urlquote the keyword in legacy search APIs",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testLegacySearchReposPagination.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Add a (failing) test for legacy pagination"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testLegacySearchReposWithLanguage.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testLegacySearchUserByEmail.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testLegacySearchUsers.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testLegacySearchUsersPagination.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Implement legacy pagination"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testSearchRepos.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Add 4 (failing) tests for legacy search API (issue #49)  Na\u00efve implementation done in this commit will not work: - pagination is managed another way - users, repositories and issues do not have the standard format"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testSearchUserByEmail.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Add 4 (failing) tests for legacy search API (issue #49)  Na\u00efve implementation done in this commit will not work: - pagination is managed another way - users, repositories and issues do not have the standard format"
        ]
    },
    {
        "fileName": "test/ReplayData/Github.testSearchUsers.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Add 4 (failing) tests for legacy search API (issue #49)  Na\u00efve implementation done in this commit will not work: - pagination is managed another way - users, repositories and issues do not have the standard format"
        ]
    },
    {
        "fileName": "test/ReplayData/Hook.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Structure some attributes",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Hooks"
        ]
    },
    {
        "fileName": "test/ReplayData/Hook.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Hooks"
        ]
    },
    {
        "fileName": "test/ReplayData/Hook.testEditWithAllParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Hooks"
        ]
    },
    {
        "fileName": "test/ReplayData/Hook.testEditWithMinimalParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Hooks"
        ]
    },
    {
        "fileName": "test/ReplayData/Hook.testTest.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Hooks"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Rename some tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testAddAndRemoveLabels.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Test (and implement) Issue.*_label*  And this commit will be used to test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testCreateComment.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test IssueComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testDeleteAndSetLabels.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Test (and implement) Issue.*_label*  And this commit will be used to test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testEditWithAllParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Structure parameters of Issue.edit",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Issue"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testEditWithoutParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Issue"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testGetComments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testGetEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testGetLabels.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Test (and implement) Issue.*_label*  And this commit will be used to test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue33.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Fix issue #33 and add an integration test"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue33.testClosedIssues.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Remove last silly 'todo's (issue #34)",
            "Add a test for the 950 closed issues refered by issue #33"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue33.testOpenIssues.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Fix issue #33 and add an integration test"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Fix tests after merging #50, and fix Repository.create_issue and .get_issues as well",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.testAddLabelToIssue.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Fix tests after merging #50, and fix Repository.create_issue and .get_issues as well",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.testCreateIssueWithLabel.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Fix tests after merging #50, and fix Repository.create_issue and .get_issues as well",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.testCreateLabel.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.testGetIssuesWithLabel.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Fix tests after merging #50, and fix Repository.create_issue and .get_issues as well",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.testGetLabel.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.testGetLabels.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.testIssueGetLabels.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Fix tests after merging #50, and fix Repository.create_issue and .get_issues as well",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.testRemoveLabelFromIssue.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue50.testSetIssueLabels.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Fix tests after merging #50, and fix Repository.create_issue and .get_issues as well",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue54.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414",
            "Add tests about issue #54, according to comments by @bilderbuchi"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue54.testConversion.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414"
        ]
    },
    {
        "fileName": "test/ReplayData/IssueComment.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "dos2unix",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/IssueComment.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/IssueComment.testEdit.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/IssueEvent.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Improve test coverage",
            "Improve test coverage",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/IssueEvent.testAttributes.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Label.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test labels (new special case in Repository.get_label...)"
        ]
    },
    {
        "fileName": "test/ReplayData/Label.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test labels (new special case in Repository.get_label...)"
        ]
    },
    {
        "fileName": "test/ReplayData/Label.testEdit.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test labels (new special case in Repository.get_label...)"
        ]
    },
    {
        "fileName": "test/ReplayData/Markdown.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/Markdown' into develop",
            "Implement markdown rendering (Issue #56)"
        ]
    },
    {
        "fileName": "test/ReplayData/Markdown.testRenderGithubFlavoredMarkdown.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/Markdown' into develop",
            "Implement markdown rendering (Issue #56)"
        ]
    },
    {
        "fileName": "test/ReplayData/Markdown.testRenderMarkdown.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/Markdown' into develop",
            "Implement markdown rendering (Issue #56)"
        ]
    },
    {
        "fileName": "test/ReplayData/Milestone.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "dos2unix",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Rename some tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Milestone.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Milestone"
        ]
    },
    {
        "fileName": "test/ReplayData/Milestone.testEditWithAllParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Milestone"
        ]
    },
    {
        "fileName": "test/ReplayData/Milestone.testEditWithMinimalParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Milestone"
        ]
    },
    {
        "fileName": "test/ReplayData/Milestone.testGetLabels.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Milestone"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test NamedUser.create_gist withour description",
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Test attributes of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testAttributesOfOtherUser.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Restore some form of Authorization header in replay data",
            "Test attributes of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testCreateGist.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of NamedUser",
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testCreateGistWithoutDescription.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test NamedUser.create_gist withour description"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Remove last silly 'todo's (issue #34)",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Refactor tests of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetFollowers.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "dos2unix",
            "Refactor tests of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetFollowing.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetGists.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetOrgs.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetPublicEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetPublicReceivedEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetReceivedEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetRepo.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetRepos.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetReposWithType.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Re-implement url parameters and test them (issue #36)"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testGetWatched.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of NamedUser",
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "dos2unix",
            "Restore some form of Authorization header in replay data",
            "Test Organization attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testCreateFork.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve coverage of Organization"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testCreateRepoWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Improve coverage of Organization"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testCreateRepoWithMinimalArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve coverage of Organization"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testCreateTeam.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Team"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testCreateTeamWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Test Team"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testEditWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "dos2unix",
            "Restore some form of Authorization header in replay data",
            "Test Organization attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testGetEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve coverage of Organization"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testGetMembers.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Organization members"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testGetPublicMembers.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Organization members"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testGetRepos.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve coverage of Organization"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testGetReposWithType.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Re-implement url parameters and test them (issue #36)"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testGetTeams.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve coverage of Organization"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testMembers.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Organization members"
        ]
    },
    {
        "fileName": "test/ReplayData/Organization.testPublicMembers.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Organization members"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testCreateComment.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Remove silly 'todo's in replay data",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testEditWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testGetComments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testGetCommits.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testGetFiles.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testMerge.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequest.testMergeWithCommitMessage.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Re-implement url parameters and test them (issue #36)"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequestComment.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequestComment.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequestComment.testEdit.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/PullRequestFile.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/RateLimiting.testRateLimiting.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "dos2unix",
            "Restore some form of Authorization header in replay data",
            "Merge commit 'c93f9cc8484b7' into topic/RewriteWithGeneratedCode  Conflicts: \ttest/IntegrationTest.py",
            "Retrieve rate limiting information"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage",
            "Refactor tests of Repository",
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures",
            "Rename new tests as only tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCollaborators.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Repository.create_git_*"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCompare.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateDownloadWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateDownloadWithMinimalArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitBlob.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "dos2unix",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitCommit.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Test Repository.create_git_*"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitCommitWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Test Repository.create_git_*"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitCommitWithParents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitRef.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitTag.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Repository.create_git_*"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitTagWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Repository.create_git_*"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitTree.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Repository.create_git_*"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitTreeWithBaseTree.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Test Repository.create_git_*"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateGitTreeWithSha.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Manual implementation of typing of last parameters"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateHookWithAllParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateHookWithMinimalParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateIssue.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateIssueWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Test Repository.create_git_*"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateKey.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateLabel.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateMilestone.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateMilestoneWithMinimalArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Repository.create_git_*"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreatePull.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreatePullFromIssue.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Finally achieve 100% coverage! Now is time to refactor and deliver!"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testEditWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of Repository",
            "Restore some form of Authorization header in replay data",
            "Test Repository.edit"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of Repository",
            "Restore some form of Authorization header in replay data",
            "Test Repository.edit"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetComments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetCommits.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Remove last silly 'todo's (issue #34)",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetCommitsWithArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Re-implement url parameters and test them (issue #36)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetContributors.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Refactor tests of Repository"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetDownloads.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetForks.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetGitRefs.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetGitTreeWithRecursive.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Manual implementation of some url parameters"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetHooks.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetIssues.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetIssuesEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetIssuesWithArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Remove old 'todo's",
            "Re-implement url parameters and test them (issue #36)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetIssuesWithWildcards.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Remove silly 'todo's in replay data",
            "Implement wildcards (\"*\" and \"none\") for milestone and assignee in Repository.get_issues"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetKeys.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetLabel.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetLabels.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetLanguages.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetMilestones.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetMilestonesWithArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Re-implement url parameters and test them (issue #36)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetNetworkEvents.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetPulls.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Finally achieve 100% coverage! Now is time to refactor and deliver!",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetPullsWithArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Re-implement url parameters and test them (issue #36)"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetTeams.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testGetWatchers.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testLegacySearchIssues.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Improve legacy APIs:  - add a legacy_ prefix (avoir future name clashes) - add the language parameter to Github.legacy_search_repos - prepare legacy pagination"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testSearchIssues.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Merge branch 'develop'",
            "Merge branch 'topic/LegacySearch' into develop",
            "Add 4 (failing) tests for legacy search API (issue #49)  Na\u00efve implementation done in this commit will not work: - pagination is managed another way - users, repositories and issues do not have the standard format"
        ]
    },
    {
        "fileName": "test/ReplayData/RepositoryKey.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/RepositoryKey.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Finally achieve 100% coverage! Now is time to refactor and deliver!"
        ]
    },
    {
        "fileName": "test/ReplayData/RepositoryKey.testEdit.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Finally achieve 100% coverage! Now is time to refactor and deliver!"
        ]
    },
    {
        "fileName": "test/ReplayData/RepositoryKey.testEditWithoutParameters.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Finally achieve 100% coverage! Now is time to refactor and deliver!"
        ]
    },
    {
        "fileName": "test/ReplayData/Tag.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Tag attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/Team.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Team"
        ]
    },
    {
        "fileName": "test/ReplayData/Team.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Team"
        ]
    },
    {
        "fileName": "test/ReplayData/Team.testEditWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Team"
        ]
    },
    {
        "fileName": "test/ReplayData/Team.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Team"
        ]
    },
    {
        "fileName": "test/ReplayData/Team.testMembers.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Team"
        ]
    },
    {
        "fileName": "test/ReplayData/Team.testRepos.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Test Team"
        ]
    },
    {
        "fileName": "test/ReplayData/UserKey.setUp.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/UserKey.testDelete.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/UserKey.testEditWithAllArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/ReplayData/UserKey.testEditWithoutArguments.txt",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/ConnectToGithubEnterprise' into develop",
            "Record/replay protocol, host, port",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/GitCommit.py",
        "commits": [
            "Fix tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "Add tests about issue #54, according to comments by @bilderbuchi",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/GitTag.py",
        "commits": [
            "Fix tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/GitAuthorDateAsDatetime' into develop",
            "Add tests about issue #54, according to comments by @bilderbuchi",
            "GitAuthor.date is now a datetime (Issue #54)",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue54.testNegativeHalfIntegerTimezone.txt",
        "commits": [
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414",
            "Add tests about issue #54, according to comments by @bilderbuchi"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue54.testNegativeIntegerTimezone.txt",
        "commits": [
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414",
            "Add tests about issue #54, according to comments by @bilderbuchi"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue54.testPositiveHalfIntegerTimezone.txt",
        "commits": [
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414",
            "Add tests about issue #54, according to comments by @bilderbuchi"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue54.testPositiveIntegerTimezone.txt",
        "commits": [
            "Finaly remove GitAuthor.timezone  See https://github.com/jacquev6/PyGithub/issues/54#issuecomment-6972414",
            "Add tests about issue #54, according to comments by @bilderbuchi"
        ]
    },
    {
        "fileName": "test/Issue50.py",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/IssuesWithSpacesInName' into develop",
            "Fix tests after merging #50, and fix Repository.create_issue and .get_issues as well",
            "Add (failing) integration tests for issue #50 (labels with spaces in name)"
        ]
    },
    {
        "fileName": "COPYING",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)"
        ]
    },
    {
        "fileName": "COPYING.LESSER",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)"
        ]
    },
    {
        "fileName": "IntegrationTest.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Remove an old todo",
            "Repository.get_languages => fix testRepositoryDetails",
            "Fix testRepositoryCompare",
            "Fix testKeys",
            "Fix testIssuesForAuthenticatedUser",
            "Todo",
            "Fix testGists",
            "Fix testEvents",
            "Fix testGistsAll, improve testEvents",
            "Restore pagination",
            "Pass url parameters to __requester.request => Fix testCreateForkForOrganization",
            "Restore some tests and explain why others are failing",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Deactivate failing test",
            "Fix some tests (create_fork)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Fix testColaborators (add_element, remove_element, has_element)",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Finaly do a poor implementation of Github.get_gists",
            "Merge branch 'topic/RestoreTests' into develop",
            "Improve integration tests coverage",
            "Cosmetic change in integration test",
            "Commit replay data for integration test",
            "Fix integration tests",
            "Merge branch 'develop'",
            "Merge branch 'topic/FixBaseUrl' into develop",
            "Restore integration test after bugfix",
            "Merge branch 'topic/MergeMergeRequest' into develop",
            "PullRequest.is_merged and PullRequest.merge",
            "Improve coverage analysis",
            "Merge branch 'topic/AddHooksAndEvents' into develop",
            "AuthenticatedUser.get_organization_events",
            "Repository.get_issues_event + coverage",
            "Fix and add integration tests about events",
            "Events: step 1",
            "Hook testing",
            "Hooks: step 2",
            "Merge branch 'topic/Coverage' into develop",
            "RepositoryDetails",
            "AuthenticatedUserDetails",
            "Downloads",
            "Team.edit",
            "RepositoryKeys",
            "PullRequests",
            "Commit comments",
            "Improve integration test",
            "Merge branch 'topic/SplitIntegrationTests' into develop",
            "NewIntegrationTest -> IntegrationTest",
            "Merge branch 'topic/AddGists' into develop",
            "Gists",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/AddPullRequests' into develop",
            "Pull/merge requests",
            "Merge branch 'topic/RefactorList' into develop",
            "Improve speed of replayed integration test",
            "Create a fork in integration tests",
            "Merge branch 'topic/FinishRepository' into develop",
            "Repository: tags, branches, commits  I had to rework pagination because it does not work as documented",
            "Repository.xxx_download",
            "Repository.get_languages",
            "Merge branch 'topic/FinishUser' into develop",
            "AuthenticatedUser.xxx_emails",
            "Merge branch 'topic/Refactor' into develop",
            "Add an example of has_in_xxx in integration test",
            "Merge branch 'topic/AddIssues' into develop",
            "IssueComment",
            "Issue.xxx_labels",
            "Repository issues",
            "Milestone.get_labels",
            "Labels",
            "Milestones",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/AddTeamObject' into develop",
            "Fix integration tests after rebase",
            "Add team attributes, edit parameters, and links in reference documentation",
            "Merge branch 'topic/AddGitObjects' into develop",
            "Repository.create_git_tag and .get_git_tag",
            "Fix integration tests after rebase",
            "Remove useless lines from IntegrationTest",
            "Test Repository.create_git_ blob, tree, commit, ref and GitRef.edit",
            "Repository.get_git_blob (and .create_git_blob, not tested)",
            "Repository.get_git_tree (and .create_git_tree, not tested)",
            "Repository.get_git_commit (and .create_git_commit, not tested)",
            "Fix after rebase",
            "Edit `GitRef`s returned but `get_git_refs` or `create_git_ref`",
            "Use Creatable",
            "Integration test + todo",
            "Repository.get_git_ref",
            "Add GitRef",
            "Merge branch 'topic/PlaybackIntegrationTest' into develop",
            "Record and replay integration tests!",
            "On the way to repaly-able integration tests",
            "Rework integration tests",
            "AuthenticatedUser and Organization.create_fork",
            "create_repo -> create_repo",
            "AuthenticatedUser. and Organization.create_repos",
            "AuthenticatedUser., NamedUser. and Organization.get_repo",
            "add_, remove_ -> add_to_, remove_from_",
            "AuthenticatedUser.add_watched and .remove_watched",
            "AuthenticatedUser.add_following and .remove_following",
            "Organization.edit",
            "User.edit",
            "Repository.get_collaborators, .get_contributors, .get_watchers, .get_forks",
            "Organization.get_repos",
            "User.get_followers and .get_following",
            "User.get_orgs",
            "User.get_watched",
            "Add private attributes of Organization",
            "Refactor integration test",
            "Add organizations",
            "ExtendedScalarAttributes in Repository",
            "Repository",
            "Improve integration tests",
            "Retrieve user by login",
            "First integration test"
        ]
    },
    {
        "fileName": "ReferenceOfClasses.md",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Publish version 0.7",
            "Structure some attributes",
            "Add a GitAuthor class",
            "Test attributes of GitTree (needs a manual change in url in Repository.get_git_tree)",
            "Check types of received attributes",
            "Add a Plan class",
            "Restore documentation of two methods",
            "Fix testEvents",
            "Fix testGistsAll, improve testEvents",
            "Reduce human readable description",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Publish version 0.6",
            "Merge branch 'topic/Recomplete' into develop",
            "NamedUser.create_gist",
            "GitRef.delete",
            "Merge branch 'develop'",
            "Publish version 0.5",
            "Fix documentation",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Repository.compare",
            "AuthenticatedUser.get_issues",
            "Repository.get_git_tree with 'recursive'",
            "On the way to alternative inputs. Still needs unit and integration testing",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Make sure only three class definitions are distributed",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py",
            "Remove todos, add them as github.com issues",
            "Publish version 0.4",
            "Merge branch 'develop'",
            "Merge branch 'topic/AddHooksAndEvents' into develop",
            "Events: step 1",
            "Regenerate reference of classes",
            "Hook testing",
            "Hooks: step 1",
            "Merge branch 'topic/AddAuthorizationsAndKeys' into develop",
            "Keys: step 2",
            "Authorizations: step 2",
            "RepositoryKey: first step",
            "UserKey: step 1",
            "Authorizations: step 1",
            "Merge branch 'topic/AddGists' into develop",
            "Gists",
            "Typo",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/AddPullRequests' into develop",
            "Pull/merge requests",
            "Merge branch 'topic/DocumentationGeneration' into develop",
            "Improve documentation generation",
            "Improve documentation generation",
            "Move things around",
            "Reorder classes in documentation",
            "Merge branch 'topic/FinishRepository' into develop",
            "Repository: tags, branches, commits  I had to rework pagination because it does not work as documented",
            "Repository.xxx_download",
            "Repository.get_languages",
            "Merge branch 'topic/FinishUser' into develop",
            "AuthenticatedUser.xxx_emails",
            "Merge branch 'topic/AddIssues' into develop",
            "IssueComment",
            "Issue.xxx_labels",
            "Repository issues",
            "Milestone.get_labels",
            "Labels",
            "Milestones",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/AddTeamObject' into develop",
            "Add team attributes, edit parameters, and links in reference documentation",
            "Add Team object",
            "Merge branch 'topic/AddGitObjects' into develop",
            "Documentation",
            "Edit `GitRef`s returned but `get_git_refs` or `create_git_ref`",
            "Integration test + todo",
            "Add GitRef",
            "Documentation",
            "Adapt documentation for vincent-jacques.net"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/AuthenticatedUserDetails.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/Colaborators.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/CommentCommit.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/CreateForkForOrganization.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/CreateRepoForOrganization.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/CreateRepoForUser.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/Downloads.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/EditAuthenticatedUser.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/EditOrganization.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/EditOrganizationTeamAndMembers.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/Emails.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/Events.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/Follow.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/Gists.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/GistsAll.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Finaly do a poor implementation of Github.get_gists"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/GitObjects.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/GitObjectsAlternative.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Improve integration tests coverage"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/Hooks.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/IssuesAndMilestones.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/IssuesForAuthenticatedUser.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Improve integration tests coverage"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/Keys.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/MergePullRequest.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Restore some tests and explain why others are failing",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/NamedUserDetails.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/OrganizationDetails.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/PullRequest.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/RepositoryCompare.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Improve integration tests coverage"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/RepositoryDetails.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/RepositoryKeys.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "ReplayDataForIntegrationTest/Watch.txt",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Commit replay data for integration test"
        ]
    },
    {
        "fileName": "RoadMap.md",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Prepare version 1.0",
            "Merge branch 'develop'",
            "Publish version 0.6",
            "Merge branch 'develop'",
            "Publish version 0.5",
            "Publish version 0.4",
            "Anticipate version 0.3",
            "Merge branch 'develop' into release/v0.2",
            "RoadMap",
            "Publish version 0.1",
            "Adapt documentation for vincent-jacques.net",
            "Documentation",
            "RoadMap",
            "Documentation",
            "RoadMap",
            "dos2unix",
            "Documentation",
            "Implement list of objects as attributes",
            "Initiate a rewrite"
        ]
    },
    {
        "fileName": "github/GenerateReferenceOfClasses.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/GenerateReferenceOfApis' into develop",
            "Rename GenerateDocumentation.py"
        ]
    },
    {
        "fileName": "github/Github.UnitTest.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Start to rewrite integration test",
            "Merge branch 'develop'",
            "Merge branch 'topic/issue_21' into develop",
            "Add facilities for uniform debug printing",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Restore test coverage",
            "Merge branch 'develop'",
            "Merge branch 'topic/MergeMergeRequest' into develop",
            "Restore test coverage",
            "Merge branch 'topic/AddHooksAndEvents' into develop",
            "AuthenticatedUser.get_organization_events",
            "Restore test coverage",
            "Restore test coverage",
            "Merge branch 'topic/RestoreTestCoverage' into develop",
            "Restore test coverage",
            "Improve coverage, fix bugs",
            "Raise on 404 error when getting data",
            "Add unit tests for requests"
        ]
    },
    {
        "fileName": "github/GithubObjects/AuthenticatedUser.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Add a Plan class",
            "Fix testKeys",
            "Fix testIssuesForAuthenticatedUser",
            "Fix testGists",
            "Fix testEvents",
            "Restore pagination",
            "Restore some tests and explain why others are failing",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix some tests (create_fork)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Refactor templates",
            "Put private methods after public ones",
            "Fix testColaborators (add_element, remove_element, has_element)",
            "Temporary hack for get_repos",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "AuthenticatedUser.get_issues",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Make sure only three class definitions are distributed",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Authorization.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Branch.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Commit.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/CommitComment.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Download.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Event.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Make sure only three class definitions are distributed",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Gist.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testGists",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/GistComment.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/GitBlob.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Structure some attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/GitCommit.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "More assertions",
            "Structure some attributes",
            "Add a GitAuthor class",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/GitRef.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/Recomplete' into develop",
            "GitRef.delete",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/GitTag.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/GitTree.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Structure some attributes",
            "Test attributes of GitTree (needs a manual change in url in Repository.get_git_tree)",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Fix integration tests",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Repository.get_git_tree with 'recursive'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/GithubObject/ArgumentsChecker.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Simplify",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "On the way to alternative inputs. Still needs unit and integration testing",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move GithubObject"
        ]
    },
    {
        "fileName": "github/GithubObjects/GithubObject/Basic.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Simplify",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move GithubObject"
        ]
    },
    {
        "fileName": "github/GithubObjects/GithubObject/GithubObject.UnitTest.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Simplify",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Restore test coverage",
            "Fix unit tests",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move GithubObject"
        ]
    },
    {
        "fileName": "github/GithubObjects/GithubObject/GithubObject.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Simplify",
            "Merge branch 'develop'",
            "Merge branch 'topic/issue_21' into develop",
            "Add facilities for uniform debug printing",
            "Do not fail if Github adds an attribute in an object",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move GithubObject"
        ]
    },
    {
        "fileName": "github/GithubObjects/GithubObject/List.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Simplify",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move GithubObject"
        ]
    },
    {
        "fileName": "github/GithubObjects/GithubObject/TypePolicies.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Simplify",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move GithubObject"
        ]
    },
    {
        "fileName": "github/GithubObjects/GithubObject/__init__.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Simplify",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move GithubObject"
        ]
    },
    {
        "fileName": "github/GithubObjects/Hook.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Restore some tests and explain why others are failing",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Issue.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Restore some tests and explain why others are failing",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix testColaborators (add_element, remove_element, has_element)",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/IssueComment.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/IssueEvent.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Label.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Milestone.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/NamedUser.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Fix testGistsAll, improve testEvents",
            "Restore pagination",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Temporary hack for get_repos",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix references to current class",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Make sure only three class definitions are distributed",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/NamedUser_complete.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/Recomplete' into develop",
            "NamedUser.create_gist",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "dos2unix",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Separate the three distributed classes"
        ]
    },
    {
        "fileName": "github/GithubObjects/Organization.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Pass url parameters to __requester.request => Fix testCreateForkForOrganization",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix some tests (create_fork)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix testColaborators (add_element, remove_element, has_element)",
            "Temporary hack for get_repos",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Make sure only three class definitions are distributed",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Organization_complete.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "dos2unix",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Separate the three distributed classes"
        ]
    },
    {
        "fileName": "github/GithubObjects/PullRequest.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Restore some tests and explain why others are failing",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "On the way to alternative inputs. Still needs unit and integration testing",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/PullRequestComment.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/PullRequestFile.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Repository.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Structure some attributes",
            "Fix urls for git objects",
            "Test attributes of GitTree (needs a manual change in url in Repository.get_git_tree)",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Repository.get_languages => fix testRepositoryDetails",
            "Fix testRepositoryCompare",
            "Fix testEvents",
            "Restore pagination",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix testColaborators (add_element, remove_element, has_element)",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix references to current class",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/issue_21' into develop",
            "Repository.permissions",
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTests' into develop",
            "Fix integration tests",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Repository.compare",
            "Repository.get_git_tree with 'recursive'",
            "Optional parameter for Repository.create_git_tree",
            "On the way to alternative inputs. Still needs unit and integration testing",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Make sure only three class definitions are distributed",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/RepositoryKey.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Repository_complete.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "dos2unix",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Separate the three distributed classes"
        ]
    },
    {
        "fileName": "github/GithubObjects/Tag.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/Team.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix testColaborators (add_element, remove_element, has_element)",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Simplify internal imports",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/UserKey.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Simplify",
            "Put private methods after public ones",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Be explicit about argumentChecker object",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/__init__.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Move files around",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)",
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Separate the three distributed classes",
            "Simplify internal imports",
            "Make sure only three class definitions are distributed",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/Requester.UnitTest.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Start to rewrite integration test",
            "Merge branch 'develop'",
            "Merge branch 'topic/AddHooksAndEvents' into develop",
            "Restore test coverage",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Restore unit tests",
            "Implement pagination",
            "Fix unit tests",
            "Remove trailing spaces",
            "Add parameters to url",
            "Extract Requester from Github"
        ]
    },
    {
        "fileName": "test/Authentication.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Test three authentication schemes"
        ]
    },
    {
        "fileName": "test/Authorization.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Structure some attributes",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "dos2unix",
            "Heavy refactoring of integration tests",
            "Test Authorization"
        ]
    },
    {
        "fileName": "test/Branch.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/CommitComment.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/Download.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "dos2unix",
            "Heavy refactoring of integration tests",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/Event.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "dos2unix",
            "Improve test coverage",
            "Restore coverage of Event"
        ]
    },
    {
        "fileName": "test/Gist.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Manual implementation of typing of last parameters",
            "A litle bit more structure",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "dos2unix",
            "Heavy refactoring of integration tests",
            "Improve coverage of AuthenticatedUser",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/GistComment.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "dos2unix",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/GitBlob.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/GitRef.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/GitTree.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/Hook.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Structure some attributes",
            "Heavy refactoring of integration tests",
            "Test Hooks"
        ]
    },
    {
        "fileName": "test/Issue33.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Add a test for the 950 closed issues refered by issue #33",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Fix issue #33 and add an integration test"
        ]
    },
    {
        "fileName": "test/IssueComment.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "dos2unix",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/IssueEvent.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "dos2unix",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Improve test coverage",
            "Improve test coverage",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/Label.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "dos2unix",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/Milestone.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "dos2unix",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/Organization.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Re-implement url parameters and test them (issue #36)",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Improve coverage of Organization",
            "Test Organization members",
            "Test Team",
            "Improve test coverage",
            "Test Organization attributes"
        ]
    },
    {
        "fileName": "test/PullRequestComment.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Use datetime where it makes sence (issue #41)",
            "dos2unix",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/PullRequestFile.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "dos2unix",
            "Test PullRequests"
        ]
    },
    {
        "fileName": "test/RateLimiting.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/RewriteWithGeneratedCode' into develop",
            "Add a copyright and license notice (issue #16)",
            "Merge commit 'c93f9cc8484b7' into topic/RewriteWithGeneratedCode  Conflicts: \ttest/IntegrationTest.py",
            "Retrieve rate limiting information"
        ]
    },
    {
        "fileName": "test/RepositoryKey.py",
        "commits": [
            "Add a copyright and license notice (issue #16)",
            "dos2unix",
            "Finally achieve 100% coverage! Now is time to refactor and deliver!",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "test/Tag.py",
        "commits": [
            "Add a copyright and license notice (issue #16)",
            "Heavy refactoring of integration tests"
        ]
    },
    {
        "fileName": "test/Team.py",
        "commits": [
            "Add a copyright and license notice (issue #16)",
            "dos2unix",
            "Test Team"
        ]
    },
    {
        "fileName": "test/UserKey.py",
        "commits": [
            "Add a copyright and license notice (issue #16)",
            "dos2unix",
            "Improve test coverage"
        ]
    },
    {
        "fileName": "codegen/GenerateReferenceOfClasses.py",
        "commits": [
            "Fix generation of reference of APIs",
            "Move old doc generators to not forget them"
        ]
    },
    {
        "fileName": "codegen/templates/GithubObject.MethodBody.CheckResult.py",
        "commits": [
            "Factorize checking of status",
            "Refactor switches in templates: step 2"
        ]
    },
    {
        "fileName": "codegen/GenerateReferenceOfApis.py",
        "commits": [
            "Remove last silly 'todo's (issue #34)",
            "Move old doc generators to not forget them"
        ]
    },
    {
        "fileName": "src/github/AuthenticatedUser.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Restore compatibility with Python 2.6  Remove: - dict comprehensions - unittest.TestCase.assertRaises with only one argument",
            "Manual implementation of typing of last parameters",
            "Refactor switches in templates: step 1",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Merge constant parts in urls",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Manual implementation of some status checks",
            "Re-implement url parameters and test them (issue #36)",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Manual implementation of some url parameters",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Improve coverage of AuthenticatedUser",
            "Test Authorization",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Use NoCompletion when creating an object from the result of a request",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Custom url for AuthenticatedUser",
            "Test AuthenticatedUser.create_repo (requires manual edition of generated code)",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Authorization.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Refactor switches in templates: step 1",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Structure some attributes",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/CommitComment.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Test attributes of commit comments",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Download.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Test Download and CommitComment",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Event.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Acknowledge that some attributes/parameters are variant dictionaries",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Improve test coverage of NamedUser",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Gist.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Restore compatibility with Python 2.6  Remove: - dict comprehensions - unittest.TestCase.assertRaises with only one argument",
            "Manual implementation of typing of last parameters",
            "Refactor switches in templates: step 1",
            "A litle bit more structure",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Test Gist",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Use NoCompletion when creating an object from the result of a request",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GistComment.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Test Gist",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GistHistoryState.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Test Gist"
        ]
    },
    {
        "fileName": "src/github/Hook.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Refactor switches in templates: step 1",
            "Acknowledge that some attributes/parameters are variant dictionaries",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Structure some attributes",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Remove completion of Hook",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Issue.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Remove many useless conversions to string",
            "Structure parameters of Issue.edit",
            "Refactor switches in templates: step 1",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Merge constant parts in urls",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Structure some attributes",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Generate code for parent url",
            "Generate correct code for variadic complex parameter",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Test (and implement) Issue.*_label*  And this commit will be used to test PullRequests",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Test IssueComment",
            "Remove __completed from non-completable classes",
            "Test Issue attributes",
            "Improve message when we check that we know all attributes",
            "Use NoCompletion when creating an object from the result of a request",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/IssueComment.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Test IssueComment",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/IssueEvent.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Test IssueEvent attributes",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Milestone.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Structure parameters of Issue.edit",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Test Milestone",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Test attributes of Milestone",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/NamedUser.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Restore compatibility with Python 2.6  Remove: - dict comprehensions - unittest.TestCase.assertRaises with only one argument",
            "Manual implementation of typing of last parameters",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Test attributes of NamedUser",
            "Improve message when we check that we know all attributes",
            "Use NoCompletion when creating an object from the result of a request",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Organization.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Remove many useless conversions to string",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Merge constant parts in urls",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Test Team",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Use NoCompletion when creating an object from the result of a request",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Test Organization attributes",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/PullRequest.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Remove many useless conversions to string",
            "Structure some attributes",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Merge constant parts in urls",
            "Remove the notion of ImmediateCompletion",
            "Structure the result of PullRequest.merge",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Generate code for parent url",
            "Reduce differences between generated code and correct code",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Test PullRequests",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Use NoCompletion when creating an object from the result of a request",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/PullRequestComment.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Remove many useless conversions to string",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Test PullRequests",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Repository.py",
        "commits": [
            "Use datetime where it makes sence (issue #41)",
            "Implement wildcards (\"*\" and \"none\") for milestone and assignee in Repository.get_issues",
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Remove many useless conversions to string",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Manual implementation of typing of last parameters",
            "Acknowledge that some attributes/parameters are variant dictionaries",
            "Structure some attributes",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Merge constant parts in urls",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Re-implement url parameters and test them (issue #36)",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Manual implementation of some url parameters",
            "Integrate some generated code excluded by mistake",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Assert types of parameters of methods of Repository and RepositoryKey",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "De-hard-code repository in RepositoryKey.  Why is RepositoryKey the *only* class where PATCH and DELETE do not work on self.url?",
            "Generate code for url quoting",
            "Reduce differences between generated code and correct code",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Finally achieve 100% coverage! Now is time to refactor and deliver!",
            "Test PullRequests",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Improve test coverage",
            "Test Issue.getComments",
            "Test labels (new special case in Repository.get_label...)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Use NoCompletion when creating an object from the result of a request",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Create a class Permissions",
            "Test Repository.create_git_ref, GitRef.edit and .delete (needs a manual edition of Repository.py)",
            "Test GitRef attributes",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Commit.py",
        "commits": [
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Remove many useless conversions to string",
            "Refactor switches in templates: step 1",
            "Structure some attributes",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Test Download and CommitComment",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Use NoCompletion when creating an object from the result of a request",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Test Branch and Commit attributes",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GitTree.py",
        "commits": [
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Refactor switches in templates: step 1",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Remove complete-ability from git objects",
            "Create a GitTreeElement class",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Team.py",
        "commits": [
            "Structure more parameters  We will HAVE to reduce differences between generated code and code that actualy works...",
            "Remove many useless conversions to string",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Merge constant parts in urls",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GitCommit.py",
        "commits": [
            "Remove many useless conversions to string",
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Refactor switches in templates: step 1",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Improve type asserts on lists",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Remove complete-ability from git objects",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GitRef.py",
        "commits": [
            "Remove many useless conversions to string",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Remove complete-ability from git objects",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Test GitRef attributes",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Label.py",
        "commits": [
            "Remove many useless conversions to string",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Generate code for url quoting",
            "Reduce differences between generated code and correct code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Test (and implement) Issue.*_label*  And this commit will be used to test PullRequests",
            "Remove branch coverage for optional attributes (temporary?)",
            "Test labels (new special case in Repository.get_label...)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/UserKey.py",
        "commits": [
            "Remove many useless conversions to string",
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/InputFileContent.py",
        "commits": [
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Manual implementation of typing of last parameters"
        ]
    },
    {
        "fileName": "src/github/InputGitAuthor.py",
        "commits": [
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Manual implementation of typing of last parameters"
        ]
    },
    {
        "fileName": "src/github/InputGitTreeElement.py",
        "commits": [
            "Generate code for complex parameters  (+ find bug in Repository.create_commit with parents !)",
            "Manual implementation of typing of last parameters"
        ]
    },
    {
        "fileName": "src/github/__init__.py",
        "commits": [
            "Manual implementation of typing of last parameters",
            "Only one class per file",
            "Manual implementation of some status checks",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Comparison.py",
        "commits": [
            "Refactor switches in templates: step 1",
            "Structure some attributes"
        ]
    },
    {
        "fileName": "src/github/GistFile.py",
        "commits": [
            "A litle bit more structure"
        ]
    },
    {
        "fileName": "src/github/File.py",
        "commits": [
            "Structure some attributes"
        ]
    },
    {
        "fileName": "src/github/PullRequestFile.py",
        "commits": [
            "Structure some attributes",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/PullRequestPart.py",
        "commits": [
            "Structure some attributes"
        ]
    },
    {
        "fileName": "src/github/RepositoryKey.py",
        "commits": [
            "Refactor assertions about parameters",
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Check HTTP status on all requests",
            "Remove the notion of ImmediateCompletion",
            "Merge pull request #39 from BeaverSoftware/master  Custom commit message created by PyGithub",
            "Automatic implementation of url_parameters",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Assert types of parameters of methods of Repository and RepositoryKey",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "De-hard-code repository in RepositoryKey.  Why is RepositoryKey the *only* class where PATCH and DELETE do not work on self.url?",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Finally achieve 100% coverage! Now is time to refactor and deliver!",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Improve test coverage",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/AuthorizationApplication.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Structure some attributes"
        ]
    },
    {
        "fileName": "src/github/Branch.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/CommitFile.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Test Branch and Commit attributes"
        ]
    },
    {
        "fileName": "src/github/CommitStats.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Test Branch and Commit attributes"
        ]
    },
    {
        "fileName": "src/github/DefaultValueForOptionalParameters.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Only one class per file"
        ]
    },
    {
        "fileName": "src/github/GitAuthor.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GitBlob.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Remove complete-ability from git objects",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GitObject.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Remove complete-ability from git objects",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Test GitRef attributes"
        ]
    },
    {
        "fileName": "src/github/GitTag.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Remove complete-ability from git objects",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Test GitTag attributes",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GitTreeElement.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Be explicit about complete-ability",
            "Create a GitTreeElement class"
        ]
    },
    {
        "fileName": "src/github/GithubObject.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Remove the notion of ImmediateCompletion",
            "Manual implementation of some status checks",
            "Improve management of lazy completion",
            "Remove repeated code"
        ]
    },
    {
        "fileName": "src/github/HookResponse.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Structure some attributes"
        ]
    },
    {
        "fileName": "src/github/IssuePullRequest.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Structure some attributes"
        ]
    },
    {
        "fileName": "src/github/Permissions.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Create a class Permissions"
        ]
    },
    {
        "fileName": "src/github/Plan.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/PullRequestMergeStatus.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Structure the result of PullRequest.merge"
        ]
    },
    {
        "fileName": "src/github/Tag.py",
        "commits": [
            "Use a special value for not set attributes and parameters",
            "Make 'isCompletable = True' the default case",
            "Factorize repeated code in base class GithubObject",
            "Only one class per file",
            "Remove the notion of ImmediateCompletion",
            "Fix many attribute types",
            "Move 'todo's out of generated code",
            "Do not assert that we know all the attributes we receive",
            "Merge pull request #31 from BeaverSoftware/master  Title edited by PyGithub",
            "Remove branch coverage for optional attributes (temporary?)",
            "Remove __completed from non-completable classes",
            "Test Tag attributes",
            "Improve message when we check that we know all attributes",
            "Improve management of lazy completion",
            "Remove repeated code",
            "Assert that we know all attributes  To be removed before release, since this would break the application if github.com adds a new attribute",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/Requester.py",
        "commits": [
            "Factorize repeated code in base class GithubObject",
            "Manual implementation of some status checks",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Remove one argument of Requester.request",
            "Generate code for parent url",
            "Merge branch 'master' into topic/RewriteWithGeneratedCode  Conflicts: \tgithub/Github.py \tgithub/Requester.py",
            "Merge commit 'c93f9cc8484b7' into topic/RewriteWithGeneratedCode  Conflicts: \ttest/IntegrationTest.py",
            "Retrieve rate limiting information",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GithubException.py",
        "commits": [
            "Only one class per file"
        ]
    },
    {
        "fileName": "src/github/Github.py",
        "commits": [
            "Remove the notion of ImmediateCompletion",
            "Remove some easy or obsolete 'todo's  See issues #2 #4 #18 #35 #36 #37",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Remove one argument of Requester.request",
            "Merge branch 'master' into topic/RewriteWithGeneratedCode  Conflicts: \tgithub/Github.py \tgithub/Requester.py",
            "Merge commit 'c93f9cc8484b7' into topic/RewriteWithGeneratedCode  Conflicts: \ttest/IntegrationTest.py",
            "Retrieve rate limiting information",
            "Improve management of lazy completion",
            "Fix code generation and tests after reorganization",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/PaginatedList.py",
        "commits": [
            "Remove the notion of ImmediateCompletion",
            "Test PaginatedList",
            "Fix issue #33 and add an integration test",
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Remove one argument of Requester.request",
            "Improve test coverage",
            "Improve management of lazy completion",
            "Remove useless code",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/JsonDescriptionOfGithubApiV3/description.000.human_readable.json",
        "commits": [
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Assert types of parameters of methods of Repository and RepositoryKey",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Generate code for parent url",
            "Generate code for url quoting",
            "Reduce differences between generated code and correct code",
            "Do not assert that we know all the attributes we receive",
            "Test PullRequests",
            "Test Team",
            "Improve test coverage",
            "Improve coverage of AuthenticatedUser",
            "Test Issue.getComments",
            "Merge commit 'c93f9cc8484b7' into topic/RewriteWithGeneratedCode  Conflicts: \ttest/IntegrationTest.py",
            "Test Download and CommitComment",
            "Test Authorization",
            "Remove noise in human readable description",
            "Improve test coverage of NamedUser",
            "Test IssueEvent attributes",
            "Test IssueComment",
            "Test Milestone",
            "Test labels (new special case in Repository.get_label...)",
            "Test Gist",
            "Remove completion of Hook",
            "Test Tag attributes",
            "Test attributes of commit comments",
            "Test attributes of NamedUser",
            "Test Issue attributes",
            "Test attributes of Milestone",
            "Remove complete-ability from git objects",
            "Be explicit about complete-ability",
            "Create a GitTreeElement class",
            "Test Organization attributes",
            "Create a class Permissions",
            "Custom url for AuthenticatedUser",
            "Test GitTag attributes",
            "Test GitRef attributes",
            "Test Branch and Commit attributes",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/JsonDescriptionOfGithubApiV3/description.001.normalized.json",
        "commits": [
            "Revert \"Remove one argument of Requester.request\"  We will need it soon for all url parameters not yet used  This reverts commit 9fa4e8ff5e899d1ab0dc927c9213660b7c1c5908.  Conflicts:  \tcodegen/templates/GithubObject.MethodBody.DoRequest.py \t\tsrc/github/Organization.py",
            "Set types of many parameters",
            "Assert types of parameters of methods of Repository and RepositoryKey",
            "Start to assert the type of the arguments",
            "Remove one argument of Requester.request",
            "Fix many attribute types",
            "Generate code for parent url",
            "Generate code for url quoting",
            "Reduce differences between generated code and correct code",
            "Do not assert that we know all the attributes we receive",
            "Test PullRequests",
            "Test Team",
            "Improve test coverage",
            "Improve coverage of AuthenticatedUser",
            "Test Issue.getComments",
            "Test Download and CommitComment",
            "Test Authorization",
            "Improve test coverage of NamedUser",
            "Test IssueEvent attributes",
            "Test IssueComment",
            "Test Milestone",
            "Test labels (new special case in Repository.get_label...)",
            "Test Gist",
            "Remove completion of Hook",
            "Test Tag attributes",
            "Test attributes of commit comments",
            "Test attributes of NamedUser",
            "Test Issue attributes",
            "Test attributes of Milestone",
            "Remove complete-ability from git objects",
            "Be explicit about complete-ability",
            "Create a GitTreeElement class",
            "Test Organization attributes",
            "Create a class Permissions",
            "Custom url for AuthenticatedUser",
            "Test GitTag attributes",
            "Test GitRef attributes",
            "Test Branch and Commit attributes",
            "Move files around"
        ]
    },
    {
        "fileName": "codegen/GenerateCode.py",
        "commits": [
            "Generate code with Unix line endings even on Windows",
            "dos2unix",
            "Generate code for url quoting",
            "Be explicit about complete-ability",
            "Fix code generation and tests after reorganization",
            "Move files around"
        ]
    },
    {
        "fileName": "test/GitObjects.py",
        "commits": [
            "Heavy refactoring of integration tests",
            "Test Download and CommitComment",
            "Test Tag attributes",
            "Test attributes of commit comments",
            "Test Issue attributes",
            "Create a GitTreeElement class",
            "Test Repository.create_git_blob",
            "Reorganize test fixtures",
            "Test Repository.create_git_ref, GitRef.edit and .delete (needs a manual edition of Repository.py)",
            "Re-order tests",
            "Test GitTag attributes",
            "Todo",
            "Test GitRef attributes",
            "Test Branch and Commit attributes",
            "Modularize integration tests"
        ]
    },
    {
        "fileName": "test/MilestonesAndIssues.py",
        "commits": [
            "Heavy refactoring of integration tests",
            "Test Issue.getComments",
            "Test IssueEvent attributes",
            "Test IssueComment",
            "Test Issue",
            "Test Milestone",
            "Test labels (new special case in Repository.get_label...)",
            "Rename some tests",
            "Test Issue attributes",
            "Test attributes of Milestone"
        ]
    },
    {
        "fileName": "test/ReplayData/Branch.testCommitComments.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test attributes of commit comments"
        ]
    },
    {
        "fileName": "test/ReplayData/Branch.testCreateCommitComment.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Branch.testCreateCommitCommentOnFileLine.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Branch.testCreateCommitCommentOnFilePosition.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Branch.testEditCommitComment.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Download.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testCommentAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testDeleteComment.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testEditComment.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/GitBlob.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures"
        ]
    },
    {
        "fileName": "test/ReplayData/GitCommit.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures"
        ]
    },
    {
        "fileName": "test/ReplayData/GitRef.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Repository.create_git_ref, GitRef.edit and .delete (needs a manual edition of Repository.py)"
        ]
    },
    {
        "fileName": "test/ReplayData/GitRef.testCreateEditDelete.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Repository.create_git_ref, GitRef.edit and .delete (needs a manual edition of Repository.py)"
        ]
    },
    {
        "fileName": "test/ReplayData/GitTag.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures"
        ]
    },
    {
        "fileName": "test/ReplayData/GitTree.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures",
            "Rename new tests as only tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Rename some tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testCommentAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test IssueComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testComments.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Test Issue.getComments"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testDeleteComment.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test IssueComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testEditComment.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test IssueComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testEvents.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test IssueEvent attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/Label.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test labels (new special case in Repository.get_label...)"
        ]
    },
    {
        "fileName": "test/ReplayData/Milestone.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Rename some tests"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testAttributesOfSelf.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Test attributes of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Refactor tests of Repository",
            "Test the new Repository.full_name attribute",
            "Restore some form of Authorization header in replay data",
            "Use NoCompletion when creating an object from the result of a request",
            "Reorganize test fixtures",
            "Rename new tests as only tests"
        ]
    },
    {
        "fileName": "test/ReplayData/Tag.testAttributes.txt",
        "commits": [
            "Heavy refactoring of integration tests",
            "Restore some form of Authorization header in replay data",
            "Test Tag attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testContributors.txt",
        "commits": [
            "Refactor tests of Repository",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testPublicEvents.txt",
        "commits": [
            "Refactor tests of NamedUser",
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testEvents.txt",
        "commits": [
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testFollowing.txt",
        "commits": [
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testOrganizations.txt",
        "commits": [
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testPublicReceivedEvents.txt",
        "commits": [
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/NamedUser.testReceivedEvents.txt",
        "commits": [
            "Use setUp in test for NamedUser",
            "Restore some form of Authorization header in replay data",
            "Improve test coverage of NamedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testCreateWithoutDescription.txt",
        "commits": [
            "Improve coverage of AuthenticatedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreateWithAllArguments.txt",
        "commits": [
            "Improve coverage of AuthenticatedUser"
        ]
    },
    {
        "fileName": "test/ReplayData/Authorization.testAttributes.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Authorization"
        ]
    },
    {
        "fileName": "test/ReplayData/Authorization.testCreateWithAllArguments.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Authorization"
        ]
    },
    {
        "fileName": "test/ReplayData/Authorization.testCreateWithoutArguments.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Authorization"
        ]
    },
    {
        "fileName": "test/ReplayData/Branch.testAttributes.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Reorganize test fixtures",
            "Test Branch and Commit attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/Branch.testDeleteCommitComment.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Download.testCreateWithAllArguments.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Download.testCreateWithMinimalArguments.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Download and CommitComment"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testAttributes.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testCreate.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/Gist.testGetAll.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Gist"
        ]
    },
    {
        "fileName": "test/ReplayData/GitBlob.testCreate.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Repository.create_git_blob"
        ]
    },
    {
        "fileName": "test/ReplayData/Hook.testCreateWithAllParameters.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Hooks"
        ]
    },
    {
        "fileName": "test/ReplayData/Hook.testCreateWithMinimalParameters.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Hooks"
        ]
    },
    {
        "fileName": "test/ReplayData/Issue.testCreate.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Issue"
        ]
    },
    {
        "fileName": "test/ReplayData/Label.testCreate.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test labels (new special case in Repository.get_label...)"
        ]
    },
    {
        "fileName": "test/ReplayData/Label.testGetLabelWithSillyName.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test labels (new special case in Repository.get_label...)"
        ]
    },
    {
        "fileName": "test/ReplayData/Milestone.testCreate.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test Milestone"
        ]
    },
    {
        "fileName": "test/ReplayData/Repository.testCreate.txt",
        "commits": [
            "Restore some form of Authorization header in replay data",
            "Test AuthenticatedUser.create_repo (requires manual edition of generated code)"
        ]
    },
    {
        "fileName": "test/ReplayData/Issues.setUp.txt",
        "commits": [
            "Test Issue attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/Issues.testAttributes.txt",
        "commits": [
            "Test Issue attributes"
        ]
    },
    {
        "fileName": "test/ReplayData/Milestones.setUp.txt",
        "commits": [
            "Test attributes of Milestone"
        ]
    },
    {
        "fileName": "test/ReplayData/Milestones.testAttributes.txt",
        "commits": [
            "Test attributes of Milestone"
        ]
    },
    {
        "fileName": "test/Framework/__init__.py",
        "commits": [
            "Test Repository.create_git_ref, GitRef.edit and .delete (needs a manual edition of Repository.py)",
            "Change sys.path to import the development version in tests!",
            "Test Branch and Commit attributes",
            "Modularize integration tests"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/AuthenticatedUserDetails.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/Colaborators.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/CommentCommit.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/CreateForkForOrganization.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/CreateRepoForOrganization.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/CreateRepoForUser.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/Downloads.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/EditAuthenticatedUser.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/EditOrganization.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/EditOrganizationTeamAndMembers.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/Emails.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/Events.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/Follow.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/Gists.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/GistsAll.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/GitObjects.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/GitObjectsAlternative.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/Hooks.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/IssuesAndMilestones.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/IssuesForAuthenticatedUser.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/Keys.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/MergePullRequest.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/NamedUserDetails.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/OrganizationDetails.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/PullRequest.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/RepositoryCompare.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/RepositoryDetails.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/RepositoryKeys.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForIntegrationTest/Watch.txt",
        "commits": [
            "Remove old tests",
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GenerateReferenceOfApis.py",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "src/github/GenerateReferenceOfClasses.py",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/NewIntegrationTest.py",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForNewIntegrationTest/AuthenticatedUser.testAttributes.txt",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForNewIntegrationTest/AuthenticatedUser.testEditWithAllArguments.txt",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForNewIntegrationTest/AuthenticatedUser.testEditWithoutArguments.txt",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForNewIntegrationTest/GitBlob.setUp.txt",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForNewIntegrationTest/GitCommit.setUp.txt",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForNewIntegrationTest/GitTree.setUp.txt",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForNewIntegrationTest/GitTree.testAttributes.txt",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForNewIntegrationTest/Repository.setUp.txt",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "test/ReplayDataForNewIntegrationTest/Repository.testAttributes.txt",
        "commits": [
            "Move files around"
        ]
    },
    {
        "fileName": "CodeGenerator/templates/GithubObject.py",
        "commits": [
            "Separate asserts on type and assignments of values of attributes",
            "More assertions",
            "Structure some attributes",
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Fix testEvents",
            "Restore pagination",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Refactor templates",
            "Put private methods after public ones",
            "Fix testColaborators (add_element, remove_element, has_element)",
            "Do not assume void methods are mutating the object",
            "Fix attributes of complex type => fix testNamedUserDetails!",
            "Fix references to current class",
            "Fix completion and lazyness",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Small refactoring on lazy completion",
            "GithubObject.__complete",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "github/GithubObjects/GitAuthor.py",
        "commits": [
            "Remove completion functions from GitAuthor",
            "Add a GitAuthor class"
        ]
    },
    {
        "fileName": "JsonDescriptionOfGithubApiV3/description.000.human_readable.json",
        "commits": [
            "Structure some attributes",
            "Add a GitAuthor class",
            "Fix urls for git objects",
            "Test attributes of GitTree (needs a manual change in url in Repository.get_git_tree)",
            "Check types of received attributes",
            "Add a Plan class",
            "Repository.get_languages => fix testRepositoryDetails",
            "Fix testRepositoryCompare",
            "Fix testKeys",
            "Fix testIssuesForAuthenticatedUser",
            "Fix testGists",
            "Remove underscores in keys in description, to allow hunting underscores in values",
            "Simplify definition of list types",
            "Fix testEvents",
            "Fix testGistsAll, improve testEvents",
            "Pass url parameters to __requester.request => Fix testCreateForkForOrganization",
            "Restore some tests and explain why others are failing",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Fix some tests (create_fork)",
            "Refactor templates",
            "Reduce human readable description",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "JsonDescriptionOfGithubApiV3/description.001.normalized.json",
        "commits": [
            "Structure some attributes",
            "Add a GitAuthor class",
            "Fix urls for git objects",
            "Test attributes of GitTree (needs a manual change in url in Repository.get_git_tree)",
            "Check types of received attributes",
            "Add a Plan class",
            "Repository.get_languages => fix testRepositoryDetails",
            "Fix testRepositoryCompare",
            "Fix testKeys",
            "Fix testIssuesForAuthenticatedUser",
            "Fix testGists",
            "Remove underscores in keys in description, to allow hunting underscores in values",
            "Fix testEvents",
            "Fix testGistsAll, improve testEvents",
            "Pass url parameters to __requester.request => Fix testCreateForkForOrganization",
            "Restore some tests and explain why others are failing",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Fix testDownloads (get_element)",
            "Fix some tests (create_fork)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Refactor templates",
            "Fix testColaborators (add_element, remove_element, has_element)",
            "Do not assume void methods are mutating the object",
            "Temporary hack for get_repos",
            "Reduce human readable description",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "NewIntegrationTest.py",
        "commits": [
            "Structure some attributes",
            "Add a GitAuthor class",
            "Test attributes of GitCommit",
            "Re-order tests",
            "Test GitBlob attributes",
            "Remove more code again",
            "Standardize detection of replay problems",
            "Further simplify record mode",
            "Explanation about a todo",
            "Test attributes of GitTree (needs a manual change in url in Repository.get_git_tree)",
            "Test attributes of Repository",
            "Use a small eval instead of a big exec",
            "Add a Plan class",
            "Ensure that recorded calls are all replayed",
            "Cover AuthenticatedUser.edit",
            "Fix recording",
            "First recording for new integration tests",
            "Improve coverage",
            "Start to rewrite integration test",
            "NewIntegrationTest -> IntegrationTest",
            "Gists",
            "CreateRepo",
            "testIssuesAndMilestones",
            "Coverage",
            "More NamedUser coverage",
            "Reorder integration test",
            "Emails",
            "Git objects",
            "CreateForkForOrganization",
            "Integration test",
            "Test UserKey",
            "Watching and Following",
            "Organization.edit",
            "Analyse integration test coverage. Improve coverage of Organization",
            "More integration test",
            "More integration test",
            "Do not break the integration test if some test was never recorded",
            "On the way to modular integration test"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/GitCommit.setUp.txt",
        "commits": [
            "Test attributes of GitCommit"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/GitBlob.setUp.txt",
        "commits": [
            "Test GitBlob attributes"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/GitTree.setUp.txt",
        "commits": [
            "Test attributes of GitTree (needs a manual change in url in Repository.get_git_tree)"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/GitTree.testAttributes.txt",
        "commits": [
            "Test attributes of GitTree (needs a manual change in url in Repository.get_git_tree)"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/AuthenticatedUser.testAttributes.txt",
        "commits": [
            "Test attributes of Repository"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/AuthenticatedUser.testEditWithAllArguments.txt",
        "commits": [
            "Test attributes of Repository"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/AuthenticatedUser.testEditWithoutArguments.txt",
        "commits": [
            "Test attributes of Repository"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/Repository.setUp.txt",
        "commits": [
            "Test attributes of Repository"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/Repository.testAttributes.txt",
        "commits": [
            "Test attributes of Repository"
        ]
    },
    {
        "fileName": "github/GithubObjects/Plan.py",
        "commits": [
            "Check types of received attributes",
            "Do not try to __complete objects without url",
            "Add a Plan class"
        ]
    },
    {
        "fileName": "GenerateCode.py",
        "commits": [
            "Do not try to __complete objects without url",
            "Refactor templates",
            "Dependencies => restore testAuthenticatedUserDetails!",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/AuthenticatedUser.EditWithAllArguments.txt",
        "commits": [
            "Cover AuthenticatedUser.edit"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/AuthenticatedUser.EditWithoutArguments.txt",
        "commits": [
            "Cover AuthenticatedUser.edit"
        ]
    },
    {
        "fileName": "ReplayDataForNewIntegrationTest/AuthenticatedUser.Attributes.txt",
        "commits": [
            "Fix recording",
            "First recording for new integration tests",
            "Start to rewrite integration test"
        ]
    },
    {
        "fileName": "CodeGenerator/templates/GithubObject.MethodBody.UseResult.py",
        "commits": [
            "Fix testRepositoryCompare",
            "Remove underscores in keys in description, to allow hunting underscores in values",
            "Restore pagination",
            "Restore some tests and explain why others are failing",
            "Simplify",
            "Refactor templates"
        ]
    },
    {
        "fileName": "JsonDescriptionOfGithubApiV3/normalize.py",
        "commits": [
            "Fix testGists",
            "Remove underscores in keys in description, to allow hunting underscores in values",
            "Simplify definition of list types",
            "Fix testEvents",
            "Restore some tests and explain why others are failing",
            "Fix testEditOrganizationTeamAndMembers (Use _identity to fix has_in_, add_to_, remove_from_)",
            "Fix testDownloads (get_element)",
            "Fix testCommentCommit (create_xxx, delete, edit)",
            "Fix testColaborators (add_element, remove_element, has_element)",
            "Do not assume void methods are mutating the object",
            "Temporary hack for get_repos",
            "Reduce human readable description",
            "GithubObject.edit => restore testEditAuthenticatedUser",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "CodeGenerator/templates/GithubObject.MethodBody.DoRequest.py",
        "commits": [
            "Remove underscores in keys in description, to allow hunting underscores in values",
            "Pass url parameters to __requester.request => Fix testCreateForkForOrganization",
            "Restore some tests and explain why others are failing",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "Simplify",
            "Refactor templates"
        ]
    },
    {
        "fileName": "CodeGenerator/templates/GithubObject.Parameters.py",
        "commits": [
            "Remove underscores in keys in description, to allow hunting underscores in values",
            "Allow None as a valid value for an optional parameter (fix testEditOrganization)",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "CodeGenerator/templates/ReferenceOfClasses.Parameters.md",
        "commits": [
            "Remove underscores in keys in description, to allow hunting underscores in values",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "CodeGenerator/templates/ReferenceOfClasses.md",
        "commits": [
            "Remove underscores in keys in description, to allow hunting underscores in values",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "github/GithubObjects/PaginatedList.py",
        "commits": [
            "Fix testGistsAll, improve testEvents",
            "Restore pagination"
        ]
    },
    {
        "fileName": "CodeGenerator/templates/GithubObject.Concatenation.py",
        "commits": [
            "Fix testDownloads (get_element)",
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "CodeGenerator/templates/ReferenceOfClasses.Type.md",
        "commits": [
            "On the way to code generation instead of meta-description  (lots of useless eratic history squashed together in one commit)"
        ]
    },
    {
        "fileName": "ReferenceOfApis.md",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/Recomplete' into develop",
            "NamedUser.create_gist",
            "GitRef.delete",
            "Merge branch 'topic/GenerateReferenceOfApis' into develop",
            "GenerateReferenceOfApis.py",
            "Normalize ReferenceOfApis.md",
            "Merge branch 'develop'",
            "Publish version 0.5",
            "Merge branch 'topic/CompleteImplementation' into develop",
            "Repository.compare",
            "AuthenticatedUser.get_issues",
            "Repository.get_git_tree with 'recursive'",
            "Optional parameter for Repository.create_git_tree",
            "On the way to alternative inputs. Still needs unit and integration testing",
            "Merge branch 'develop'",
            "Merge branch 'topic/MergeMergeRequest' into develop",
            "PullRequest.is_merged and PullRequest.merge",
            "Merge branch 'topic/AddHooksAndEvents' into develop",
            "AuthenticatedUser.get_organization_events",
            "Repository.get_issues_event + coverage",
            "Events: step 1",
            "Regenerate reference of classes",
            "Hooks: step 1",
            "Todos for hooks and events",
            "Merge branch 'topic/AddAuthorizationsAndKeys' into develop",
            "RepositoryKey: first step",
            "UserKey: step 1",
            "Authorizations: step 1",
            "Todos for authorizations and keys",
            "Merge branch 'topic/AddGists' into develop",
            "Gists",
            "Todos for gists",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/AddPullRequests' into develop",
            "Postpone merge of pull requests",
            "Pull/merge requests",
            "Todos for pull requests",
            "De-duplicate documentation",
            "Merge branch 'topic/FinishRepository' into develop",
            "Postpone /repos/:user/:repo/compare/:base...:head",
            "Repository: tags, branches, commits  I had to rework pagination because it does not work as documented",
            "Repository.xxx_download",
            "/issues has nothing to do in this topic branch",
            "Repository.get_languages",
            "Todos to finish Repository",
            "Merge branch 'topic/FinishUser' into develop",
            "AuthenticatedUser.xxx_emails",
            "Todos to finish User",
            "Merge branch 'topic/AddIssues' into develop",
            "IssueComment",
            "Issue.xxx_labels",
            "Repository issues",
            "Milestone.get_labels",
            "Postpone events",
            "Labels",
            "Milestones",
            "Todos for issues",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/AddTeamObject' into develop",
            "Add Team object",
            "Todo for Team",
            "Merge branch 'topic/AddGitObjects' into develop",
            "Postpone GitTree.create_update and /repos/:user/:repo/git/trees/:sha?recursive=1",
            "Repository.create_git_tag and .get_git_tag",
            "Repository.get_git_blob (and .create_git_blob, not tested)",
            "Repository.get_git_tree (and .create_git_tree, not tested)",
            "Repository.get_git_commit (and .create_git_commit, not tested)",
            "Repository.get_git_ref",
            "Add GitRef",
            "Todos for git objects",
            "Todos for git objects",
            "Adapt documentation for vincent-jacques.net"
        ]
    },
    {
        "fileName": "github/GenerateReferenceOfApis.py",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/GenerateReferenceOfApis' into develop",
            "GenerateReferenceOfApis.py"
        ]
    },
    {
        "fileName": "github/GenerateDocumentation.py",
        "commits": [
            "Merge branch 'develop'",
            "Publish version 0.5",
            "Fix documentation",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Make sure only three class definitions are distributed",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/DocumentationGeneration' into develop",
            "Improve documentation generation",
            "Experiment with auto-documentation"
        ]
    },
    {
        "fileName": "github/GithubObjects.py",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Spliting GithubObjects.py",
            "Remove todos, add them as github.com issues",
            "Merge branch 'develop'",
            "Merge branch 'topic/FixBaseUrl' into develop",
            "Fix bug: _baseUrl is now a method  This handles modification of attributes creating the base url",
            "Merge branch 'topic/MergeMergeRequest' into develop",
            "PullRequest.is_merged and PullRequest.merge",
            "Merge branch 'topic/AddHooksAndEvents' into develop",
            "AuthenticatedUser.get_organization_events",
            "Repository.get_issues_event + coverage",
            "Remove two 'MethodFromCallable'",
            "Fix and add integration tests about events",
            "Events: step 1",
            "Hook testing",
            "Hooks: step 2",
            "Hooks: step 1",
            "Merge branch 'topic/Coverage' into develop",
            "RepositoryKeys",
            "Commit comments",
            "Merge branch 'topic/SplitIntegrationTests' into develop",
            "Gists",
            "testIssuesAndMilestones",
            "Git objects",
            "Test UserKey",
            "Merge branch 'topic/AddAuthorizationsAndKeys' into develop",
            "Keys: step 2",
            "Authorizations: step 2",
            "RepositoryKey: first step",
            "UserKey: step 1",
            "Authorizations: step 1",
            "Merge branch 'topic/AddGists' into develop",
            "Gists",
            "Typo",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/AddPullRequests' into develop",
            "Pull/merge requests",
            "Merge branch 'topic/FixBugWithRepositoryOwner' into develop",
            "Fix bug with repository owner when owner is AuthenticatedUser",
            "Merge branch 'topic/DocumentationGeneration' into develop",
            "Improve documentation generation",
            "Improve documentation generation",
            "Improve documentation generation",
            "Improve documentation generation",
            "Move things around",
            "Merge branch 'topic/RefactorList' into develop",
            "Apply attributeModifiers to ElementGetable too",
            "Replace modifyAttributes by attributeModifiers",
            "On the way to remove modifyAttributes from ElementCreatable and ListGetable",
            "Explicit arguments in ElementGetable",
            "Merge branch 'topic/RefactorLists' into develop",
            "Put the singular name in ExternalListOfXxx instead of list capacities",
            "Merge branch 'topic/FinishRepository' into develop",
            "Repository: tags, branches, commits  I had to rework pagination because it does not work as documented",
            "Repository.xxx_download",
            "Repository.get_languages",
            "Merge branch 'topic/FinishUser' into develop",
            "AuthenticatedUser.xxx_emails",
            "Merge branch 'topic/Refactor' into develop",
            "SeveralElementsAddable and SeveralElementsRemovable",
            "Rename",
            "Naming",
            "Merge branch 'topic/AddIssues' into develop",
            "IssueComment",
            "Issue.xxx_labels",
            "Repository issues",
            "Milestone.get_labels",
            "Labels",
            "Milestones",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/AddTeamObject' into develop",
            "Fix after rebase",
            "Add team attributes, edit parameters, and links in reference documentation",
            "Fix create_teams -> create_team",
            "Add Team object",
            "Merge branch 'topic/AddGitObjects' into develop",
            "Repository.create_git_tag and .get_git_tag",
            "Repository.get_git_blob (and .create_git_blob, not tested)",
            "Repository.get_git_tree (and .create_git_tree, not tested)",
            "Repository.get_git_commit (and .create_git_commit, not tested)",
            "Fix after rebase",
            "Edit `GitRef`s returned but `get_git_refs` or `create_git_ref`",
            "Use Creatable",
            "Repository.get_git_ref",
            "Add GitRef",
            "Merge branch 'topic/ModularLists' into develop",
            "ListOfObjects -> ListAttribute",
            "Remove ListOfReferences",
            "Refactor",
            "Refactor",
            "Remove default ListGetable capacity from lists",
            "Lists with ElementGetable capacity",
            "Merge branch 'topic/CreateWithCheckedPositionalArguments' into develop",
            "Improve arguments checking for create_xxx and edit",
            "Merge branch 'topic/GetObjectFromIdentity' into develop",
            "Implement Owner.get_repo as an ObjectGetter",
            "Improve coverage, fix bugs",
            "Add unit tests for requests",
            "A NamedUser can indeed be the authenticated user",
            "AuthenticatedUser and Organization.create_fork",
            "create_repo -> create_repo",
            "AuthenticatedUser. and Organization.create_repos",
            "AuthenticatedUser., NamedUser. and Organization.get_repo",
            "Rework naming",
            "Organization.has_in_members, .has_in_public_members, Repository.has_in_collaborators, AuthenticatedUser.has_in_following, .has_in_watched",
            "Repository.add_collaborators and .remove_collaborators",
            "Organization.remove_members, .add_public_members and .remove_public_members",
            "AuthenticatedUser.add_watched and .remove_watched",
            "AuthenticatedUser.add_following and .remove_following",
            "Repository.edit",
            "Organization.edit",
            "User.edit",
            "Repository.get_collaborators, .get_contributors, .get_watchers, .get_forks",
            "Organization.get_repos",
            "User.get_followers and .get_following",
            "User.get_orgs",
            "User.get_watched",
            "Add private attributes of Organization",
            "Add organizations",
            "ExtendedScalarAttributes in Repository"
        ]
    },
    {
        "fileName": "github/ObjectCapacities/__init__.py",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/MoveGithubObjects' into develop",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/ModularLists' into develop",
            "Refactor"
        ]
    },
    {
        "fileName": "github/GithubObjects/ObjectCapacities/__init__.py",
        "commits": [
            "Move GithubObject",
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/GithubObject.UnitTest.py",
        "commits": [
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/GithubObject.py",
        "commits": [
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/ObjectCapacities/ArgumentsChecker.py",
        "commits": [
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/ObjectCapacities/Basic.py",
        "commits": [
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/ObjectCapacities/List.py",
        "commits": [
            "Move classes around"
        ]
    },
    {
        "fileName": "github/GithubObjects/ObjectCapacities/TypePolicies.py",
        "commits": [
            "Move classes around"
        ]
    },
    {
        "fileName": "github/PullRequestFile.py",
        "commits": [
            "Merge branch 'topic/SplitGithubObjects' into develop",
            "Spliting GithubObjects.py"
        ]
    },
    {
        "fileName": "github/ObjectCapacities/Basic.py",
        "commits": [
            "Remove todos, add them as github.com issues",
            "Publish version 0.4",
            "Merge branch 'develop'",
            "Merge branch 'topic/FixBaseUrl' into develop",
            "Fix bug: _baseUrl is now a method  This handles modification of attributes creating the base url",
            "Merge branch 'topic/RestoreTestCoverage' into develop",
            "Restore test coverage",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/DocumentationGeneration' into develop",
            "Improve documentation generation",
            "Improve documentation generation",
            "Improve documentation generation",
            "Experiment with auto-documentation",
            "Experiment with auto-documentation",
            "Merge branch 'topic/FinishRepository' into develop",
            "Repository.get_languages",
            "Merge branch 'topic/Refactor' into develop",
            "Use type policies in ExternalListOfObjects",
            "Rename",
            "Todos",
            "Reorganize",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/ModularLists' into develop",
            "Refactor"
        ]
    },
    {
        "fileName": "github/ObjectCapacities/List.py",
        "commits": [
            "Remove todos, add them as github.com issues",
            "Merge branch 'develop'",
            "Merge branch 'topic/FixBaseUrl' into develop",
            "Fix bug: _baseUrl is now a method  This handles modification of attributes creating the base url",
            "Merge branch 'topic/RestoreTestCoverage' into develop",
            "Restore test coverage",
            "Merge branch 'topic/AddGists' into develop",
            "Gists",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/DocumentationGeneration' into develop",
            "Improve documentation generation",
            "Improve documentation generation",
            "Improve documentation generation",
            "Improve documentation generation",
            "Experiment with auto-documentation",
            "Experiment with auto-documentation",
            "Merge branch 'topic/RefactorList' into develop",
            "Re-layout code",
            "Apply attributeModifiers to ElementGetable too",
            "Replace modifyAttributes by attributeModifiers",
            "On the way to remove modifyAttributes from ElementCreatable and ListGetable",
            "Explicit arguments in ElementGetable",
            "Merge branch 'topic/RefactorLists' into develop",
            "Put the singular name in ExternalListOfXxx instead of list capacities",
            "Merge branch 'topic/Refactor' into develop",
            "SeveralElementsAddable and SeveralElementsRemovable",
            "Use type policies in ExternalListOfObjects",
            "Rename",
            "Refactor: ExternalListOfObjects -> SeveralAttributes",
            "Refactor",
            "Refactor",
            "Refactor",
            "Todos",
            "Rename",
            "Reorganize",
            "Merge branch 'topic/AddIssues' into develop",
            "Issue.xxx_labels",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/AddGitObjects' into develop",
            "Fix after rebase",
            "Edit `GitRef`s returned but `get_git_refs` or `create_git_ref`",
            "Add GitRef",
            "Merge branch 'topic/ModularLists' into develop",
            "ListOfObjects -> ListAttribute",
            "Remove ListOfReferences",
            "Refactor unit-tests",
            "Refactor",
            "Refactor",
            "Refactor",
            "Refactor",
            "Remove default ListGetable capacity from lists",
            "Lists with ElementGetable capacity",
            "Refactor"
        ]
    },
    {
        "fileName": "github/GithubObject.UnitTest.py",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/FixBaseUrl' into develop",
            "Add a unit test with a changing _baseUrl",
            "Fix bug: _baseUrl is now a method  This handles modification of attributes creating the base url",
            "Merge branch 'topic/RestoreTestCoverage' into develop",
            "Restore test coverage",
            "Merge branch 'topic/SplitIntegrationTests' into develop",
            "testIssuesAndMilestones",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/DocumentationGeneration' into develop",
            "Improve documentation generation",
            "Improve documentation generation",
            "Improve documentation generation",
            "Merge branch 'topic/RefactorList' into develop",
            "Re-layout code",
            "Explicit arguments in ElementGetable",
            "Merge branch 'topic/RefactorLists' into develop",
            "Put the singular name in ExternalListOfXxx instead of list capacities",
            "Merge branch 'topic/FinishRepository' into develop",
            "Repository.get_languages",
            "Merge branch 'topic/Refactor' into develop",
            "SeveralElementsAddable and SeveralElementsRemovable",
            "Rename",
            "Rename",
            "Remove useless ObjectGetter  It was replaced by ListOfObjects with ElementGetable some time ago",
            "Naming",
            "Merge branch 'topic/AddIssues' into develop",
            "Restore test coverage",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/ModularLists' into develop",
            "ListOfObjects -> ListAttribute",
            "Refactor unit-tests",
            "Refactor unit-tests",
            "Refactor",
            "Remove default ListGetable capacity from lists",
            "Lists with ElementGetable capacity",
            "Merge branch 'topic/CreateWithCheckedPositionalArguments' into develop",
            "Improve arguments checking for create_xxx and edit",
            "Merge branch 'topic/GetObjectFromIdentity' into develop",
            "Implement Owner.get_repo as an ObjectGetter",
            "ObjectGetter",
            "Add type parameter to get_repos",
            "Improve coverage, fix bugs",
            "Add unit tests for requests",
            "ListOfObjects",
            "MethodFromCallable",
            "dos2unix",
            "Rework naming",
            "Implement has_in_ for extended list attributes",
            "Fix return values in unit tests. Be explicit about data and status expectations",
            "add_, remove_ -> add_to_, remove_from_",
            "Restore unit tests",
            "AuthenticatedUser.add_following and .remove_following",
            "Use status requests for DELETE",
            "Use a real identity attribute instead of ugly hack",
            "Prepare for requests interrested only in headers",
            "PUT and DELETE list elements",
            "Implement extended scalar attribute",
            "Small refactoring",
            "Implement list of objects as attributes",
            "Improve dir( GithubObject )",
            "Privatize Github.rawRequest",
            "Use real base url",
            "Delete objects",
            "Split tests",
            "Acknowledge attributes returned by PATH",
            "Implement checks in edit",
            "On the way to edit-able objects",
            "Test non-lazy construction",
            "Remember that some values are not fetchable",
            "Fetch attribute values",
            "Handle simple scalar attributes in constructor",
            "Comeback of GithubObject",
            "First skeleton"
        ]
    },
    {
        "fileName": "github/ObjectCapacities/TypePolicies.py",
        "commits": [
            "Merge branch 'develop'",
            "Merge branch 'topic/RestoreTestCoverage' into develop",
            "Restore test coverage",
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/DocumentationGeneration' into develop",
            "Improve documentation generation",
            "Experiment with auto-documentation",
            "Merge branch 'topic/RefactorList' into develop",
            "Explicit arguments in ElementGetable",
            "Merge branch 'topic/Refactor' into develop",
            "SeveralElementsAddable and SeveralElementsRemovable",
            "Use type policies in ExternalListOfObjects",
            "Reorganize"
        ]
    },
    {
        "fileName": "Design.md",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/Refactor' into develop",
            "Refactor attribute definition",
            "Documentation",
            "Doc",
            "Doc",
            "dos2unix",
            "add_, remove_ -> add_to_, remove_from_",
            "Initiate a rewrite"
        ]
    },
    {
        "fileName": "github/ObjectCapacities/ArgumentsChecker.py",
        "commits": [
            "Merge branch 'develop'  Conflicts: \tsetup.py",
            "Merge branch 'topic/DocumentationGeneration' into develop",
            "Experiment with auto-documentation",
            "Merge branch 'topic/Refactor' into develop",
            "dos2unix",
            "Merge branch 'develop' into release/v0.2",
            "Merge branch 'topic/ModularLists' into develop",
            "Refactor",
            "Remove default ListGetable capacity from lists"
        ]
    },
    {
        "fileName": "github/GenerateDocumentation.UnitTest.py",
        "commits": [
            "Improve documentation generation",
            "Experiment with auto-documentation"
        ]
    },
    {
        "fileName": "github/TypePolicies.py",
        "commits": [
            "Reorganize"
        ]
    },
    {
        "fileName": "github/ArgumentsChecker.py",
        "commits": [
            "Refactor"
        ]
    },
    {
        "fileName": "github/BasicObjectCapacities.py",
        "commits": [
            "Refactor"
        ]
    },
    {
        "fileName": "CheeseShopDescription.rst",
        "commits": [
            "Publish version 0.1",
            "Upload to the Python Package Index"
        ]
    },
    {
        "fileName": "Reference.md",
        "commits": [
            "Adapt documentation for vincent-jacques.net",
            "Add type parameter to get_repos",
            "Documentation",
            "Documentation",
            "Remove trailing spaces",
            "Documentation",
            "Documentation",
            "RoadMap",
            "AuthenticatedUser and Organization.create_fork",
            "create_repo -> create_repo",
            "Reference",
            "AuthenticatedUser. and Organization.create_repos",
            "AuthenticatedUser., NamedUser. and Organization.get_repo",
            "Organization.has_in_members, .has_in_public_members, Repository.has_in_collaborators, AuthenticatedUser.has_in_following, .has_in_watched",
            "add_, remove_ -> add_to_, remove_from_",
            "Repository.add_collaborators and .remove_collaborators",
            "Organization.remove_members, .add_public_members and .remove_public_members",
            "Priorities in TODOs",
            "AuthenticatedUser.add_watched and .remove_watched",
            "AuthenticatedUser.add_following and .remove_following",
            "Documentation",
            "Repository.edit",
            "Organization.edit",
            "User.edit",
            "Typo",
            "Repository.get_collaborators, .get_contributors, .get_watchers, .get_forks",
            "Organization.get_repos",
            "User.get_followers and .get_following",
            "User.get_orgs",
            "User.get_watched",
            "Acknowledge what has been done in reference",
            "Reset TODOs on reference",
            "Initiate a rewrite"
        ]
    },
    {
        "fileName": "github/User.py",
        "commits": [
            "Repository",
            "Retrieve user by login",
            "First integration test"
        ]
    }
]