Fix parameter order according to Version 2.1.0 (#2786)  Version 2.1.0 introduced a breaking change to the `Repository.create_pull` method. This PR updates the example provided in the docs: https://pygithub.readthedocs.io/en/latest/examples/PullRequest.html#create-a-new-pull-request
Add missing GitHub classes to docs (#2783)
Fix mypy error with urllib3>=2.0.0a1 by ignoring (#2779)
Release 2.1.1 (#2777)
Fix rst format in `doc/changes.rst` (#2776)
Require urllib 1.26.0 or greater (#2774)
"Fix pypi-release workflow, allow for manual run (#2771)"
Release 2.1.0 (#2770)
Merge `StatsContributor.pyi` back to source (#2761)
Merge `Repository.pyi` back to source (#2749)
Merge `github/Organization.pyi` back to source (#2744)
Merge `PullRequest.pyi` back to source (#2743)
Merge `MainClass.pyi` and `__init__.pyi` back to source (#2692)
Make Branch.edit_* functions return objects (#2748)
Close replay test data file silently when test is failing already (#2747)
Add `license` attribute to `Repository` (#2721)
Merge `NamedUser.pyi` back to source (#2691)
Merge `Team.pyi` back to source (#2690)
Merge `GithubIntegration.pyi` back to source (#2689)
Merge `GitRelease.pyi` back to source (#2688)
Add missing attributes to `Repository`  (#2742)
Add `is_alphanumeric` attribute to Autolink and `Repository.create_autolink` (#2630)
Merge `WorkflowJob` type stub back to source (#2653)
Merge `GistFile` type stub back to source (#2651)
Close connections after use (#2724)
Merge `Deployment.pyi` back to source (#2687)
Merge `Workflow.pyi` back to source (#2686)
Merge `GistHistoryState.pyi` back to source (#2685)
Merge `IssueEvent` type stub back to source (#2684)
Merge `Download` type stub back to source (#2683)
Merge `Milestone` type stub back to source (#2682)
Merge `PullRequestComment` type stub back to source (#2681)
Merge `Hook` type stub back to source (#2680)
Merge `ProjectColumn` type stub back to source (#2679)
Merge `TeamDiscussion` type stub back to source (#2678)
Merge `Project` type stub back to source (#2677)
Merge `ProjectCard` type stub back to source (#2676)
Merge `Notification` type stub back to source (#2675)
Merge `IssueComment` type stub back to source (#2674)
Merge `Migration` type stub back to source (#2673)
Merge `GitReleaseAsset` type stub back to source (#2672)
Merge `GithubApp` type stub back to sourcce (#2671)
Merge `DeploymentStatus` type stub back to source (#2665)
Merge `TimelineEvent` type stub back to source (#2664)
Merge `PullRequestReview` type stub back to source (#2662)
Merge `Event` type stub back to source (#2660)
Merge `GistComment` type stub back to source (#2657)
Merge `Gist` type stub back to source (#2655)
"Suppress `requests` fallback to netrc, provide `github.Auth.Netrc` (#2739)"
fix required_conversation_resolution assertion (#2715)
Make CI support merge queue (#2644)
Pass Requester arguments to `AppInstallationAuth.__integration` (#2695)
Fix assertion creating pull request review comment (#2641)
Run CI on release branches (#2708)
CI: remove conflict label workflow (#2669)
Fix pip install command in README.md (#2731)
Merge `SourceImport` type stub back to source (#2663)
Merge `Topic` type stub back to source (#2661)
Merge `License` type stub back to source (#2659)
Merge `File` type stub back to source (#2658)
Merge `RepositoryKey` type stub back to source (#2656)
Merge `Label` type stub back to source (#2652)
Merge `Installation` type stub back to source (#2649)
Merge `PullRequestMergeStatus` type stub back to source (#2646)
Merge some type stub back to source (#2650)
Merge `Permissions` type stub back to source (#2648)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge `RequiredStatusChecks` type stub back to source (#2647)
Merge `Referrer` type stub back to source (#2645)
Adding feature for enterprise consumed license (#2626)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Search Workflows by Name (#2711)
Add Secret and Variable classes (#2623)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge `StatsCodeFrequency` type stub back to source (#2638)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge Plan type stub back to source (#2637)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge ContentFile type stub back to source (#2635)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
CommitComment (#2634)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Add Autolink API link (#2632)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Update `add_attribute.py` to latest conding style (#2631)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Safely coerce responseHeaders to int (#2697)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
CI: Improve ruff DX (#2667)
Fix assertion for subject_type in creating pull request review comment (#2642)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
CI: Increase wait and retries of labels action (#2670)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Replace `flake8` with `ruff` (#2617)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
CI: update labels action name and version (#2654)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
CI: label PRs that have conflicts (#2622)
Merge type stub bask to source: `Comparison` `CommitStatus` `CommitCombinedStatus` (#2633)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge `Commit.pyi` back to source (#2616)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge `Code*` type stub back to source (#2615)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge `CheckSuite` type stub back to source (#2606)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge `CheckRun` type stub back to source (#2605)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Add required_linear_history attribute to BranchProtection (#2643)  Co-authored-by: Jacob Beard <jake@minnow.io> Co-authored-by: Paul Melnikow <github@paulmelnikow.com>
Unify requirements files location & source in setup.py (#2598)  Co-authored-by: Trim21 <trim21.me@gmail.com>
Merge `AuthenticatedUser` type stubs back to source (#2577)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge Path type stub back to source (#2639)
Enable mypy `disallow_untyped_defs` (#2609)
Enable mypy `check_untyped_defs` (#2607)
Set line length to 120 characters (#2599)
"Add retry issue to GithubException, don't log it (#2611)"
Merge some simple class' type stubs back to source (#2570)
Merge some simple classes' type stubs back to source  (#2576)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Add `message` property to `GithubException` (#2591)
Add support for repo and org level actions variables (#2580)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
"Add missing arguments to Workflow.get_runs() (#2346)  Adds missing arguments created, exclude_pull_requests, head_sha to the query options of Workflow.get_runs()."
CI: Build and check package before release (#2593)
Merge `Issue.pyi` back to source (#2568)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Use timezone-aware reset datetime in GithubRetry.py (#2610)  Co-authored-by: Patryk Szulczyk <patryk.szulczyk@skyscanner.net> Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Use `typing_extensions` for `TypedDict` (#2592)
Merge `WorkflowRun` type stub back to source (#2554)
Merge `ApplicationOAuth.pyi` back to source (#2569)
CI: Update action actions/setup-python (#2382)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Add more methods and attributes to Repository.pyi (#2581)
Add github.Rate.used field (#2531)  Co-authored-by: Nikolay Yurin <yurinnick@meta.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>
"Merge `Branch` type stubs back to source (#2571)  Introduces new helper methods `is_defined`, `is_undefined`, `is_optional`, `is_optional_list` that is going to simplify input assertions in all our methods.  Co-authored-by: Enrico Minack <github@enrico.minack.dev>"
CI: Make pytest color logs (#2597)
precommit: move `flake8` as last (#2595)
"Test on Windows and macOS, don't fail fast (#2590)  Co-authored-by: Jirka Borovec <6035284+Borda@users.noreply.github.com>"
Publish version 2.0.0 (#2583)
Remove symlinks from test data (#2588)
Add myself to funding (#2585)
"Fix `Branch.bypass_pull_request_allowances` failing with ""nil is not an object"" (#2535)  Signed-off-by: Thomas Devoogdt <thomas@devoogdt.com>"
Make datetime objects timezone-aware (#2565)  Comparing timestamps returned by the API with naive datetime objects (without timezone information) will raise an error. Add `tzinfo=datetime.timezone.utc` to your datetime instance.  Co-authored-by: John T. Wodder II <git@varonathe.org>
"Throttle requests to mitigate RateLimitExceededExceptions (#2145)  This introduces a throttling of requests to the Github REST API (1s for writes, 0.25s for reads, configurable) to mitigate secondary rate limit errors and comply with Github's best practices:  https://docs.github.com/en/rest/guides/best-practices-for-integrators?apiVersion=2022-11-28#dealing-with-secondary-rate-limits"
Retry retryable 403 (rate limit) (#2387)
Force Unix EOL (#2573)
Merge `Artifact` type stub back to source (#2553)
Move to main default branch (#2566)
Release 1.59.0 (#2563)
Test and fix UTC issue with AppInstallationAuth (#2561)
Add type stub for MainClass.get_project_column (#2502)  Co-Authored: Attila Dulovics <dulovicsattila@gmail.com>
Sync GithubIntegration __init__ arguments with github.Github (#2556)  Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).
Update MAINTAINERS (#2545)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
"Link to stable docs, update introduction in package used by pypi, move auth arg front (#2557)"
Add Webhook Deliveries (#2508)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Add support for workflow jobs and steps (#1951)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Merge PaginatedList.pyi back to source (#2555)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
merge GithubObject.pyi/Requester.pyi stubs back to source (#2463)  Co-authored-by: Enrico Minack <github@enrico.minack.dev> Co-authored-by: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>
"Add support for get_app() with App authentication (#2549)  Moves `Github.get_app()` called without `slug` parameter into `GithubIntegration`, because it needs an `AppAuth`, and we collect all such endpoints there. Calling `Github.get_app()` without `slug` parameter is now deprecated.  Replaces `datetime.utcnow()` with `datetime.now(timezone.utc)`, as it is deprecated in Python 3.12."
"Allow multiline comments in PullRequest (#2540)  - change deprecated parameter position to line - add a parameter to allow multiline comment: start_line - add a parameter to allow comment as suggestion: as_suggestion - add more missing parameters: side, start_side, in_reply_to, subject_type"
[CI] Moving linting into separate workflow (#2522)
Implement `AppUserAuth` for Github App user tokens (#2546)  Allows to refresh Github App user token. Integrates `ApplicationOAuth` into `github.Auth`.
Add support for environments (#2223)
Make Requester.__createException robust against missing message and body (#2159)
Fix auth issues with `Installation.get_repos` (#2547)
Add support for new RepositoryAdvisories API :tada: (#2483)
"Make `MainClass.get_app` return completed `GithubApp` when slug is given (#2543)  Fixes slug attribute to fetch app when not set. Loads app with slug lazily, fetch complete app without slug."
"Add authentication classes, move auth logic there (#2528)  This adds argument `auth` and deprecates `login_or_token`, `password`, `jwt`, and `app_auth` arguments of `github.Github`.  This adds argument `auth` and deprecates `integration_id`, `private_key` of `github.GithubIntegration`.  This deprecates the `create_jwt` method of `github.GithubIntegration`, replaced by `github.Auth.AppAuth.create_jwt`."
Add sort order and direction for getting comments (#2544)  Note: This is a breaking change. The order of parameters of `PullRequest.get_review_comments` has changed to match other `get_comments` methods and Github API parameter order. Users should change `PullRequest.get_review_comments(since)` to `PullRequest.get_review_comments(since=since)`.  Calling without parameter is not breaking: `PullRequest.get_review_comments()`
Merging 1.58.x patch release notes into master (#2525)  Co-authored-by: Steve Kowalik <steven@wedontsleep.org>
Add `name` filter to `Repository.get_artifacts()` (#2459)  Co-authored-by: Enrico Minack <github@enrico.minack.dev>
"Add `name`, `display_title` and `path` attributes to `WorkflowRun` (#2397)"
Fix broken urls in docstrings (#2393)
Add new `create_fork` arguments (#2493)  Adds support for new `create_fork` arguments:  - `name` - To set the name of the fork on creation  - `default_branch_only` - To only include the default branch  Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
add `ref` to Deployment (#2489)  Co-authored-by: Nevins Bartolomeo <nevins@sev.co>
merge AppAuthentication.pyi to source (#2519)
Add query `check_suite_id` integer to `Workflow.get_runs` (#2466)
Merge GithubException.pyi stubs back to source (#2464)
Add `generate_release_notes` parameter to `create_git_release` and `create_git_tag_and_release` (#2417)
Add example for Pull Request comments to documentation (#2390)
Add allow_auto_merge support to Repository (#2477)  Co-authored-by: Glenn McDonald <testworksau@users.noreply.github.com>
fix: `Repository.get_artifact()` missing argument `artifact_id` (#2458)
"Raise error on unsupported redirects, log supported redirects (#2524)"
Fixes issue #2521 (#2529)
Add missing fields from `GithubCredentials.py` to CONTRIBUTING.md (#2482)
"Add missing attributes to Branch (#2512)  Co-authored-by: Juan Manuel ""Kang"" Perez <devel@kangmak.es>"
Add allow_update_branch option to Organization (#2465)
Add support for Issue.state_reason #2370 (#2392)  Co-authored-by: Nicolas Schweitzer <nicolas.schweitzer@amadeus.com>
Add parameters to Repository.get_workflow_runs (#2408)
Fix GithubIntegration using exiring jwt (#2460)
Bump actions/checkout from 2 to 3.1.0 (#2327)  Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Add expiration argument back to GithubIntegration.create_jwt (#2439)  * Add expiration argument back to create_jwt
"Add crypto extras to pyjwt, which pulls in cryptogaphy package (#2443)  * Add crypto extras to pyjwt, which pulls in cryptogaphy package * Remove cryptography dependency from more places * Remove integrations extra from docs"
Remove RLock from Requester (#2446)
Move CI to Python 3.11 release and 3.12 dev (#2434)
Merge pull request #2425 from bluek1te/master  Pass requester base URL to integration (#2420)
pass requester base URL to integration (#2420)
RTD: install current project
Add current dir sys.path as well
Fix package name again
Fix sphinx package name
Use use_scm_version to get current version from git tag (#2429)
Bump version to 1.58.0
Add release drafter and pubilsh on tag creation (#2428)
Add unarchiving support (#2391)
Support full GitHub app authentication (#1986)  * Support full GitHub app authentication  Refactor GithubIntegration class and add test case for app authentication Add permissions and repository properties in InstallationAuthorization Set JWT_EXPIRY=60 by default in GithubIntegration constructor * Modify existing testcases for GithubIntegration as per the framework and add missing tests * Provide installation ID for creating the access token instead of getting the first installation * Add optional permissions support for installation access token * Add lock around app authentication * Keep compatibility for importing GithubIntegration from MainClass * Group app authentication parameters in a class  Co-authored-by: Malik Ammar Akbar <malikammar.akbar@pfizer.com> Co-authored-by: Enrico Minack <github@enrico.minack.dev>
Continue the PR #1899 (#2386)  * A property to access the `assets` field of release (#1898)  ... in order to avoid extra requests.  <https://github.com/PyGithub/PyGithub/issues/1898>  * Remove comment to comply the review  * Add tests for GitRelease.assets  ---------  Co-authored-by: green-green-avk <45503261+green-green-avk@users.noreply.github.com>
feat: add allow_forking to Repository (#2380)  * chore(dependency): flake8 has moved to github  * feat: add allow_forking to Repository  * chore: linting  Co-authored-by: hussaiia <ibrahim.hussaini@cba.com.au>
Add code scanning alerts (#2227)
Publish version 1.57
Speed up get requested reviewers and teams for pr (#2349)
"[WorkflowRun] - Add missing attributes (`run_started_at` & `run_attempt`), remove deprecated `unicode` type (#2273)"
Add support for repository autolink references (#2016)
Add retry and pool_size to typing (#2151)
Fix/types for repo topic team (#2341)  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>
Require pyjwt>=2.4.0 to avoid CVE-2022-29217 (#2333)
Add class Artifact (#2313) (#2319)  Co-authored-by: Aleksei Fedotov <aleksei@fedotov.email>
Fix typo in blame ignore revs (#2342)
"Add support for Python 3.11, drop EOL 3.6 (#2332)"
Relax stale to 180 days (#2331)
Publish version 1.56
Create repo from template (#2090)  Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu> Co-authored-by: Isac Souza <isouza@daitangroup.com> Co-authored-by: Isac Souza <isouza@daitan.com> Co-authored-by: Liuyang Wan <tsfdye@gmail.com>
Fix CI (#2330)
"Improve signature of Repository.create_repo (#2118)  The docstring stated that `""*""` and `""none""` were valid values for the organization, but neither was actually supported (unless your organization was called `""none""`).  Remove the misleading information from the docstring, and add support for passing in an actual `Organization` object, for better typing and reliability properties.  Fixes #2116"
"Fix replay data for Organization.create_secret() (#2096)  A recently merged PR added a const, which will be used when fetching repositories. Update replay data for a test that was not included in that change."
Add support for 'visibility' attribute preview for Repositories (#1872)  Expose the new 'visibility' attribute for repository objects.  Fixes #1446
"Add Repository.rename_branch method (#2089)  The GitHub API exposes an endpoint to rename a branch, so we should support calling it. Sadly, there is not enough information to add that method to the Branch class, so expose it in the Repository object.  Fixes #1901"
Add function to delete pending reviews on a pull request (#1897)  Add a delete method to PullRequestReview to allow dismissing them.  Fixes #1856   Co-authored-by: bagashvilit <bagashvilit@allegheny.edu> Co-authored-by: WonjoonC <chos@allegheny.edu>
"Cover all code paths in search_commits (#2087)  The search_commits method was only very lightly tested, meaning over half of it was not covered. Write another test case, covering all code paths."
"Correctly deal when PaginatedList's data is a dict (#2084)  When calculating totalCount for a PaginatedList, if a Link header is not in the returned data, we use len() to calculate the number of items. PullRequest.get_review_requests() actually returns a dictionary, which neatly defeats this naive method. Peer inside the dictionary in this case, and add a test case.  Fixes #2053"
Add comment on issue example (#2081)  Add an example showing how to comment on an existing issue.
Use rate-limit in documentation URLs (#2036)  link to GitHub docs fixed: Replace rate_limit with rate-limit
"Move lint and docs to Python 3.8 (#2077)  With Python 3.6 rapidly approaching end of life, move the docs and lint tox targets to Python 3.8, and also switch readthedocs to match."
Add two_factor_authentication in AuthenticatedUser. (#1972)  Fixes #1971
Add ProjectCard.edit() to the type stub (#2080)  The typing information for ProjectCard did not have edit(). Add it.
"Add method to delete Workflow runs (#2078)  One piece of missing functionality is the ability to delete Workflow Runs, which the GitHub API supports. Add a delete() method to WorkflowRun.  Fixes #2019"
"Implement organization.cancel_invitation() (#2072)  Implement a new function cancel_invitation for github.Organization objects, allowing for cancellation of organization invitations."
Feat: Add `html_url` property in Team Class. (#1983)  Fixes: #1942
"Add support for Python 3.10 (#2073)  Now that Python 3.10 has been released, we should test it in CI."
Add github actions secrets to org (#2006)  Add functionality to create and delete Secrets for Organizations.
"Correct replay for Organization.create_project() test (#2075)  The just landed test case for Organization.create_project() used the wrong Authorization headers, correct it."
"Add type hint for Organization.create_project() (#2032)  Organization.create_project() did not have a type hint, add one, and a test case."
Fix install command example (#2043)  It should be pip install PyGithub[integrations] not pip install PyGithub['integrations']
Update sphinx-rtd-theme requirement from <0.6 to <1.1 (#2059)  Updates the requirements on [sphinx-rtd-theme](https://github.com/readthedocs/sphinx_rtd_theme) to permit the latest version. - [Release notes](https://github.com/readthedocs/sphinx_rtd_theme/releases) - [Changelog](https://github.com/readthedocs/sphinx_rtd_theme/blob/master/docs/changelog.rst) - [Commits](https://github.com/readthedocs/sphinx_rtd_theme/compare/0.1.8...1.0.0)  --- updated-dependencies: - dependency-name: sphinx-rtd-theme   dependency-type: direct:production ...  Signed-off-by: dependabot[bot] <support@github.com>  Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Bump codecov/codecov-action from 1 to 2.1.0 (#2058)  Bumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 1 to 2.1.0. - [Release notes](https://github.com/codecov/codecov-action/releases) - [Changelog](https://github.com/codecov/codecov-action/blob/master/CHANGELOG.md) - [Commits](https://github.com/codecov/codecov-action/compare/v1...v2.1.0)  --- updated-dependencies: - dependency-name: codecov/codecov-action   dependency-type: direct:production   update-type: version-update:semver-major ...  Signed-off-by: dependabot[bot] <support@github.com>  Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
"Fix AuthenticatedUser ReplayData with parameters (#2074)  A recently merged change modified AuthenticatedUser.get_notifications() in how it passes boolean parameters, but did not modify the replay data. Do so now."
Removed duplicate code (#2060)  Remove a duplicate line in the CheckRun class.
IssueEvent: add missing type hints (#2046)  Add two missing properties to IssueEvents type hints  Fixes #2039
"Fix: #1671 Convert Python Bool to API Parameter for Authenticated User Notifications (#2001)  The parameters 'all' and 'participating' for AuthenticatedUser.get_notifications() should be lower case strings, not textual forms of a boolean.  Fixes: #1671"
"Fix type of NamedUser.name (#2050)  The `name` attribute of a `NamedUser` is `None` if the user did not set a name in their GitHub profile, but this was not reflected in the type."
Merge pull request #2011 from marksweb/fix/2009  Fixed links to github docs
Fixed links to github docs. [#2009]
"Remove language_version for black (#1968)  When black was added, we did not want to run it under Python 3.5, since upstream did not support it. We no longer support Python 3.5 ourselves, so we no longer need to restrict the version black uses."
"Add types libraries to lint deps (#1975)  It appears recently that typing information for jwt and requests has been split out into seperate projects on pypi, namely types-jwt and types-requests. Since we utilise calling functions in their namespace, we need to install them otherwise mypy will fail."
"Do not transform requestHeaders when logging (#1965)  Requester.__log() sanitizes the headers of the request so that authentication details are not logged, but this has the side effect of meaning that future requests that use the same Requester object will fail. Usually, this is perfectly fine, since almost every method will only make one request -- where this falls down is when we make another after a redirect. Make a copy of the requestHeaders, and sanitize those.  Fixes #1959"
"Add type to OrderedDict (#1954)  OrderedDict needs to be typed just like Dict needs to be typed.  The OrderedDict ""input"" variable key and value are used to append to a string without any processing, so it seems unlikely that something other than a string would be valid."
"Add Commit.get_pulls() to pyi (#1958)  Commit.get_pulls() is missing from the typing information, add it."
"Adding headers in GithubException is a breaking change (#1931)  Since exporting headers in GithubException might require passing them in a constructor for client code, shift it as a breaking change so users watch out for it."
"Fix commit message typo in changelog (#1930)  It appears we run codespell over all documentation, so common typos are picked up by CI. In other news, I must remember to run lint before creating a release."
Publish version 1.55
"Do not import from unpackaged paths in typing (#1926)  The tests path is not part of the shipped project, thus this type cannot be checked by users of this project.  The correct type in place of the type imported from tests appears to be Optional[     Union[HTTPRequestsConnectionClass, HTTPSRequestsConnectionClass] ]"
"Implement hash for CompletableGithubObject (#1922)  Since CompletableGithubObject already uses its URL attribute to implement equality, extend it to also use that attribute for hashing.  Fixes #1826"
"Use property decorator to improve typing compatibility (#1925)  As a property these functions are expected to be accessed without the private __get_ and __set_ functions, however while the functions are typed, the property is not, and mypy shows an attribute error.  As this codebase no-longer requires support for python versions without support for @property.setter(2.6?) this updates the functions to use decorators and updates the type files to reflect the attribute existence."
Fix :rtype: directive (#1927)  Fixes a missing colon after :rtype in the ProjectColumn docs.
"Update most URLs to docs.github.com (#1896)  Now that GitHub have moved their documentation from developer.github.com, we should update our links. I have also tried to update the call strings to their new format, but since it was done via regex, some of them may not match exactly."
"key_id could be int on Github Enterprise (#1894)  * PublicKey.key_id can also be int, as well as str  Fixes #1878"
Adjust to Github API changes regarding emails (#1890)  Handle AuthenticatedUser.get_emails() correctly with the GitHub API changes.  Fixes #1852
"Tighten asserts for new Permission tests (#1893)  The recently merged code checking attributes on Permissions overeagerly used assertEqual for everything, switch to the more appropriate methods."
"Adding attributes ""maintain"" and ""triage"" to class ""Permissions"" (#1810)  * Adding attributes ""maintain"" and ""triage"" to class ""github.Permissions.Permissions""  * Fix for failed test due to extended attribute list  * Adding new simplistic test case for class Permissions  Fixes #1809"
Add default arguments to Workflow method type annotations (#1857)  The type annotations for Workflow.create_dispatch() and Workflow.get_runs() do not include the fact that some of the arguments have default values
"Re-raise the exception when failing to parse JSON (#1892)  Since GitHub has the bad manners to return bare strings for some API endpoints, one sharp edge has been that JSON decoding errors were masked since we wrap the string in a dictionary. However, this makes it difficult to debug malformed JSON in replay data, so re-raise the exception if the first character is a { or [ (IE, it's an object or list.)"
Allow adding attributes at the end of the list (#1807)  * Allow adding attributes at the end of the list / fix for issue #1806  * Update as per review comments
Updating links to Github documentation for deploy keys (#1850)  * Updating links to Github documentation for deploy keys  There are a couple of links to http://developer.github.com/v3/repos/keys/ and I believe these should be going to http://developer.github.com/v3/repos/#deploy-keys. I've updated the docstrings in this file appropriately.
Update PyJWT Version to 2.0+ (#1891)  * Update PyJWT version * Fix `GitRelease.testUploadAssetWithName` test   MIME type wasn't as expected  Fixes #1832
"Use right variable in both get_check_runs() (#1889)  Both CheckSuite and Commit have a get_check_runs() method that allows filtering by a string -- the original code did not check for it, and never added it to the query string since it checked the wrong variable. Check the right variable and re-record the replay data.  Fixes #1843"
fix bad assertions in github.Project.edit (#1817)  The assertions in github.Project.edit looked like the result of a bad copy-paste operation: they were all making assertions about the `name` parameter. This commit fixes them so they are checking different parameters.
"Remove client_id/client_secret authentication (#1888)  Authenticating via client_id and client_secret is dangerous, since they appended to the query string, and can be easily seen from the URL.  client_id/client_secret have been deprecated since May 2020, and ignored by GitHub since late 2020, so it's high time they were removed."
"Export headers in GithubException (#1887)  Since the headers that led to an exception are also useful, firstly pass them into the constructor, and then export them in a property. Test one specific use case to make sure of coverage.  Fixes #1814"
"Test repr() for PublicKey (#1879)  The new PublicKey tests did not test the repr() method, increase coverage by doing so."
"Add support for deleting repository secrets (#1868)  When a previous commit added support for creating secrets on repository objects, support was not added to also remove them. Since the GitHub API does support that, add a method to do so."
"Switch repository secrets to using f-strings (#1867)  New code written before we switched to f-strings need to get updated to using them, so do so."
Manually fixing paths for codecov.io to cover all project files (#1813)  * Manually fixing paths for codecov.io to cover all project files  * Update codecov.yml  Fixes #1812  Co-authored-by: Steve Kowalik <steven@wedontsleep.org>
Add missing links to project metadata (#1789)  Fixes: #1788
"No longer show username and password examples (#1866)  With GitHub moving away from allowing authentication to the API using an username and password, update our documentation to remove it and rely on tokens. Perhaps we should link to how to create an API token, but that can be addressed later.  Fixes #1851"
Adding github actions secrets (#1681)  * Fixed pre-commit issues  * Fixed mypy linting error  * Fix flake8 error  * Update PublicKey.py  * Update PublicKey.py  * Update setup.py  * Update setup.py  * Update requirements.txt  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>
fix get_user_issues (#1842)  AuthenticatedUser.get_user_issues() calls the wrong API endpoint.  Fixes #1841
"Switch all string addition to using f-strings (#1774)  Now that we no longer support Python 3.5, stop using string addition everywhere it makes sense, and move to the best feature 3.6+ gives us, f-strings!"
Merge pull request #1818 from apahim/define_pool_size  Make requests pool_size configurable
"Enabling connetion pool_size definition  requests has a default connections pool of 10. Creating multiple threads will consume from that same pool, since the underlying implementation of the requests pool is a singletown.  Let's make the pool_size configurable, so clients can set the proper number for their use case when running multiple threads.  Signed-off-by: Amador Pahim <apahim@redhat.com>"
"Always define the session adapter  This represents no change of behaviour, but it enables us to set more options to the adapter.  Signed-off-by: Amador Pahim <apahim@redhat.com>"
Publish version 1.54.1
"Pin pyjwt version (#1797)  * Pin pyjwt version  Pyjwt version is not fixed, which can cause syntax error for user since the release of breaking changes from pyjwt (https://pypi.org/project/PyJWT/#history)  * Update setup.py  Fixes #1796"
"Ignore pyupgrade commit for git blame (#1785)  Since the pyupgrade commit makes a large amount of changes, ignore the commit by default with git blame."
"Add pyupgrade to pre-commit configuration (#1783)  To help us switch to f-strings and other 3.6+ changes, add pyupgrade to our pre-commit configuration to keep the codebase clean."
Merge pull request #1733 from dubois/main  Fix #1731: Incorrect annotation
Fix #1731: Incorrect annotation
"Drop support for Python 3.5 (#1770)  In preperation for starting to use 3.6+ only features, stop testing Python 3.5 in our CI, and bump our minimum required version."
"Revert ""Pin requests to <2.25 as well (#1757)"" (#1763)  * Revert ""Pin requests to <2.25 as well (#1757)"" * Ensure httpretty is more recent than 1.0.3  This reverts commit d159425f36dc7f68766cc980e262e9287e5f111c."
Merge pull request #1767 from pascal-hofmann/fix-repository-stubs  Fix stubs file for Repository
Fix stubs file for Repository
Publish version 1.54
Add support for Check Suites (#1764)  * Add initial support for Check Suites * Add API call detail in CheckSuite.rerequest * Update Accept header with general instead of preview * Add 'get check runs' endpoint for CheckSuite with stubs * Add create check suite endpoint with stub * Update CheckSuite tests with creat check suite endpoint * Add update check suites preferences endpoint * Add repository preferences object and stub file * Add update check suite preferences tests  Needed for #1621  Co-authored-by: Raju Subramanian <coder@mahesh.net>
"Add missing preview features of Deployment and Deployment Statuses API (#1674)  * Add missing preview features of Deployment and Deployment Statuses API   - Enable support for deployment status states in_progress and queued   - Add arguments production_environment and transient_environment to Repository.create_deployment()   - Add attributes production_environment and transient_environment to Deployment   - Use correct type in assertion for Deployment.payload   - Fix incorrect assertion for description in Deployment.create_status()   - Add arguments environment, environment_url, auto_inactive to Deployment.create_status()   - Add attribute environment_url to DeploymentStatus"
"Correct typing for Commit.get_comments() (#1765)  Commit.get_comments() returns a PaginatedList of CommitComment instances, not commits.  Co-Authored-By: Raju Subramanian <coder@mahesh.net>"
"Pin requests to <2.25 as well (#1757)  requests 2.26 and its requirements break httpretty (see gabrielfalcao/HTTPretty#409), so pin for the time being. Thanks to Sébastien Besson and Dhruv Manilawala for the debugging assistance."
Add Support for Check Runs (#1727)  * Add CheckRun object and stub file * Add list of check runs endpoint for Commit * Add get check run endpoint for Repository * Add CheckRun test file and replay data files * Add CheckRunAnnotation object and stub file * Add create CheckRun API endpoint to Repository * Update and add new tests for CheckRun endpoint:
"Remove older MainClass.get_installation() (#1738)  There are two get_installation() methods in MainClass, with different arguments. get_installation(owner, repo) is documented and tested, and get_installation(id) is neither. Remove it to avoid confusion."
Added a method for getting a user by their id (#1691)  * Added a method for getting a user by their id  * Added get_user_by_id to MainClass stubs  Fixes #1615
Fix #1742 - incorrect typehint for `Installation.id` (#1743)  * Fix #1742
List new project in introduction (#1739)  Fixes #1677
"Add py39 env to tox (#1740)  An earlier commit added Python 3.9 support to CI, but neglected to change tox.ini to support an environment, do so here."
Add WorkflowRun.workflow_id (#1737)  Add the missing attribute WorkflowRun.workflow_id
"Add support for Python 3.9 (#1735)  With Python 3.9 released, we should support it. A later commit will remove support for Python 3.5."
Added support for the Self-Hosted actions runners API (#1684)  * Added data model for Self-Hosted Actions Runner  * Added function for getting self-hosted runners
"Fix Branch protection status in the examples (#1729)  A long time ago when branch protection was changed, the example of checking if a branch is protected wasn't changed in the examples.  Fixes #1724"
"Filter the DeprecationWarning in Team tests (#1728)  With 1c55be51743 merged, Team.set_repo_permission() now raises a DeprecationWarning, so filter it until the method is removed."
Added get_installations() to Organizations (#1695)  * Added get_installations() to Organizations  Fixes #1694
Fix #1507: Add new Teams: Add or update team repository endpoint (#1509)  * Add new Team.update_team_repository()  * Mark Team.set_repo_permission() as deprecated   Fixes #1507
Added support for `Repository.get_workflow_runs` parameters (#1682)  * Added support for `Repository.get_workflow_runs` parameters  * Added anchor tag to docstring link  * Tests
feat(pullrequest): add the rebaseable attribute (#1690)
Add support for deleting reactions (#1708)  * Delete comment reactions  * Add test case  * update ignore-word-list  * Delete issue reactions  * Delete issue comment reactions  * Delete pull request comment reactions  * check status
Merge pull request #1712 from s-t-e-v-e-n-k/inputgittreeelement-typing  Correct type hint for InputGitTreeElement.sha
"Correct type hint for InputGitTreeElement.sha  InputGitTreeElement.sha was previously updated to accept None to allow files to be deleted, but the type hint was not updated.  Fixes #1707"
"Ignore new black formatting commit for git blame (#1680)  To make git blame tagging easier to follow, ignore the commit that made sweeping changes with the new black version."
"Format with new black (#1679)  Black is very opinionated, but sometimes those opinions change. Run the new black version across the codebase, and lock down the version used by pre-commit so we don't get surprised like this again."
Add get_timeline() to Issue's type stubs (#1663)  Add get_timeline() to Issue's type stubs
Publish version 1.53
Test Organization.get_hook() (#1660)  Add a testcase for Organization.get_hook()
Add method get_team_membership for user to Team  (#1658)  * - Add method get_team_membership for user  * add typing get_team_membership for member  Fixes #1657
"Add typing files for OAuth classes (#1656)  The additional classes added for OAuth predated the inclusion of typing files, add them for the new classes."
Fix Repository.create_repository_dispatch type signature (#1643)  * Fix Repository.create_repository_dispatch type signature  * Change from object to Any
"PaginatedList's totalCount is 0 if no last page (#1641)  When calculating totalCount for PaginatedList, if the links data does not contain a last page, we can't know how many elements are contained in the list. Set it to 0 in that case.  Fixes #1614"
Add initial support for Github Apps. (#1631)  * Add initial support for Github Apps.  Needed for #1621
"Correct **kwargs typing for search_* (#1636)  It turns out typing for **kwargs is always Dict[str, Type], so only the type is required.  Fixes #1633"
Add delete_branch_on_merge arg to Repository.edit type stub (#1639)  Add missing delete_branch_on_merge argument to Repository.edit() stub
Fix type stub for MainClass.get_user (#1637)  -   Add `login` arg default value to stub to match source
Add type stub for Repository.create_fork (#1638)  Add type stub for Repository.create_fork()
"Correct Repository.create_pull typing harder (#1635)  It turns out if an argument is optional for an overloaded method, the type hints require the default argument specified to successfully match against the correct signature. Furthermore, the second kind of create_pull() does not support the draft argument at all, so remove it.  Fixes #1634"
Publish version 1.52
upload_asset with data in memory (#1601)  * Expose upload from memory functionality * Upload from memory basic test * Test for custom file like object * Reorganized existing release tests * Remove docstrings & comments from tests * Modify logic * Explain why encode ignores its argument  Fixes #1140
Make Issue.closed_by nullable (#1629)
Add support for workflow dispatch event (#1625)  * Add support for workflow dispatch event  Fixes: #1624
"Do not check reaction_type before sending (#1592)  There is a bunch of repeated code checking reactions which has the issue that it can easily get out of date with what GitHub accepts. Drop the check, and rely on GitHub returning an error.  Fixes #1554"
Various Github Action improvement (#1610)
more flexible header splitting (#1616)  Co-authored-by: Liuyang Wan <tsfdye@gmail.com>
Merge pull request #1021 from rigaspapas/implement-apps-oauth-endpoints  Implement OAuth for apps
Create Dependabot config file (#1607)  Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
"Add support for deployment statuses (#1588)  * Added DeploymentStatus class * Added stubs for DeploymentStatus class * Fixed headers for DeploymentStatus.py * Added get/list/create deployment status methods * Added DeploymentStatus repr * Added attribute check tests for DeploymentStatus * Added ""create deployment status"" test * Added test for Deployment.get_statuses() * Added Deployment.get_status() method  Fixes #1586"
Adds the 'twitter_username' attribute to NamedUser. (#1585)  * Adds the 'twitter_username' attribute to NamedUser.
"Create WorkflowRun.timing namedtuple from the dict (#1587)  To stop non-deterministic dictionary ordering ruining our day on Python 3.5, create the namedtuple using the keys of the dictionary."
Add missing properties to PullRequest.pyi (#1577)  Two missing attributes were added to PullRequest.pyi
"Add support for Workflow Runs (#1583)  To build on the previous work supporting querying Workflows for GitHub Actions, add a class and relevant methods to support querying runs of a workflow."
"More precise typing for Repository.create_pull (#1581)  The typing information for Repository.create_pull did no type checking of the arguments at all. Using the overload functionality, specify both styles of create_pull(). Drive-by a nearby function from using a generic dict to Dict[str, str]."
Update sphinx-rtd-theme requirement from <0.5 to <0.6 (#1563)  Updates the requirements on [sphinx-rtd-theme](https://github.com/rtfd/sphinx_rtd_theme) to permit the latest version. - [Release notes](https://github.com/rtfd/sphinx_rtd_theme/releases) - [Changelog](https://github.com/readthedocs/sphinx_rtd_theme/blob/master/docs/changelog.rst) - [Commits](https://github.com/rtfd/sphinx_rtd_theme/compare/0.1.8...0.5.0)  Signed-off-by: dependabot-preview[bot] <support@dependabot.com>  Co-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>
"More precise typing for MainClass.get_user() (#1575)  Use typing.overload for MainClass.get_user() since it can return two disparate types. Correct the docstring for it, as well as locking down Sphinx to <3 due to built docs issue and drive-by link correction.  Fixes #1550"
Small documentation correction in Repository.py (#1565)  Class `github.Clone.Clone` doesn't exist and should reference `github.Clones.Clones` instead.
"Remove ""api_preview"" parameter from type stubs and docstrings (#1559)"
Upgrade actions/setup-python to v2 (#1555)  https://github.com/actions/setup-python/releases
"Clean up tests for GitReleaseAsset (#1546)  The test class for GitReleaseAsset did not match the filename, was also the only class to include docstrings, and furthermore, repeated a lot of fetches in the replay data."
"Repository.update_file() content also accepts bytes (#1543)  The typing information for the update_file() method's content parameter states it will only accept str, whereas it will accept both str and bytes.  Fixes #1542"
Fix Repository.get_issues stub (#1540)  Fixes #1539
"Check all arguments of NamedUser.get_repos() (#1532)  The two unit tests for NamedUser.get_repos() did not check all arguments, and this was the only method in the file that wasn't completly covered. Re-record the replay data while passing all arguments to the method."
"Correct Workflow typing (#1533)  When Workflow support was added, the method calls were not added to the typing file for Repository, and somehow the class name for the Workflow typing file was incorrect."
"Remove RateLimit.rate (#1529)  RateLimit.rate was first deprecated in v1.43.2, which was released 20 months ago. As that's a fairly generous deprecation period, remove it."
"PullRequestReview is not a completable object (#1528)  While chasing coverage failures, I discovered PullRequestReview's do not send back a URL at all, which means firstly, the url property is not required because it will always be None, and secondly, the object can never be completed. I'm not certain why this change broke the test, but it looked brittle, refactor it to be clearer."
"Test more attributes (#1526)  To increase coverage, sprinkle in some asserts for attributes that were not checked -- this uncovered a bug in Issue that two attributes were not properly initialized to NotSet."
"Remove pointless setters in GitReleaseAsset (#1527)  This is the only class that includes property setters for two of the attributes, which are untested, and even if they were used, would have no impact since there is no method to submit the changes back to GitHub. Drop them."
"Drop some unimplemented methods in GitRef (#1525)  There are two unimplemented methods in GitRef, which are mostly covered by Commit.get_statuses(), remove them."
"Remove unneeded duplicate string checks in Branch (#1524)  There were multiple calls checking if an element of a list was a string or a string -- I suspect this pre-dates use of six in the code base, but let's clean it up."
"Turn on coverage reporting for codecov (#1522)  Since we migrated from Travis to GitHub Actions, our coverage on codecov has been reporting as 0%, since uploading the .coverage file is a terrible idea. Turn on XML-based reporting, ignore the file and use that when we upload to codecov."
"Drastically increase coverage by checking repr() (#1521)  A lot of our missing coverage is caused by not checking repr(), which is trivial enough to test against -- do so, and also clean up existing repr tests to look the same by calling repr(). Where it was trivial, add a few assertions about missing attributes."
Fixed formatting of docstrings for `Repository.create_git_tag_and_release()` and `StatsPunchCard`. (#1520)
"Remove Repository.topics (#1505)  The topics attribute has been replaced by Repository.get_topics(). To reduce user confusion, delete the attribute.  Fixes #1504"
Small improvements to typing (#1517)  Work through some of the errors when running mypy with --strict.
"Correct Repository.get_workflows() (#1518)  The API endpoint Repository.get_workflows() calls returns data in a list item, not directly, leading to some head scratching when calling it against GitHub. Re-record the replay data."
docs(repository): correct releases link (#1514)
"correct Repository.stargazers_count return type to int (#1513)  It appears this was a type annotation typo, as the type of the stargazers_count property has been int for a long time."
"Fix two RST warnings in Webhook.rst (#1512)  The final code block in the example is not Python code, and the underlines were incorrect, correct both."
"Filter FutureWarning for 2 test cases (#1510)  There are two test cases that explicitly test with client_id and client_secret, which means pytest helpfully tells us about them after the test run concludes. We don't need to see them every run until we drop the arguments, so filter them out for now."
"Raise a FutureWarning on use of client_{id,secret} (#1506)  client_id and client_secret are sent to GitHub encoded on the query string, which GitHub has firmly deprecated, so much so as to email people who are doing so. To discourage its use, raise a FutureWarning if they are specified.  Fixes #1500"
Improve type signature for create_from_raw_data (#1503)  Previously you could call it only on Repository or NamedUser. Now you can call it with any GithubObject subclass -- and the type is carried through to the return value.
"feat(column): move, edit and delete project columns (#1497)  Add support to move, edit and delete project columns."
"Add support for Workflows (#1496)  To start supporting GitHub Actions, add the first part of that, Workflow, which encapsulates a workflow over the API, along with two methods on Repository to query them."
Add create_repository_dispatch to typing files (#1502)
Publish version 1.51
feature: get the project column by id (#1466)  Add a method to fetch a project column by id.  Fixes #1057
Improve type stubs (#1489)  * Add type stubs for GithubException subclasses  * Install type stubs per PEP 561  See https://mypy.readthedocs.io/en/stable/installed_packages.html#making-pep-561-compatible-packages.  * Make PaginatedList a generic type  * Add type stubs for __init__.py  * Add type stub for NamedUser.get_projects  * Add GithubObject superclasses to type stubs  Fixes #1490
Fix typo in PullRequest.rst (#1494)
Add OAuth support for GitHub applications  Create the ApplicationOAuth class which is responsible for handling a GitHub application's OAuth authorization process.
Create AccessToken entity  This class is used to represent access tokens created from a successful OAuth authorization process.
Extend installation attributes
Drop Travis in favor of Github workflow (#1488)  * Drop Travis CI  * Update DEPLOY.md about new workflow of uploading new version to PyPI  * Upload coverage data to Codecov  Co-Authored-By: Steve Kowalik <steven@wedontsleep.org>
Publish version 1.50
Disable travis publish to PyPI
Use Github action to upload to PyPI on new release (#1487)
Github workflow improvement (#1486)
Update Travis badge with Github Action badge
Actually use the Python version in GA workflow (#1485)  It appears that the Python versions in our strategy matrix are not used unless we drag them down into the steps. Do so now.
Fix all type issues flagged by mypy (#1484)
Deprecate Gitter and add slack badge with auto invitation
Drop use of shadow-cat for draft PRs (#1469)
Add and handle the maintainer_can_modify attribute in PullRequest (#1465)
Ability to retrieve public events (#1481)
List matching references (#1471)
AuthenticatedUser.get_organization_membership() should be str (#1473)
Add create_repository_dispatch (#1449)
Add some attributes. (#1468)  * Add some attributes to Repository and Organization  * Format.  * small fix  * Add some test.
"Drop documentation for len() of PaginatedList (#1470)  PaginatedList does not support len(), so stop mentioning it in the docstring.  Fixes #1462"
fix param name of projectcard's move function (#1451)  * fix param name of projectcard's move function  * fix test failure
Correct typos found with codespell (#1467)  Correct misspellings and typos located using the codespell tool. Add codespell to pre-commit to avoid further regressions.  Fixes #1459
"Export IncompletableObject in the github namespace (#1450)  When IncompletableObject was added, it was only added to GithubException, and not imported directly into the github namespace like other exceptions. Correct that, and clean up the resultant now unrequired import."
"Add GitHub Action workflow for checks (#1464)  To integrate better with the GitHub workflow, add a workflow for checking pushes and PRs. This doesn't remove the Travis configuration, which is still required for releases.  Co-Authored-By: Christian Clauss <cclauss@me.com>"
"Drop unneeded ignore rule for flake8 (#1454)  We no longer have code or comments that triggers E203 (no space before :), so we can drop it."
"Add missing mypy stubs (#1443)  Deployment, TimelineEvent{,Source} were missing mypy stubs, since they were added after the mypy branch was started. Add them, and clean up two spurious __future__ imports that are no longer required. Add mypy's cache directory to .gitignore"
Reuse pre-commit checks in CI (#1442)  * Use pre-commit checks in CI  * Fix all issues flagged by mypy  * Update travis.yml to reflect testenv changes  * Update docs to use tox lint
Type stubs for mypy (#1231)  * First attempt at stubs  * fix AuthenticatedUser.piy  * fix PullRequest.piy  * fix Authorization.piy  * fix Branch.piy  * fix Clones.piy  * fix Commit.piy  * fix CommitCombinedStatus.piy  * fix CommitComment.piy  * fix CommitStatus.piy  * fix ContentFile.piy  * fix Download.piy  * fix Event.piy  * fix File.piy  * fix Gist.piy  * fix GistComment.piy  * fix GistFile.piy  * fix GitAuthor.piy  * fix GitBlob.piy  * fix GitCommit.piy  * fix GitRef.piy  * fix GitRelease.piy  * renamed stubs into pyi files  * fix Notification  * fix Repository  * fix GitReleaseAsset  * fix GitTag  * fix GitTree  * fix GitTreeElement  * fix GithubException  * fix GithubObject  * fix GitignoreTemplate  * fix HookDescription  * fix HookResponse  * fix InputGitAuthor  * fix Installation  * fix InstallationAuthorization  * fix Invitation  * fix Issue  * fix IssueComment  * Fix random issues found while testing  * fix IssuePullRequest  * fix Label  * fix License  * fix Migration  * fix Milestone  * fix NamedUser  * fix NotificationSubject  * fix Organization  * fix PaginatedList  * fix Path  * fix Permissions  * fix Plan  * fix Project  * fix ProjectCard  * fix ProjectColumn  * fix PullRequestComment  * fix PullRequestMergeStatus  * fix PullRequestPart  * fix PullRequestReview  * fix Rate  * fix RateLimit  * fix Reaction  * fix Referrer  * fix RepositoryKey  * fix RequiredPullRequestReviews  * fix RequiredStatusChecks  * fix SourceImport  * fix Stargazer  * fix StatsCodeFrequency  * fix StatsCommitActivity  * fix StatsContributor  * fix Tag  * fix Team  * fix Topic  * fix UserKey  * fix MainClass  * fix Requester  * added stubs for View  * added stubs for Membership  * various syntax errors  * silence mypy noise  * keeping track of recent changes  * black + isort  Co-authored-by: Liuyang Wan <lwan@zendesk.com>
"Split up Repository.testStatistics (#1440)  The testStatistics testcase takes over ten seconds to run on my laptop, and it does an awful lot of work. Split up the disparate parts into seperate testcases."
"Use pytest to parametrize tests (#1438)  * Use pytest to parametrize tests  Use built-in pytest test case parametrization support over external 'parameterize' package.  The latter is not well maintained, and has known Python 3.8 failures unsolved since November 2019.  Since pytest fixtures are incompatible with unittest-style tests, rewrite the relevant test case to use pytest-style asserts.  This also makes the resulting code simpler, as we no longer have to pass TestCase to the helper classes.  * Refactor input cleaning in ReplayingConnection.__readNextRequest()"
Merge pull request #1437 from ahhda/create_org_project  Add support to create an organization project
Add create project method and tests
Publish version 1.47
Add support to edit and delete a project (#1434)  * Add methods to edit and delete a project  * Update tests for edit project
Add myself to funding and maintainers (#1435)  I think the time is right is add myself to these two files!
Add method for fetching pull requests associated with a commit (#1433)  * Add method for fetching pull requests associated with a commit  * Reference PR number instead of id on commit.get_pulls   Fixes #1414
"Add ""get_repo_permission"" to Team class (#1416)  * Add ""get_repo_permission"" to Team class  * second attempt: - accept repo name or repo object - return github.Permissions.Permissions object - try and following CONTRIBUTING.md better  * add missing import to tests patch replay data with permission data  * assert a specific permission rather than just the type  Fixes #1415"
"Add list projects support, update tests (#1431)"
"Don't transform completely in PullRequest.*assignees (#1428)  The two methods PullRequest.add_to_assignees() and PullRequest.remove_from_assignees() are special, in that they call POST/DELETE on the issue_url of the pull request, and then transform all their attributes based on what was returned. This has a number of effects, none of them any good for calling new methods on the same pull request object. Instead, only pull out the changed attribute and use that. Also change the returned URL for the POST call in the replay data to match what GitHub returns.  Fixes #1406"
"Add create_project support, add tests (#1429)  Add AuthenicatedUser.create_project()"
Merge pull request #1427 from ahhda/list_draft_pull_request  Add draft attribute to PullRequest
"Add draft attribute, update test"
"Docstring for Repository.create_git_tag_and_release (#1425)  The function create_git_tag_and_release had no docstring, so it didn't appear anywhere in our docs. Add a short one linking to the two methods it calls.  Fixes #1402"
"Create a tox docs environment (#1426)  To make it easier to build documentation locally, add a new tox environment that installs our requirements and runs Sphinx."
"Add Deployments API (#1424)  Add a new class, Deployment to describe a deployment performed utilising GitHub. Add three methods onto Repository to list them and create them.  Fixes #1117"
 Add support for editing project cards (#1418)  * Add edit() to ProjectCard  * Add unit tests of ProjectCard.edit
Merge pull request #1422 from ahhda/draft_pull_request  Add support for draft pull request
"Add draft flag parameter, update tests"
"Switch to using pytest (#1423)  Due to the recent deprecation of setup.py test, we should move with the times, and switch to a non-deprecated test runner.  Add configuration for pytest, and switch tox to using it. Remove AllTests, since it is no longer required to locate test classes, and rewrite tests/__main__.py as a pytest conftest plugin.  Also drop the test function from manage.sh, tox does a much better job."
"Fix GitMembership with a hammer (#1420)  While investigating pytest, I discovered this test class was not imported in AllTests, so it never ran, and worse, it would always fail because it would get a NamedUser, and not an AuthenticatedUser. Add it in it, and hit it with a hammer until it passes."
Add support to reply to a Pull request comment (#1374)  * Add create_review_comment_reply to PullRequest  * Add unit tests  * Add docs for comment_id param for create_review_comment_reply  * Update tests  * Fix pep8 styling issue  * Fix styling
PullRequest.update_branch(): allow expected_head_sha to be empty (#1412)  * PullRequest.update_branch(): allow expected_head_sha to be empty  * PullRequest.testUpdateBranch(): test also with empty expected_head_sha  * Updated replay data for PullRequest.testUpdateBranch  * tox formatted changes
"Implement ProjectCard.delete() (#1417)  To work towards implementing more of the API surrounding Project Cards, add a delete method. With thanks to Christopher Mitchell, Ph.D.  Fixes #1409"
Create FUNDING.yml
"Unpin coverage to 5.0.3 only (#1397)  To not force distributions to patch our requirements, loosen the coverage test dependency."
Add pre-commit plugin for black/isort/flake8 (#1398)  * Add pre-commit plugin for black/isort/flake8  * Update .pre-commit-config.yaml  * Add a few more useful hooks
Add tox (#1388)  * Add tox.ini  * Fix typo  * Update .gitignore  * Move flake8 to tox  * Add py35  * Add Coverage  * Add Coverage  * Add Coverage  * Add Coverage  * Add black  * Add black  * Add black  * Skip black for py35  * Add isort  * Update contributing docs  * Remove empty line
Open file in text mode in scripts/add_attribute.py (#1396)
"Silence most ResourceWarnings (#1393)  A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite of superclasses by name to using argument-less super().  Revert an AllTests change that snuck in during release."
black
"Assert more attributes in Membership (#1391)  To increase code coverage, assert more attributes in Membership."
"Assert on changed Repository attributes (#1390)  To increase code coverage, assert on more attributes of Repository during the testEditWithAllArguments testcase."
"Add reset to the repr for Rate (#1389)  Add the reset attribute to the repr for Rate, and add a test for good measure.  Co-Authored-By: Jonathan Leitschuh <jonathan.leitschuh@gmail.com>"
Publish version 1.46
Add repo edit support for delete_branch_on_merge (#1381)  * Add repo edit support for delete_branch_on_merge  * Assert delete_branch_on_merge
"Run black over the entire tree (#1386)  It's been a while since black was run over the entire tree, and since CI still doesn't check it, we can get behind."
Remove Travisbuddy
Fix mistake in Repository.create_fork() (#1383)  I modified #1306 to use the NotSet parameter after it was pointed out this was more appropriate however I did not also update the conditional.
"Correct two attributes in Invitation (#1382)  Proving once again that untested code is broken code, correctly set two attributes during initialization of Invitation. Increase coverage by checking every attribute."
"Search repo issues by string label (#1379)  * Allow use of strings for labels in Repository.get_issues  * Fix unittests  * Update docstring  * Removed brackets from ""list of..."""
Fix two deprecation warnings (#1371)  Sort out two deprecation warnings to help silence the test suite.
"Correct Repository.create_git_tag_and_release() (#1362)  Repository.create_git_tag_and_release() is a convience function that creates a git tag and then a release. It was not passing the SHA1 of the commit to the release function, resulting in incorrect releases.  Fixes #1336"
"Unpin sphinx requirement (#1370)  Now that we support Python 3, we can stop pinning sphinx to the last version with Python 2 support."
"Switch to no argument super() (#1361)  Now that Python 2 support is gone, we can switch to no argument super() rather than calling our superclass by name."
exposed seats and filled_seats for Github Organization Plan (#1360)  Expose two new attributes for Organization Plans
"Repository.create_project() body is optional (#1359)  The POST parameters passed to the create_project API call did not consider the body optional, and always included it. Fix up a formatting error in the docstring for good measure.  Fixes #1357"
"Implement move action for ProjectCard (#1356)  ProjectCard's have the ability to be moved between columns, implement the GitHub API to do so.  Fixes #1312"
"Tidy up ProjectCard.get_content() (#1355)  ProjectCard.get_content() did not document its one argument or assert its type. Do so, as well as generally tidy up the calls."
Added nested teams and parent (#1348)  * Added nested teams and parent  - Added github.Team.Team.get_teams() to get nested teams. - Added github.Team.Team.parent which points to the parent team.  Fixes #1337
"Correct parameter for Label.edit (#1350)  The existing code for Label.edit was passing 'name' as a parameter to the PATCH call, but GitHub expects 'new_name', correct it."
Correct reqirements.txt path in RTD config
"Add configuration for Read the Docs (#1347)  Read the Docs defaults to using Python 2 to build the documentation, so add a configuration file so we use a supported (upstream and by us) version.  Fixes #1341"
doc: example of Pull Request creation (#1344)  Add an example of creating a pull request
"Fix all but one sphinx warnings (#1346)  To hopefully correct our doc build, tidy up some of the warnings that sphinx complains about. The one remaining one is legitimate."
"Drop Python 2 support (#1329)  With the Python 2 deadline gone, it's time to move with the times and switch to Python 3 only."
"Fix PyPI wheel deployment (#1330)  `distributions` should be under `deploy`, not `deploy.on` https://docs.travis-ci.com/user/deployment/pypi/#uploading-different-distributions"
Publish version 1.45
Run black and isort to prepare for release (#1328)  Run black and isort over github/*py and tests/*py to prepare for a new release.
"Allow sha=None for InputGitTreeElement (#1327)  InputGitTreeElement is used to build tree objects for Repository.create_git_tree(). However, the GitHub API allows passing sha=null to delete a file, which we don't allow. Extend the checking in InputGitTreeElement to also allow None, and add a test for good measure.  Fixes #1318"
Support github timeline events. (#1302)  Adds support for retrieval of Github timeline events.  Signed-off-by: Nick Campbell <nicholas.j.campbell@gmail.com>
"Remove API preview parameter (#1325)  The API preview flag for both MainClass and Requester was the last hard-coded custom header, and it seems to not be relevant since mid-2015. Remove it, if any users are using it, they shouldn't be. Its code path was also entirely untested."
Update link to GitHub Enterprise in README (#1324)
"Cleanup travis config (#1322)  Xenial has been the default distribution since May, 2019, so tidy up the test matrix to no longer specify it. Furthermore, due to not quoting the distributions in the deploy config, we did not ship wheels on pypi.  Fixes #1321"
Add support for update branch  (#1317)  * Add Support for PullRequest update-branch  * Add test case  * Fix test case  * Add test data record  * Update PullRequest.py  * Update PullRequest.py  * Support py2.7  * Assert response status is 202  * black + isort
"Refactor Logging tests (#1315)  To stop skipping logging tests on Python 3, refactor them to mock out the logger and check arguments directly, rather than naively comparing strings. Allow a logger to be injected into Requester for this."
Ignore some isort change
Fix isort - add known first and third party
Fix rtd build
black
Add .git-blame-ignore-revs
Apply black to whole codebase (#1303)
Fix class used returning pull request comments (#1307)  Repository.get_pull_request_comments() was returning the wrong type.
Support for create_fork (#1306)  * Support for create_fork  http://developer.github.com/v3/repos/forks  * Add test case for create_fork  * Add param doc and fix extra line  * Specify the organization to increase line coverage  * Update test data  * Add type assert for organization param
"Use Repository.get_contents() in tests (#1301)  Two tests were calling Repository.get_dir_contents() which is deprecated. To stop the warnings, change the call sites."
"Allow GithubObject.update() to be passed headers (#1300)  SourceImport.update() is really GithubObject.update(), which just calls GET on the object's URL. Refetching a source import requires an additional header, so change GithubObject.update() to pass any it is given, and add a test for SourceImport.update()  Fixes #1297"
"Correct URL for assignees on PRs (#1296)  The URL that was used for POST/DELETE when adding and removing assignees was the PR itself, when it should be the issue_url.  Fixes #1294"
Use inclusive ordered comparison for 'parameterized' requirement (#1281)
"Fix Branch's push restriction API (#1290)  The current API for changing user and teams push restrictions is brittle, and flat out incorrect when it comes to adding members. Break the API, but replace it with one that is correct.  Co-Authored-By: Jonas Maurus <jonas-github@maurus.net>"
"Deprecate Repository.get_dir_contents() (#1285)  Repository.get_contents() and Repository.get_dir_contents() call the same endpoint, with slightly different error handling, and with the difference that get_dir_contents() throws an odd exception if you call it with a file. get_contents() already even handles being called for a directory anyway, so deprecate get_dir_contents(), and refactor the code so the tests pass.  Fixes #1283"
"Apply some polish to manage.sh (#1284)  Use set -e in manage.sh for some safety, and allow the remote to be overridden for those of us who have different setups, and switch to using flake8 for checks like travis does."
Publish version 1.44.1
"Add Python 3.8 to classifiers list (#1280)  Add 3.8 to the classifiers list, drop the use of 2to3, and run tests against 3.8."
Expand Topic class and add test coverage (#1252)  * Expand Topic class and add test coverage  * Add test coverage for Topic properties  * Fix misspelling in comment
Add support for team discussions (#1246) (#1249)  * Add support for team discussions (#1246)  * Make a TeamDiscussion completeable
"Correct API for NamedUser.get_organization_membership (#1277)  NamedUser.get_organization_membership() was calling the API method for fetching the currently authenticated user only, which is incorrect. The method was not tested directly, so add tests.  Furthermore, Membership had some errors which had slipped through review, so correct them.  Sadly, this is an API break, since passing the organization as an int made no sense in this case.  Fixes #1276"
"Correct header check for 2FA required (#1274)  Currently, we were checking for an uppercase header if GitHub was refusing our authentication because we didn't provide a token. Requests returns headers with all lowercase. Fix the const, and add a test for good measure.  Fixes #1273"
Use replay framework for Issue142 test (#1271)  * Use replay framework for Issue142 test  * Remove unused import
Sync httpretty version requirement with setup.py (#1265)
Handle unicode strings when recording responses (#1253) (#1254)  * Handle unicode strings when recording responses (#1253)  * Add new test requirements  * Make requirement conditional  * Fix flake8 error  * Compare dict values without worrying about key order  * Improve readability
Add assignee removal/addition support to PRs (#1241)  Add assignee removal/addition support to PRs Fixes #1109  Add test for new PR assignee functionality  Add record file  Addressed comments on #1016
"Check if the version is empty in manage.sh (#1268)  If someone accidentally hits Enter when prompted for the new version, the script merrily creates a tag called 'v', which is bothersome to tidy up. Check if the variable is empty and error if it is."
"Encode content for {create,update}_file (#1267)  If a byte object (for Python 3) was passed into either create_file or update_file, it was attempted to be co-erced into a bytearray, which failed. Check for encoded content before we encode it into bytes and then base64 encode it.  Fixes #1266"
Update changes.rst (#1263)
Publish version 1.44
Stop ignoring unused imports and remove them (#1250)  * Stop ignoring unused imports and remove them  * Stop ignoring * imports
Bump httpretty to be a greater or equal to (#1262)  Some distributions do not include httpretty 0.9.6 as is required by setup.py. Set it to >= rather than ==.
Add close all issues example (#1256)
"Add six to install_requires (#1245)  dc2f2ad8 introduced a dependancy on six, and added it to requirements, but not to setup.py, add it."
Implemented user organization membership. Added test case. (#1237)  1. Added AuthenticatedUser:get_organization_membership 2. Added NamedUser:get_organization_membership 3. Added related tests as GitMembership and related replay data
Create DEPLOY.md
"Support non-default URLs in GithubIntegration (#1229)  The get_installation() method of GithubIntegration was hardcoded to always use the default URL of api.github.com, making it impossible to fetch the installation of an GitHub Enterprise installation."
"Cleanup try/except import in PaginatedList (#1228)  Since we're using six.moves to import parse_qs, we don't need to check for an import exception, we can just import it directly."
"Add an IncompletableObject exception (#1227)  If a returned object from GitHub does not include an URL, that object can not be completed, and used to fail with an obscure traceback saying NoneType has no method startswith. Check for this, and raise IncompletableObject instead."
Fix redundant int checks (#1226)
"Jump from notifications to related PRs/issues. (#1168)  * Jump from notifications to related PRs/issues.  * Add test case for jumping to related PRs/issues.  Also another method to get notifications scoped to a repository, otherwise it's hard to keep out sensitive information from the test cases."
Code review bodies are optional in some cases. (#1169)  * Code review bodies are optional in some cases.  * Add test for approving PRs without body set.
Update changes.rst (#1223)  * Update changes.rst  * Update changes.rst
Do not auto-close issues with high priority tag
Fix bug in repository create new file example PyGithub#1210 (#1211)  * Fix bug in repository create new file example (#1211)  the previous code would throw an 'error path cannot start with a slash' . Now fixed it by removing a slash in the example.   Fixes: #1210
"Remove more Python version specific code (#1193)  Remove a bunch of other call sites that behaved differently between Python 2 and 3, massively cleaning up a few messy methods."
"Drop use of assertEquals (#1194)  TestCase.assertEquals is deprecated, at least in modern Python 3, so which to assertEqual, which is used everywhere else."
Fix PR review creation. (#1184)  Do not modify the attributes of a PR when creating a review.
Add support to vulnerability alert and automated security fixes APIs (#1195)  * Add functions about automated security fixes and vulnerability alerts  * Refine methods and add unit test  * Add record  * Update record file  - change user name  * Add get vulnerability alert function  * Fix typo  * Create file for testCreateFile  * Add tests  * Add unit test  * Simplify assert statement
"Delete Legacy submodule (#1192)  Since the only part of the Legacy submodule that is used and tested is the transform issue function, refactor it into a Repository method and delete it."
"Remove some uses of atLeastPython3 (#1191)  There are a number of call sites that would behave differently depending on Python 2 or 3. A fair amount of them are left over from Python 3.2 or Python 2.6 were the current versions, and it was much harder to write compatible code for both versions. Happily, that is now in the past, so refactor some of them out."
"Run flake8 in Travis (#1163)  Clean up a few errors I missed, ignore another, and configure flake8 using a config file to ignore certain errors. The next step would be to remove the F* ignores."
"Fix directories for coverage in Travis (#1190)  The directory github/tests no longer exists, correct the path for Travis goodness."
"Switch to using six (#1189)  With the Python 2.7 deadline fast approaching, modernize the codebase making use of the modernize module to switch to using six, as well as other upcoming features, such as absolute imports . Stop using 2to3 for Travis, yay!"
"Update Repository.update_file() docstring (#1186)  The docstring for Repository.update_file() insisted that content be base64 encoded, which is not quite correct, update it.  Closes #1069"
"Correct return type of MainClass.get_organizations (#1179)  The doc string and the code disagreed about the return type of MainClass.get_organizations(), correct the code, which was incorrect.  Fixes #1177"
Add cryptography to test-requirements.txt (#1165)
Publish version 1.43.8
"Fix bug in recursive repository contents example (#1166)  The previous code would prematurely exit when the intermediate contents list holds one thing, and that one thing has not been processed / expanded yet. Now the exit condition is when the contents list is empty, and there is nothing left to be processed."
Add two factor attributes on organizations (#1132)  * Add 2fa attribute on organizations  * Fix property name and test value
"Add Repository methods for pending invitations (#1159)  Make a start on implementing more of the invitations API, by adding methods to Repository to list and remove pending invitations.  Closes #1120"
"Silence most flake8 warnings (#1162)  Continue my crusade to running flake8 against new contributions by cleaning up whitespace (and wierdly, the entire indentation of Migration) to silence most flake8 warnings. AllTests is the remaining outlier, and requires some thought on how to approach."
Adds `get_issue_events` to `PullRequest` object (#1154)  * Adds `get_issue_events` to `PullRequest` object  * Add unit test for  * Fix PullRequest.get_issue_events unit test  Use actual event ids...  * Fix missing import on PullRequest.  I wish the unit tests would run in Python3...  * Add PulReqeust.testGetIssueEvents ReplayData  * Updating replay data to use developer's personal credentials.
Silence more flake8 errors (#1160)  Make more whitespace changes to silence flake8 errors under the github directory only.
"Clean up a lot of pyflakes warnings (#1153)  Clean up unused imports or unused variables to mostly silence pyflakes. We aren't quite yet in a place where we can run it via Travis, but baby steps."
"Add invitee and inviter to Invitation (#1156)  Invitations contain information about the user they are for, and which user invited them, so export that too.  During invesigating attmepting to test the new attributes of Invitation, it was discovered that there are no code paths to fetch them, so add AuthenticatedUser.get_invitations(). The test added can do double duty."
Adding support for pending team invitations (#993)  * fixes issue#823  * Update GithubObject.py  * Added tests for Pending team invitations(Issue#823)   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>
Update Repository.rst (#1118)  the example confused me until I found https://github.com/PyGithub/PyGithub/issues/545
"Do not import directly into Retry tests (#1155)  The Retry test class was importing Repository directly, which had the side effect of masking the tests.Repository import in AllTests with github.Repository. Switch to importing github only, which is safe. As a drive-by, switch to using self.assertRaises for one of the tests."
"Allow name to be specified for upload_asset (#1151)  GitRelease.upload_asset() calculates the name based on the filename, and doesn't allow it to be overridden. Add a new name argument that is used if it is set. Drive by changing the default of the content_type argument to NotSet.  Closes #1095"
Fix assertion in add_to_members (#1146)  The role parameter is set to NotSet by default but the assertion only allowed str and unicode. So it would always fail. Add NotSet to the assertion to allow calling the function without a role.  Signed-off-by: Pascal Bach <pascal.bach@nextrem.ch>
Add support for custom base_url in GithubIntegration class (#1093)  * Add support for custom base_url in GithubIntegration  * Fix non default argument issue
GithubIntegration: enable getting installation (#1135)  Signed-off-by: Tomas Tomecek <ttomecek@redhat.com>
Add sorting capability to Organization.get_repos() (#1139)
Add new Organization.get_team_by_slug method (#1144)  Add a new API call to Organization that allows fetching teams by slug.  Closes #1116
Add description field when creating a new team (#1125)
"Handle a path of / in Repository.get_contents() (#1070)  The path requested in Repository.get_contents() is appended to the URL, so the root path should be requested with the empty string. If path is '/', set it to the empty string. Copy the replay data from the original test, since it is identical.  Drive-by renaming the test to include the missing 's'.  Closes #1059"
"update doc, fix #1123"
Merge `get_file_contents` with `get_contents`
"issue: add lock/unlock (#1107)  * issue: add lock/unlock  * tests: add test for issue lock/unlock  * tests: add lock/unlock sample data  * Fix tests, add locked and active_lock_reason   Co-authored-by: Wan Liuyang <tsfdye@gmail.com>"
fixes #1106 for GitHub Enterprise API (#1110)
Publish version 1.43.7
"Updated setup.py to exclude tests (#1031)  # Problem # The `.whl` available on PyPi for this repository contains its entire `tests` submodule.   The total size of the `pygithub` module is less than `1mb` without tests and `>23mb` with.   Previous discussions on this topic indicated the removal of tests would be accepted if someone created a pull request to do so: https://github.com/PyGithub/PyGithub/issues/672   This is that pull request! 😄  # Solution/Implementation #   - Moved ""tests"" to root of the repository ( outside the package )      - Added `tests.` module path to the imports in `AllTests.py` - Updated `setup.py`     - Removed `package_data` from product     - Removed ""tests"" from packages definition     - Repointed `test_suite` to new location - Updated `travis.yml`     - Added conditional ( if not `py2.7` ) conversion of code to `py3`  _... apologies for all the failed build spam below - new to working with Travis CI / had some gotcha moments!_"
Add code coverage (#1090)  * Add codecov to travis  * Add badge
Use non-deprecated path for creating GitHub App access tokens (#1086)  /installations/<installation_id>/access_tokens was deprecated as of https://developer.github.com/changes/2018-08-16-renaming-and-deprecation-of-github-app-installation-access-token-route/
Publish version 1.43.6
Add url parameter to include anonymous contributors in get_contributors() (#1075)  Add the anon parameter missing from get_contributors() so anonymous contributors can be included in results as specified in the [Github REST API Reference](https://developer.github.com/v3/repos/#list-contributors).
Adding communications Retry functionality into requests via urllib3 retry object. (#1002)  This is a continuation of the work started by @allevin on https://github.com/PyGithub/PyGithub/pull/860.  I have refactored the testing Framework to use the `httpretty` library in order to use the urllib3 retry feature and therefore be able to test it.  Please refer to https://github.com/PyGithub/PyGithub/pull/860 for additional context.  cc: @allevin @mfonville @jrouquie @sfdye  Closes #757  Closes #860
"Remove status API, closes #1080"
Run pyupgrade across the project (#1067)  https://github.com/asottile/pyupgrade  - Use dict comprehension - Use set literals
Travis CI: Add Python 3.7 to the testing (#1028)  Also: * Python 3.4 reaches its end of life in 44 days so let's remove it from the testing.  https://devguide.python.org/#branchstatus * [Travis are now recommending removing the __sudo__ tag](https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration).
provide option to extend expiration of jwt token (#1068)  supply optional parameter for `create_jwt` method
add since and before to get_notifications (#1074)  Needed this for getting notifications in a certain period and noticed that it wasn't implemented.
"[fix] the default vaule of 'PullRequest.create_review'`s commit param (#1058)  [fix] the default vaule of github.PullRequest.PullRequest.create_review`s input param commit.  In `POST /repos/:owner/:repo/pulls/:number/reviews`, 'commit_id' is not a necessary parameter.Reference [https://developer.github.com/v3/pulls/reviews/](https://developer.github.com/v3/pulls/reviews/)  Signed-off-by: MurphyZhao <d2014zjt@163.com>"
"Add new dismiss() method on PullRequestReview (#1053)  The GitHub v3 API has the ability to dismiss reviews, export it by way of a new dismiss() method on PullRequestReview.  Closes #1050"
resolves #1023 (#1042)  resolves #1023
Update link/description of project (#1043)
Fix Organization.add_to_members() role passing (#1039)  * Fix role passing  * Fix typo  * Fix another typo  * Move parameter to JSON payload  * Move parameter to JSON payload  * Add content type  * Add content type  * Double Quotes  * Double quotes
fixed: comment of ProjectColumn.create_card (#1041)
Publish version 1.43.5
fix request got an unexpected keyword argument body (#1012)  Resolves #1010
add: create project column card route (#1003)  Add the missing route to create cards for projects columns Test written and passing locally.
user.node_id missing (#1001)  'node_id' attribute was missing. Hence added the attribute using add_attribute script in AuthorizedUser  and NamedUser classes.  This fixes issue #999 .
"Add missing import to PullRequest (#1007)  PullRequest.get_review_comments() works with no arguments passed due to if short circuiting, but as soon as you pass since, you get an exception since datetime wasn't imported. Import it, and add a test case for good measure.  Closes #1004"
Publish version 1.43.4
Adding migration api wrapper (#899)  Closes #818
Drop httplib for requests to finish work of #664 (#998)  #664 got rid of most of httplib and replaced it with requests. This is the last place it was used. It makes a more coherent code base I think.  Tests are ok locally.
"Add ""create repository project"" and ""create project column"" methods (#995)  Added the two methods:  - Create a project for a given repo  - Create a column for a given project   Tests are basics but done :)"
Traffic Endpoints Support (#977)  Added support for the traffic endpoints found at https://developer.github.com/v3/repos/traffic/.  We added four functions to the Repository class (one for each of the endpoints) with corresponding unit tests.   Fixes #926
"Change type of GitRelease.author to NamedUser (#969)  Github's release object in the API response contains an `author` field having a value much more like a `NamedUser` but not `GitAuthor`.  e.g. https://api.github.com/repos/edhollandAL/PyGithub/releases/1210902  ``` {   ""id"": 1210902,   ""author"": {     ""login"": ""edhollandAL"",     ""id"": 11922660,     ""node_id"": ""MDQ6VXNlcjExOTIyNjYw"",     ""avatar_url"": ""https://avatars1.githubusercontent.com/u/11922660?v=4"",     ""gravatar_id"": """",     ""url"": ""https://api.github.com/users/edhollandAL"",     ""html_url"": ""https://github.com/edhollandAL"",     ""followers_url"": ""https://api.github.com/users/edhollandAL/followers"",     ""following_url"": ""https://api.github.com/users/edhollandAL/following{/other_user}"",     ""gists_url"": ""https://api.github.com/users/edhollandAL/gists{/gist_id}"",     ""starred_url"": ""https://api.github.com/users/edhollandAL/starred{/owner}{/repo}"",     ""subscriptions_url"": ""https://api.github.com/users/edhollandAL/subscriptions"",     ""organizations_url"": ""https://api.github.com/users/edhollandAL/orgs"",     ""repos_url"": ""https://api.github.com/users/edhollandAL/repos"",     ""events_url"": ""https://api.github.com/users/edhollandAL/events{/privacy}"",     ""received_events_url"": ""https://api.github.com/users/edhollandAL/received_events"",     ""type"": ""User"",     ""site_admin"": false   },   // (ignored) } ```"
"Use total_count from data in PaginatedList (#963)  When there is no link header sent, this signifies that this is the only page of results. If data is empty, or only contains a list of items, we should count them, but this can be defeated -- if the returned data contains a total_count key, we should use it. This also uncovered a bug in the test suite for searching topics.  Closes #960"
get_issues documentation for state (#961)  Closes #835
"Add a Topic object to cover search_topics (#959)  The return value of MainClass.search_topics() was a paginated list of Repository, which is incorrect. Add a Topic class to encapuslate what is returned.  Fixes #929"
Publish version 1.43.3
Add support for JWT authentication (#948)  APIs such as https://developer.github.com/v3/apps/#find-organization-installation use a JWT for authentication. Adding support for JWT auth.
Added missing params to constructor when reversed (#946)  This PR proposes adding two missing params to constructor in `.reversed`. This preserves the `headers` as well as the `list_item` once cloned.  Fixes #945.
"Fix unable to trigger RateLimitExceededException. (#943)  I found when authorized, the ratelimit error message is different from unauthorized.  so i add this.  After studying hard with my 2b colleagues @AnYeMoWang , we finally realized how tests wrote.  😸 😸 😸 😸 😸 😸 😸"
Added support for required signatures on protected branches (#939)  Wraps the parts of the branch protection API that allows the user to require signed commits on a branch. New methods are : * Branch.get_required_signatures : returns true if signed commits are required * Branch.add_required_signatures : adds the requirements for signed commits on a branch * Branch.remove_required_signatures : removes the requirement for signed commits on a branch  It uses the API provided on this page : https://developer.github.com/v3/repos/branches/  Since this feature is in [preview](https://developer.github.com/changes/2018-02-22-protected-branches-required-signatures/) I pass the 'Accept application/vnd.github.zzzax-preview+json' header to each request.
Ability to filter repository collaborators (#938)  ## Changes - Add `affiliation` parameter to `get_collaborators()` and use it to filter collaborators through the API - Resolves #937   PS: Would have loved to add a simple test for this but there seems to be a problem on my end using OAuth as I'm just not able to authenticate to the API during tests.
"Mark notification as read (#932)  Wraps the parts of the notification API that allows the user to mark notifications as read. New methods are :    - Notification.mark_as_read : marks a single notification thread as read - Repository.mark_notifications_as_read : marks all the notifications for a given repository as read - AuthenticatedUser.mark_notifications_as_read : marks all the notifications as read  Aims to fix : https://github.com/PyGithub/PyGithub/issues/571 and simply uses the APIs described on this page : https://developer.github.com/enterprise/11.10.340/v3/activity/notifications/  A weird thing I noticed doing this is that Repository.notifications_url doesn't seem to be usable directly. I used Repository.url + ""/notifications"" instead."
"Add some examples for Branch (#936)  In the spirit of #874, add some examples for working with Branch objects. It doesn't add everything, but it's a start."
Update Repository.rst (#935)  stargazers count attribute  is misspelled
Add a trailing slash to URL when updating or deleting a file (tests fixed) (#931)  * Add a trailing slash to URL when updating or deleting a file.  * Update test files to match new create/update/delete_file Repo methods  * Add trailing slash to get_contents() method  * update tests  * add missing slash in get_dir_contents  * add example usage  * remove dup slashes in tests  * clarify example comments
"Example: Listen for New Events with PyGithub and Pyramid (#930)  ## What does this change do? Adds a small demo implementation of how one might use webhooks to listen for new events in a given repository.  ### Additions #### doc/examples/Webhook.rst Adds a new `.rst` file, `Webhook.rst`, which can be used for demonstrating the usage of Webhooks in PyGithub.  The example that I've added shows how to continually listen for events using Pyramid in conjunction with PyGithub.  ## Motivation This example is in the spirit of #874. [It was asked](https://github.com/PyGithub/PyGithub/issues/874#issuecomment-429075695) that someone provide an example of how to listen to events from a repository.  ## How has this been tested? I've built the docs locally and made sure the HTML is generated as expected.  ## Screenshots ![webhook1](https://user-images.githubusercontent.com/16039329/46991191-40e58900-d0db-11e8-87e4-d5cf2cc18b0a.png) ![webhook2](https://user-images.githubusercontent.com/16039329/46991193-42af4c80-d0db-11e8-9b20-678f70e6baee.png)"
"Example to show How to get Commit Date (#927)  ## What does this change do? Adds a small example of how to get at the date a commit took place.  ### Changes #### doc/examples/Commit.rst Adds a block of code that demonstrates how to get at a commit's date.  ## Motivation This example is in the spirit of #874.  When I began using PyGithub it was not readily apparent to me where the commit date was being abstracted to. Being unfamiliar with Git's API, it took some convincing for me to be satisfied that the `Commit.commit.author/committer.date` path would get me the commit date.  I would hope that this would save somebody a little bit of time in the future.  ## How has this been tested? I've built the docs locally and made sure the HTML is generated as expected.  ## Screenshots ![2018-10-11 3](https://user-images.githubusercontent.com/16039329/46782728-add4d980-ccfd-11e8-88dd-1e48be629eb5.png)"
Fix test
Add highlight search to search_code function (#925)  * :sparkles: add highlight search to search_code function  * :white_check_mark: add highlighting search code tests
adding suspended_at property to NamedUSer (#922)
"New use examples (#920)  This PR add the follow code examples  * Issue examples (get list, get specific issue, create issue) * Milestone examples (get list, get specific milestone, create milestone)  Ref.: https://github.com/PyGithub/PyGithub/issues/874"
Add examples for searching repositories (#874) (#918)
"Improve __repr__ method of Milestone class (#921)  This commit add the title of milestone in string representation of Milestone class. This modification improve readbility of milestone instances.  Before: ```python >>> repo.get_milestone(number=1) Milestone(number=1)  ``` After: ```python >>> repo.get_milestone(number=1) Milestone(title='Milestone Example', number=1)  ```"
Add examples for Repository as per #874 (#917)
"Fix handling of 301 redirects (#916)  Requester.__requestRaw() was handling 301 redirects by passing the full URL to itself, when it only expects a URL path, so parse out the path, and pass that in. Add a test for this behaviour.  Closes: #906"
get repos missing params for authenticated users (#915)  first commit to fix issue #435
"Gists with since (#914)  The Github gists api has a since parameter for the various gist searches.  This adds that parameter to Github.get_gists(), NamedUser.get_gists() and Authenticator.get_gists().  Tests and replay data added/updated as needed.  I added a Time module in the tests directory, containing just a UTCtzinfo class, which I felt I needed for one of the tests (and would probably be useful in other since/until tests).  Might not be the best name for the module but it seemed the least invasive thing to do."
"Line comments are not posted in create_review() (#909)  When create_review() is called with comments in the comments argument, they are not actually posted in the API call."
"Fix totalCount for empty response, closes #905"
Expand nature of rate limit changes in 1.43 (#902)  Document breaking API changes as well as new API additions
Fix Repository.edit (#904)  Allows to pass falsy values to the new arguments introduced in #844.  Closes #903
Add a note about issuing deprecation warning
Publish version 1.43.2
"Restore RateLimit.rate attribute, raise deprecation warning instead"
Publish version 1.43.1
"Add support for projects (#854)  Initial solution for [PyGithub support for projects](https://github.com/PyGithub/PyGithub/issues/606) (#606). Adds comprehensive project querying API.  Currently does not support for modifying projects, columns or cards. (I only need this interface for reporting purposes. Of course once I'm done others are more than welcome to add additional features!)  API that was integrated: https://developer.github.com/v3/projects https://developer.github.com/v3/projects/columns https://developer.github.com/v3/projects/cards  Note that the Github project API is in preview mode - it requires a special header in order for requests to be processed, and the API is subject to change without notice.  ## Summary - new classes: Project, ProjectColumn, ProjectCard - add Organization.get_projects method - add Repository.get_projects method - add MainClass.get_project method - add test cases to exercise all new classes and methods and verify attributes are as expected; replay data is included, recorded (mostly) from my fork of PyGithub - updated add_attribute script to:   - use makeXXXAttribute API   - be able to add to the end of the current set of properties   - handle both Completable and NonCompletable class types correctly  ## Checklist Not to be merged until these are done:  - [x] remaining Project properties - [x] remaining ProjectColumn properties - [x] remaining ProjectCard properties - [x] support for archived_state parameter when getting cards: all,archived, or not_archived - [x] get issue from card, not just pull request (""get_content"" method?) - [x] centralize header management for ""preview"" access to projects API - [x] add test for retrieving organization projects - [x] add test for getting issue / pull request content from card"
Adding actual v1.43 change log
Publish version 1.43
(Try to) re-enable automated release (#872)  Let's use my PyPI user account.
Feature: Search By Topics (#893)
"Adding support for search/graphql rate limit, fixes #553"
"Add missing backticks to Branch Protection docs (#889)  The docstrings for the Branch Protection methods that take classes as arguments were missing backticks for the class name, add them so the docs contain proper links."
"Implement Organization.invite_user (#880)  Utilize the API preview for the organization invite system to allow organization owners to invite outside colloborators either via passing in the user directly, or their email address.      Fixes #851"
Add support for required approving review count (#888)  The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. Add support for it.
"Improve Branch Protection function docstrings (#887)  The docstrings for the edit methods for portions of Branch Protection did not document their arguments and types, add them."
"Implement Repository.get_collaborator_permission (#881)  Add a method to Repository, collaborator_permission that allows users with push access to repositories to query the permission level of collaborators.  Fixes #722"
"Change MainClass.get_repo default laziness (#882)  MainClass.get_repo() used to default to lazy fetching, which is not what NamedUser.get_repo() does, so change the default. Fix the tess to pass lazy=True, so that we don't need to grow 8 ReplayData files with 11 lines of the repository in question.  Fixes #353"
Adding new attributes to IssueEvent (#857)  See Issue #855   The class [IssueEvent](https://github.com/PyGithub/PyGithub/blob/master/github/IssueEvent.py) is missing a large number of attributes documented in the [API](https://developer.github.com/v3/issues/events/).  This is also commented about in #653 to a degree  27 of the tests 27 known event types have tests.  **Currently Tested using Issue #30**             - [x] subscribed - [x] assigned - [x] referenced                - [x] closed                    - [x] labeled                    **Currently Tested using Issue/PR #538** - [x] merged - [x] mentioned - [x] review_requested  **Currently Tested using Issue/PR #857** - [x] reopened - [x] unassigned - [x] unlabeled - [x] renamed - [x] base_ref_changed - [x] head_ref_deleted  - [x] head_ref_restored - [x] milestoned - [x] demilestoned - [x] locked - [x] unlocked - [x] review_dismissed - [x] review_request_removed - [x] marked_as_duplicate - [x] unmarked_as_duplicate - [x] added_to_project        - [x] moved_columns_in_project - [x] removed_from_project - [x] converted_note_to_issue - Note: this event is tied into Issue #866   This PR is now ready to be merged
"Force absolute import, fixes #314"
"Switch remaining try/except tests to assertRaises (#879)  The BadAttributes and Enterprise tests made use of try/except to check details of raised exceptions, so switch to using assertRaises, much like the github.GithubException tests[1].  1: cf056883592b59e2aafe5dde7b94917868b6c315"
"Add Pull Request Examples (#875)  Per @sfdye request, here is an example to acquire Pull Requests."
Set up example docs skeleton
Fix Organization display name
Fix Organization display name
Refactor common header constants and custom media type
"Remove custom swamp-thing-preview header (#873)  The Repository Invitation API graduated on July 17, 2017, so the custom Accept header is no longer required."
"Remove Repository.get_protected_branch (#871)  With both the custom Accept header and the new code that supports the new Branch Protection API, Repository.get_protected_branch() is no longer required, and it also was never tested, so remove it."
Fix a few docs error
Add sphinx setup instruction
Publish version 1.42
Set skip_existing=true for travis upload to pypi
Publish version 1.41
HTTPS for readthedocs everywhere
Sync copyright header
Add allow_redirects option (#858)  Fixes #830  Latest release v1.40 has broken get_archive_link https://github.com/PyGithub/PyGithub/issues/830
Fix a bug cause gistfile.content None. (#486)  Fixes #485   See issue: https://github.com/PyGithub/PyGithub/issues/485
"Use TestCase.assertRaises() (#782)  Now that we no longer support Python 2.6, we can use the assertRaises() method of TestCase as a context manager, tiding up a large amount of technical debt."
"Revert ""Remove NamedUser.contributions (#774)"" (#865)  This reverts commit a519e4675a911a3f20f1ad197cbbbb14bdd1842d.  NamedUser.contributions can be populated, so we should fill in the data.  Fixes #850"
Merge pull request #790 from s-t-e-v-e-n-k/branch-protection-update  Update Branch Protection to current GitHub API
"Update Branch Protection to current GitHub API  The Branch protection API has been radically changed by GitHub, add new methods to Branch reflecting it. Branch protection methods are now called on the Branch object itself, rather than awkwardly hanging off the Repository object and requiring branch names to be passed in.  This adds an over-arching methods to get, edit and remove protection entirely, as well as fine-grained methods for getting, setting and dropping certain aspects of branch protection, as well as three new objects to encompass querying those aspects.  This also destroys Repository.protect_branch(), the endpoint has been removed. The old-style protection attributes on Branch have also been removed to force users onto the new API, since they are still sent, but no longer populated.  Fixes #586"
"Add missing arguments to Repository.edit (#844)  As promised in https://github.com/PyGithub/PyGithub/pull/842, here's a PR to update the `edit` method so that it allows editing the newly added properties."
"Add missing properties to Repository (#842)  Closes #784 Closes #785  First commit fixes a small bug that I observed while trying to record some new test fixtures: the stringification of the headers is not correctly printed as a list of tuples, but as an `iteritems` object, so I forced the list evaluation.  Second commit adds the missing properties `allow_merge_commit`, `allow_rebase_merge`, `allow_squash_merge`, and `has_projects` to the `Repository` class.  Note however that I ran into some trouble while modifying the `edit` method of the `Repository` class to make use of the new properties, specifically while writing tests, so I will fix the `edit` method in a future PR."
"Adding archival support for Repository.edit (#843)  Fixes ##840   Adding archival support to Repository.edit  No unit tests are included for this change because while you can archive a repository via the edit API, there is no way to un-archive a repository via the edit API.  (See: https://developer.github.com/v3/repos/#edit )"
github/stale: use a stale label (#837)  Previously it was defaulting to `wontfix` which may not be the case if an issue just goes idle.
Add tag_name and target_commitish arguments to GitRelease.update_release (#834)  Fixes #833
Allow editing of Team descriptions (#839)  PR https://github.com/PyGithub/PyGithub/pull/753 added this property but forgot to make it editable. The current PR fixes this omission.
"Add description to Organizations (#838)  As mentioned in https://developer.github.com/v3/orgs/, an organization also has a description. This PR adds this attribute to the `Organization` class, as well as modifies its `edit` method so that it's possible to update it.  I noticed too late the [`add_attribute.py` script](https://github.com/PyGithub/PyGithub/blob/8ae2bcb1e6f96beeec99fbbcf00f4af46bb38cde/scripts/add_attribute.py), so I did my modifications by hand, but I noticed that the output of the script and the style used for all the other attributes are different. I preferred the style that is prevalent in the file, rather than the output of the script."
"Revert __len__ for PaginatedList to fix the tests, will revisit later"
"Implement __len__ for PaginatedList, fixes #579, closes #433"
"Calcuate totalCount without iterating PaginatedList (#820)  This PR #596 seems stale, so I have opened up this one with the requested changes from @sfdye.  This is the code from @Tommos0's [comment][1] with some modification.  There are 2 tests failing. I think this is due to the change in the query string and the cached test data just needs to be refreshed for those tests.  [1]: https://github.com/PyGithub/PyGithub/pull/596#issuecomment-315013949"
"Add support for getting / replacing topics (#634) (#832)  * Add support for getting and replacing topics on a repository #634  * Add / fix tests, accept list vs dict for replace_topics (#634)"
Add stale bot
Publish version 1.40
"Test Framework improvement (#795)  Hi!  As part of my app, I use this lib, and then your test Framework to record my own upper level tests. Here's some patches I had to make that I humbly think could interest you:  - As stated by @kyogi14 in [this comment](https://github.com/PyGithub/PyGithub/pull/664#issuecomment-389964369), since you use `requests` recording is broken. This fixes that. - Fix some Python 3 troubles while recording - Add a `replayDataFolder` gloval class variable, to override the default place to put the recording. Otherwise, if a third party app (like mine :)) has a dependency on PyGithub and wants to use the Framework, recordings are saved in `site-packages/github/tests/ReplayData` instead of my own place.  Hope this helps, please let me know if I can improve the PR.  Thanks!"
"Handle HTTP 202 HEAD&GET with a retry (#791)  * Handle HTTP 202 Fixes #564 After some testing, it seems GitHub seems to be able to process the chrunching of statistics for every repository I tested in around 2 seconds. So a delay of around 5 seconds should be plenty to be very certain that the next try should succeed. Another option would be to put this value lower and possibly waste an extra retry on it.  * Only re-request data if HEAD or GET (those are 'safe') to e.g. avoid running a duplicate POST or PUT, that can change stuff on the server Using RFC 2616 and https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html as guideline  * Fix testStatistics  * change wait time to 2 secs"
"Fix github API requests after asset upload (#771)  In the old code the self.__hostname would be overwritten with uploads.github.com but it could not be correctly re-set to api.github.com after completing the upload Create a separate connection if hostname or port differ in requestBlobAndCheck  in the end this became quite a large overhaul, to also make this change generic for e.g. connecting to status.github.com and similar methods  ~~not sure if tests need (more) updating, if so I will update the PR accordingly~~"
"GitRelease methods documentation (#821)  Hi, here's my small contribution to the documentation in relation to #819   Few things: * the `delete_release` method always returns `True` so not sure if the return type is truly valid - potentially a bug * I've tried generating the documentation locally to check if formatting is ok but failed - is there a guide to it?   I followed the read the docs starter guide but that didn't seem to reflect the way it's done here"
"Add remove_membership() method to Teams class (#807)  Per the Github v3 API [docs](https://developer.github.com/v3/teams/members/#deprecation-notice-2), the ""remove team member"" api is deprecated. This PR implements the new API call.  Deprecated API: ``` DELETE /teams/:team_id/members/:username ```  New API: ``` DELETE /teams/:team_id/memberships/:username ```  This PR also adds a `deprecation` notice to the docstring of the deprecated methods."
Add check-in to projects using PyGithub (#814)  * Add check-in to projects using PyGithub  * Drop pip install link
"Adding project name into ""Projects using PyGithub"" (#815)"
Fix incorrect formatting in docstrings (#816)
Add tests for mergeable state (#801)
Include target_commitish in GitRelease (#788)
Publish version 1.40a4
increase default timeout to be > github request timeout (#793)  * increase default timeout to 15s  * Update MainClass.py
Fix Team.description (#797)  fixes #796
"Add Satsuki, closes #798"
Fix Content-Length invalid headers exception (#787)
"Include GitReleaseAsset test, closes #778"
"Remove NamedUser.contributions (#774)  The contributions attribute is no longer sent by Github for NamedUsers, so remove the attribute.  Fixes #443"
"Branch protection methods no longer require loki (#775)  The Branch Protection API graduated September 1, 2017, so remove use of the loki-preview+json header."
Publish version 1.40a3
Add ability to skip SSL verify from requests (#758)
Add GHE simple sample
"Correct Repository.get_git_tree recursive use (#767)  The API docs for Repository.get_git_tree specify that the URL parameter for fetching a tree recursively should be ?recursive=1, not a truthy value. To not change the API we present, check if it is True before setting it to 1. Change another callsite of Repository.get_git_tree to specify recursive=False to make sure it doesn't appear in the query string.  Fixes #560"
Publish version 1.40a2
"Correct docstring for set_labels (#766)  Both Issue and PullRequest have a set_labels method whose docstring did not exactly describe the parameter, correct it."
"Re-work PullRequest reviewer request (#765)  Add create_review_request() and delete_review_request() methods to PullRequest, as well as renaming get_reviewer_requests() to get_review_requests() and cleaning up its return value to firstly respect teams, and secondly to cut out the middleman of PullRequestReviewerRequests, which has been removed.  Fixes #597"
"Add support for team privacy (#763)  Teams contain support for privacy, by being either closed, or secret. Export the string via a property, and allow editing it via the edit method."
"PullRequest review methods no longer need black cats (#760)  The preview period of the PullRequest review API ended May 9, 2017 so remove the custom Accept headers for the relevant methods."
Correct PullRequest.get_reviewer_requests() rtype (#761)  The return type of PullRequest.get_reviewer_requests() is a PaginatedList containing PullRequestReviewerRequest.
API outside collaborators (#533)  * API outside collaborators  * Include remaining to organization api calls.
Team description added to Team.py (#753)  * team description added to Team.py  * minor correction on initAttributes
"Make use of issue_url in PullRequest (#755)  Clean up some of the issue methods in PullRequest to make use of the issue_url property, rather than chopping pieces off the URL to replace /pulls/ with /issues/."
Publish version 1.40a1
"Use 'requests' instead of 'httplib' (#664)  * works (but tests fail)  * Refactor to use python requests rather than httplib  * add requests dependency in setup.py  * touch so travis-ci will run  * clean up some unused comments  * Handle HTTP vs HTTPS; handle custom base_url  * Use requests session  * Don't use a persistent session in tests (which don't use the real requests library)  * Use an older version of requests for python 3.2  Requests dropped support for Python 3.2 in the 2.10 series (though it didn't detect this until 2.11).  PyGithub probably doesn't need to support Python 3.2 at all; it's quite old, with negligably few users, but that should be addressed elsewhere.  * Revert ""Use an older version of requests for python 3.2""  This reverts commit fb0367614f5413968eeab98f4094e710aa1bc2d1.  * Improve readability  * Update requirements.txt  * Disable custom proxy handling code (unneeded and broken); use requests'  * Remove comment and superflous code  * Fix iteritems() removal from Python3  * pin requests to 2.14.0 or greater in prep for no_proxy  * pin requests to 2.14.0 or greater in prep for no_proxy"
"PullRequest labels should use Issues URL (#754)  The Github API docs for PullRequests say to make use of the Issues API to add, remove, set and query labels. This means that we need to make use of the issue_url property for the PullRequest, not its own URL."
Fix changelog today generation
"Support labels for PullRequests (#752)  PullRequests can also have labels attached to them, like Issues or Milestones. Extend PullRequest to also export them if they are present, as well as adding methods to add, remove and set labels."
Add get_organizations() (#748)  * Add get_organizations()  * Add unit tests for get_organizations
Publish version 1.39
Add documentation to github.Repository.Repository.create_git_release() (#747)
"Add add_to_members() and remove_from_membership() (#741)  * Add methods add_to_members(), has_in_pending_members(), and remove_from_membership() methods to Organization class.  * Add scrubbed replay files used for testing  * More massaging of test data  * Fix URL to remove organization membership  * Remove `has_in_pending_members()` method"
documentation: clarify semantics of get_comments (#743)
Add Gitana to projects using PyGithub
"Add download_url to ContentFile, closes #575"
Add PullRequestComment.in_reply_to_id (#718)  Fix for issue #717
Add team privacy parameter to create team (#702)  * Add team privacy and add additional parameter to test. Still requires replaydata  * Reorder parameters to not break existing code  * Update tests for #702
Implement License API (#734)  * Implement License API  * Update copyright
Fix delete method for RepositoryKey
Remove edit for UserKey as it's immutable now
"Labels API: support description (#738)  The description attribute handling requirement is   a custom media type in the Accept header:     application/vnd.github.symmetra-preview+json  Limitation: Repository.get_labels does not report description, possibly something has changed in the preview API."
Added Issue.as_pull_request() and PullReqest.as_issue() (#630)
Add TravisBuddy
"docs: sort the Github Objects (#735)  It's difficult to follow the API docs when the order isn't alphabetical. This seems like the simplest fix, and worked well locally."
Fix a bug for test recording when input is None
Add support for getting PR single review's comments. (#670)
"Update the RepositoryKey class (#530)  # The problems I attempt to solve  - `RepositoryKey.created_at` is available on the Github API, but not in PyGithub - `RepositoryKey.edit()` is not supported anymore by the Github API, see https://developer.github.com/v3/repos/keys/#edit-a-deploy-key  # How I went about solving the problem  I added myself a new deploy key to one of my repositories, and recorded the existing tests using my account. I could not keep the existing test data as the specified key does not exist anymore, I added a comment for the next contributor to help him figure out how to record new tests."
adding since to PR review comments get (#577)
Remove some duplicate attributes introduced in #522
"added tarball_url, zipball_url, prerelease and draft property (#522)  * added tarball_url, zipball_url, prerelease and draft property to GitRelease  * Add tests for new attributes"
"Source Import API (#673)  * add import source  * add import header  * create/get source import for repo, SourceImport class  * Corrected use_lfs, not considered completed with creation  * vcs creds optional  * SourceImport test, removed unneeded attributes  * create/get source import tests for repo  * Encoding and copyright comment  * styling fixes  * Update SourceImport.py  * Update SourceImport.py  * Update SourceImport.py"
Fix typo
Publish version 1.38
Added option to create review for Pull request (#662)  * Added option to create review for Pull request  * Fix tests
Depreciate legacy search API
"Update introduction.rst, closes #636"
Filter team members  by role (#491)  * Team: support filtering members by role  * Team: support adding membership with role
Merge remote-tracking branch 'origin/master'
Clean up
Update CONTRIBUTING.md
Apply fix_headers script to update copyright info
"Add url attribute to PullRequestReview object (#731)  To compare PullRequestReview objects, they need to have the 'url' attribute because the CompletableGithubObject expects to be able to inspect a '_url' attribute on objects when testing for equality."
"Added target_commitish option to Repository.create_git_release() (#625)  * Added is_draft and is_prerelease property to GitRelease  * Added target_commitish option to Repository.create_git_release()  * Added test for Repository.create_git_release()  * Renamed attr of GitRelease: is_draft, is_prerelease -> draft, prerelease"
Update Sphinx conf
Fix copyright formatting
Update doc link in copyright text
Fix broken Github reference link in class docstrings
"Add hook support for organizations (#729)  * Add hook support for organizations Specifically, the create_hook, get_hook, and get_hooks calls  * Added support for the edit and delete hook functions"
Use a more modern sphinx theme
Get organization from the team (#590)  * Get organization from the team  * Fix ReplayData for Team
"Add gitsuggest, fixes #581"
Add a Gitter chat badge to README.md (#728)  * Add Gitter badge  * Update README.md
"Remove contributing from readthedocs, closes #714"
Add codetriage badge
Finished search_commits PR (#727)  * Added support for newer commit search API endpoint  * Added tests for new commit search method on main Github class  * Fixed sort parameter of search_commits
Collaborator site admin (#719)  * Add admin_user property to NamedUser  * Fix type from string to bool for site_admin property  * Add a test for site_admin
"Fix add_to_watched for AuthenticatedUser (#716)  * 'watching' != 'staring'   The functionality was completely broken - api endpoints were wrong/didn't work. Tested by logging in as an authenticated user - verified listing watches, add watch, and remove watch.  * fix unit tests"
Update doc link for PyPI
Publish version 1.37
Using latest version of doc for badge
Make sphinx work again
Add @sfdye to MAINTAINERS
Add __eq__ and __hash__ to NamedUser (#706)  * Add __eq__ and __hash__ to NamedUser  * Remove extra outer brackets from __eq__ in NamedUser  * Add unit tests for __eq__ and __hash__  * Remove redundant brackets in __eq__ : NamedUser
Add maintainer can modify flag to create pull request (#703)  * Add flag for maintainer can modify when creating pull requests  * Change default to be None to let github decide the behaviour  * Update docstring  * Follow conventions from other functions
Fix typo in Design.md (#701)
Add role parameter to Team.add_membership method (#638)
Add add_membership testcase (#637)
Fix changelog formatting
Publish version 1.36
Fix changelog generation  '\n' wasn't getting interpretted as a new line.
Add collaborator permission support (#699)
Use datetime object in create_milestone (#698)  Method create_milestone now uses datetime object to fit better with v3 API using ISO8601.  Date object still allowed for backward compatibility.
Fix date format for milestone creation (#593)
"Remove the default ""null"" input send during GET request (#691)  * Remove the default ""null"" input send during GET request  * Remove the 'null' value from all tests"
Updated PullRequest reviewer request according to API changes (#690)  https://developer.github.com/changes/2018-01-24-end-thor-preview/
make created_at/published_at attrs available for Release objects (#689)
Add committer/author to Repository.delete_file (#678)
Add method to get latest release of a repository (#609)
Add permissions field to NamedUser (#676)
:recycle: Fix all pep8 coding conventions
:sparkles: Add new params for /users/:user/repos endpoint
"Add support for changing PR head commit (#632)  * Add support for changing PR head commit  Signed-off-by: Thibault Jamet <tjamet@users.noreply.github.com>  * Add support for custom commit arguments  Add commit_title, merge_method and sha arguments to the pull request merge method  Signed-off-by: Thibault Jamet <tjamet@users.noreply.github.com>"
"Use print() syntax in README (#681)  Since 2.7 supports this syntax as well, this will help not to confuse new people."
Add PyPI badge and installation instructions to README (#682)
Drop support for EOL Python 2.5-2.6 and 3.2-3.3 (#674)
Add Reactions feature (#671)  * List reactions of issue  * Create issue reaction  * List reactions of an issue comment  * Create a reaction on an issue comment  * List reactions of a commit comment  *  Create a reaction on a commit comment  * List reactions of a pull request review comment  * Create a reaction on a pull request review comment  * Delete reaction  * Renames IssueReaction to Reaction  * Fixes docstring in Reaction class  * Removes issue_url on Reaction class  * Fixes string concatenation that does not work on python 2.6
Add ping_url and ping to Hook (#669)
Add Repository.archived property (#657)
Add unit test for tree attribute of GitCommit (#668)
Add read_only attribute to Deploy Keys (#570)
Doc create instance from token (#667)
"Fix uploading binary files on Python 3 (#621)  There is a bit of logic for Python 2 that detects if you're uploading string or bytes, but this is missing for Python 3."
Decode jwt bytes object in Python 3 (#633)
Remove broken downloads badge (#644)  See https://github.com/badges/shields/issues/716
Added missing parameters for repo creation (#623)  * Added missing parameters to organisation repo creation  * team_id should already be an id not a team object  * Name arguments in the test  * Fixed assertion check  * Added missing parameters to user repo creation  * Fixed comments
Add ability to access github Release Asset API. (#525)  * Add ability to access github Release Asset API. See: https://developer.github.com/v3/repos/releases
"Add 'submitted at' to PullRequestReview (#565)  This field is not currently listed in the Github documentation at https://developer.github.com/v3/pulls/reviews/, but it's been included since Github 2.9  (It even exists in the test data returned for the original PullRequestReview PR)"
Quote path for /contents API (#614)  This allows spaces and other special characters in the file path.  Fixes #613.
Merge pull request #618 from TiagoDanin-Forks/doc  Updated references in introduction.rst
Merge pull request #643 from hugovk/patch-1  Add Python 3.6
Add Python 3.6
Add Python 3.6
Updated references in introduction.rst
Merge pull request #529 from sharkykh/patch-1  Import missing exception
fix failing tests on py26
"new release, 1.35"
added repository collaborator invitation
reformat changelog
"Merge pull request #557 from paulortman/master  add ""integration"" install option with minimal docs"
"add ""integration"" install option with minimal docs"
Publish version 1.34
Publish version
Merge pull request #544 from felixonmars/patch-1  Update requirements to match the latest pyjwt switch
Update requirements to match the latest pyjwt switch
Publish version 1.33
"switch to pyjwt, python-jose is not secure"
Merge pull request #538 from allevin/Add_Pull_Request_Reviews_Feature  Add Support for Pull Request Reviews feature
Updates to API and changes to resolve testing issues.
Add testing for Pull Request Reviews and Review Requests
Remove unnecessary lines
Add Support for Pull Request Reviews feature
Import missing exception  TwoFactorException was missing on GithubException import line
new release 1.32
Merge pull request #519 from PyGithub/integrations-installation  adding support for the integrations installation endpoint
adding support for the integrations installation endpoint
Merge pull request #518 from khornberg/patch-1  Correct stable version in documentation
Correct stable version in documentation
new release 1.31
Merge pull request #449 from PyGithub/integrations  GitHub integrations support
Support HTTP 302 redirect in Organization.has_in_members
Add details of repo type for get_repos documentation  Taken from https://developer.github.com/v3/repos/#list-organization-repositories
fix repository
Merge pull request #469 from tmshn/support-multiple-assignees  Support multiple assignees on Issue & PullRequest
Merge pull request #499 from gamefiend/qhm-docs  An easier to see link to the documentation in response to issue #480.
Merge pull request #357 from felixonmars/master  Note explicit support for Python 3.5
Note explicit support for Python 3.5
Merge pull request #506 from jamesbroadhead/fix_readme  Fix README instructions
Fix README instructions
An easier to see link to the documentation in response to issue #480.
Merge pull request #495 from sjcorbett/fix/githubobject-repr  Encode GithubObject repr values in utf-8
Encode GithubObject repr values in utf-8 when using Python2
Merge pull request #492 from Sylvus/master  Added support for subscribers_count
Updated documentation
Added a subscribers count field
"Added ""add_to_assignees"" & ""remove_from_assignees"" method to Issue object."
"Added ""assignees"" attribute to PullRequest object."
Merge pull request #479 from ben-whitney/html_url_release  add html_url to GitRelease
add html_url to GitRelease
Merge pull request #476 from jwilk/unused-imports  Removed unused imports
"Removed unused imports  Since 1d9ad14fa918, the setup script no longer uses subprocess, shutil and os modules."
Merge pull request #475 from jwilk/spelling  Fix typo in a constant
Merge pull request #474 from jwilk/rst-formatting  Fix changelog formatting glitch
Fix typo in a constant
Fix changelog formatting glitch  reStructuredText parser doesn't consider backquote as closing if it's immediately followed by a letter.
"Added ""assignees"" argument in Repository.create_issue()"
"Enhance support of ""assignees"" argument in Issue.edit()"
"Added ""assignees"" attribute to Issue object."
Publish version 1.29
Merge pull request #448 from PyGithub/contentfile-listing  Support directories in repo.get_contents
Merge pull request #466 from PyGithub/issue-assignees  Issue assignees
add issue assignee param
Merge pull request #462 from geex-arts/fix-rate-limit-exception  Fix diffrerent case
Fix diffrerent case
Merge pull request #454 from mattjmorrison/add-team-repo-permissions  Add ability to set permission for team repo
Merge pull request #451 from geex-arts/fix-redirects  Fix status check
Merge pull request #455 from matthew-brett/install-gh-update  DOC: remove easy_install suggestion; update links
"DOC: remove easy_install suggestion; update links  Remove suggestion to use easy_install, it's strongly deprecated now.  Change github.com/jacquev6 to github.com/PyGithub"
Add permission param documentation
Add ability to set permission for team repo  https://developer.github.com/v3/orgs/teams/#add-or-update-team-repository
Fix status check
adds GitHub integrations
adds support for content dirs
Publish version 1.28
Merge pull request #445 from PyGithub/nicer-repr  Nicer __repr__ for GithubObjects
test against python 3.5
sort params and make them work on py3
adds a nicer __repr__
Merge pull request #442 from jaredsmith/master  Properly handle HTTP Proxy authentication with Python 3
Add missing space
Properly handle HTTP Proxy authentication with Python 3
Merge pull request #438 from fukatani/fix-typo-repo  Fix small typo
Fix small typo
push to 'origin' instead of 'github'
Publish version 1.27.1
update the pypi password to cut a new release
Publish version 1.27.0
leave out the doc part during publish
Merge pull request #437 from PyGithub/travis  Releases based on travis
upgrade release process based on travis
"Merge pull request #436 from GHfan/unicode_content_file_support_py2  change file content encoding to support unicode(like chinese), py2"
"change file content encoding to support unicode(like chinese), py2"
adds missing testfile corrections
"fixed file API return values  The returned objects were not correctly populated, leaving us with empty objects.  This is now fixed."
assert by str and unicode to make it more py3 friendly
"Patch issue 358 status context (#428)  * Add ""context"" to CommitStatus * Add testcase for context in CommitStatus"
"Adding ""since"" param to Issue.get_comments() (#426)"
Merge branch 'enix223-master'
Merge branch 'master' of https://github.com/enix223/PyGithub into enix223-master
update doc url everywhere (#420)
fix a couple typos to be clearer (#419)
Merge pull request #417 from edunham/explain-authed-user  Document how one gets an AuthenticatedUser object
Document how one gets an AuthenticatedUser object
Merge pull request #413 from proyvind/proyvind-fixes  fix wrong expectance on requestJsonAndCheck() returning {} if no data
"fix wrong expectance on requestJsonAndCheck() returning {} if no data  When there's no data, requestJsonAndCheck(), or rather __structuredFromJson() returns None rather than {}. As both None & {} evaluates to false, 'if not data:' will give the correct behaviour regardless of returning {} or None."
Merge pull request #403 from mat128/handle_redirects  Follow redirects in the case of a 301 status code
Merge pull request #412 from jeffreymelvin-wf/expose_previous_filename_for_renamed_files  Add previous_filename property to File
Add previous_filename property to File
add changelog entry for 1.26.0
update project files
fix update/create/delete file api return value issue
fix typo
Merge branch 'master' of https://github.com/enix223/PyGithub
fix update/delete/create content return value invalid issue
Follow redirects in the case of a 301 status code
Merge pull request #395 from jlafleche/jlf/fixExceptionPickling  Fix for pickling exception when deserializing GithubException.
"Fix for pickling exception when deserializing GithubException.  See: https://bugs.python.org/issue9400  ""Because CalledProcessError extends PyExc_BaseException, which defines a __reduce__ method, that special method cause the pickle load to call the exception type's __init__ method with packed self.args as arguments. So if a subclass of ""Exception"" needs to behave correctly in pickling, it should make self.args meet its __init__ method's function signature. """
Merge pull request #384 from virtuald/patch-1  add support for the head parameter in Repository.get_pulls
add support for the head parameter in Repository.get_pulls
Merge pull request #382 from doctoryes/master  Add ability to check combined status.
Add:   - CommitCombinedStatus class   - get_combined_status() to Commit class to return combined status   - Add test for combined status.
fix python3 compatibility issue for using json/base64
remove not covered API from readme
change replay data for update file test case
fix python3 compatability error in test case
Add repo content create/update/delete testcase
add MAINTAINERS file  [skip ci]
travis: disable email
fix protect branch tests
Merge pull request #372 from khornberg/protect-branch  Add branch protection endpoint
Add branch protection endpoint
fix request parameters issue
add content file create/update/delete api
Merge pull request #365 from PyGithub/nhomar-travis-button  Add travis button on README.
Add travis button on README.
Merge pull request #364 from tapilab/master  fix misspelling: https://github.com/PyGithub/PyGithub/issues/363
Merge pull request #364 from tapilab/master  fix misspelling: https://github.com/PyGithub/PyGithub/issues/363
fix misspelling: https://github.com/PyGithub/PyGithub/issues/363
"Merge pull request #360 from allevin/master  Add support for the ""base"" parameter in the repository get_pulls() method."
Adding base parameter to get_pulls() method.
Merge pull request #355 from kevinsl/master  add support for the direction parameter in Repository.get_pulls
add support for the direction parameter in Repository.get_pulls
Merge pull request #354 from jayfk/creator-parameter  Add creator to get_issues
added creator parameter
Publish version
Merge pull request #352 from babineaum/patch-1  Updating doc link for Github Commit Statuses
Update CommitStatus.py
Merge pull request #347 from danvk/starred-at  Add repo.get_stargazers_with_dates()
Add repo.get_stargazers_with_dates()
Merge pull request #346 from danvk/paginated-headers  Thread headers through PaginatedList
Thread headers through PaginatedList
Merge pull request #343 from umeboshi2/master  support long integers in get_repo
support long integers in get_repo
Merge pull request #340 from crwilcox/master  Fixes #339 by allowing strings in the labels list.
Add test for #339 fix
Fixes #339 by allowing strings in the labels list.
Merge pull request #336 from klnrajareddy/master  Fixing https://github.com/PyGithub/PyGithub/issues/335.
Fixing https://github.com/PyGithub/PyGithub/issues/335. Issue.remove_from_labels fails when the label passed is a string with whitespace characters
Merge pull request #334 from sbesson/org_members_filter_role  Add support for filter/role options in Organization.get_members()
Add trailing underscore to filter_ and use {} as the default dict
Add support for filter/role options in Organization.get_members()
Merge pull request #326 from kokosing/feature_add-gifi-usage  Documentation: add git-gifi usage to list of projects using PyGithub
Documentation: add git-gifi usage to list of projects using PyGithub
"use containers on travis-ci  by setting sudo=false, travis-ci can optimize our tests to run in a container, which is much faster"
Merge pull request #308 from jhermann/patch-1  Fixed documentation link
Merge pull request #315 from edhollandAL/master  Freshen master with changes from develop
Merge pull request #1 from edhollandAL/develop  Freshen master with changes from develop
Fix style problems in new code
"Add support for github releases. Includes methods for creating + getting releases, but no support for assests yet"
Merge pull request #309 from beugley/master  Connect through a proxy with authentication
code improvement
"Get proxy info from http_proxy first, HTTP_PROXY second"
Connect through a proxy with authentication
Fixed documentation link
Merge pull request #305 from Jucyio/develop  Add support to create Repository objects lazily in MainClass.
Merge pull request #307 from Jucyio/tokentest  Support recording tests when using an OAuth token
Add support to record tests using the oauth token instead of a username/password. This lets people whose account uses 2-factor authentication record tests.
"Add support to create Repository objects lazily in MainClass.  This lets users do the following without issuing an unnecessary request:  issues_of_my_repository = g.get_repo('PyGithub/PyGithub').get_issues()  Since the GithubObject layer handles laziness transparently, lazy loading is enabled by default, and can be disabled via the `lazy` kwarg. This does not affect any test except tests that pertain to caching or laziness itself."
Merge pull request #290 from ndahlquist/develop  Change InputGitAuthor to reflect that time is an optional parameter.
Merge pull request #294 from dpocock/dpocock-accept  Allow access to preview versions of the server-side API
Merge pull request #284 from xorel/develop  Add team membership add call
Merge pull request #301 from sbellem/patch-1  fixed small typo
fixed typo
Merge pull request #293 from dpocock/dpocock-using  doc: add github-icalendar to list of projects using pygithub
Merge pull request #295 from ewalker11/develop  Fix paginated list handling of 204 No Content
Merge pull request #292 from jondb/master  Added sort option to get_pulls.
Merge pull request #289 from andycasey/master  Add optional context when creating a status for a commit
"Merge pull request #296 from cclauss/patch-1  Fix broken links under ""What's next?"""
Merge pull request #288 from DevTable/master  Remove URL scheme assertion. Fixes #287.
Fix link
Looking for volunteers
"Fix broken links under ""What's next?"""
Use more primitive asserts for Python 2.6
Fix paginated list handling of 204s
Allow access to preview versions of the server-side API
doc: add github-icalendar to list of projects using pygithub
Added sort option to get_pulls.
Change InputGitAuthor to reflect that time is an optional parameter.
Post context information when creating status  as per https://developer.github.com/v3/repos/statuses/#create-a-status
Remove URL scheme assertion.  This part of the URL isn't used and can be wrong due to bugs in GitHub Enterprise.
Add team membership call
Update README.rst
Publish version 1.25.2
Merge commit 'refs/pull/277/head'
Work-around Issue278
Added MANIFEST.in
Publish version 1.25.1
Merge commit 'pull/275/head'
Capitalization of the 2FA OTP request header
Update README.rst
Update readme
Fix typo in README
Merge pull request #255 from frewsxcv/patch-1  Enable automated testing on Python 3.4
Enable automated testing on Python 3.4
Fix doc links (#248)
Merge pull request #249 from lurch/patch-1  documentation typos
documentation typos
Publish version 1.25.0
"pep8  This is strange, maybe Cygwin's version is stricter. No time to investigate."
Merge branch 'pr247' into develop
"Prepare merge of #247  - refactor Gists tests - re-add Gist.user to not break client code (value as been None for a while, but let's not remove the attribute)"
Acknowledge some lack of test coverage
Merge branch 'develop' of https://github.com/tylertreat/PyGithub into develop
v3 changes gist.user to gist.owner
"Implement support for getting repo by id  This allows the Github class to retrieve repos by either their full name or id. If the user passes in an id for a repo which doesn't exist or in which they don't have sufficient permissions, an UnknownObjectException will be raised. This addresses issue #245."
Typo
Put v2 alpha 2 in main Readme
Publish version 1.24.1
Fix urlencoding for search (see #237)  Parameters are encoded in Requester => simply remove urllib.quote Path needs to be encoded => change to urllib.quote_plus as in #237
Merge branch 'fix_search_quoting' of https://github.com/cro/PyGithub into pr/237
Fix ContentFile.decoded_content for Python 3.0 to 3.2
Change quote to quote_plus and avoid double-escaping some problematic characters.
Typos
Publish version 1.24.0
Fix doc (#224)
Fix tests for Python 3
Merge branch 'pr224'
Restore coverage for several previous PRs
Merge branch 'develop'
Readme
"Fix add_attribute insertion logic  The code didn't work if it couldn't find a property in the file that is lexicographically greater than the new attribute. It now accepts _identity as an ""end point"" to insert before, and empty lines in _initAttributes() and _useAttributes(), as they mark the end of the method.  Also add ""float"" as a possible type, mainly for the ""score"" attribute in search results."
"Add decoded_content property to ContentFile  The only encoding currently supported is base64, but that's ok, since v3 of the GitHub API only mentions base64."
"Add code search  Code search results are content resources with an embedded repository. The ""content"" and ""encoding"" attributes aren't returned and require completion."
Add issue search  Qualifiers can be added via keyword args in order to keep the method uncluttered. Qualifiers could also be given in the query string directly.
Add user search  Qualifiers can be added via keyword args in order to keep the method uncluttered. Qualifiers could also be given in the query string directly.
Add repository search  Qualifiers can be added via keyword args in order to keep the method uncluttered. Qualifiers could also be given in the query string directly.
"Make PaginatedList support the search wrapper JSON  For /search resources the resulting JSON contains 'total_count' and 'items'. The latter is the list PaginatedList expects, so just transparently use that list. Everything else works just like other lists.  Also change __grow()'s visibility to allow PaginatedList to use it in order to peek at 'total_count', making it available as a property."
Adapt doc generation to v1/v2
Merge pull request #221 from clouserw/patch-1  fix typos
one more typo
fix typos
Add reference of import twitter
Publish version 1.23.0
Merge branch 'develop'
Merge branch 'pr220' into develop
Integrate #220 (fix tests and pep8)
Merge branch 'develop'
Merge pull request #218 from farrd/master  Can now specify assignee as a string
Fix #216: handle 'Link' header  Headers with capitals are returned by http.client (replacing httplib in Python 3)
Added onetime_password to create_authorization  github.AuthenticatedUser.create_authorization has been modified to support two-factor authentication. When two-factor authentication is enabled create_authorization will throw an TwoFactorException. The onetime password can be then be passed to create_authorization on a subsequent call.
meeting coding conventions
adding the tests for issue 214
Now accepts strings for assignee.  When calling pygithub for calls associated with assignees you can now simply pass a string instead of a NamedUser object. This applies to the following methods: - issue.edit() - repo.create_issue() - repo.get_issues() - repo.has_in_assignees() - repo.has_in_collaborators() - repo.remove_from_collaborators() - repo.add_to_collaborators()
Publish version 1.22.0
Remove Python 2.5 which seems broken on Travis  https://travis-ci.org/jacquev6/PyGithub/jobs/15501387
Merge branch 'pr213' into develop
Merge branch 'pr212' into develop
Add /user/teams (GET)
Added 'stargazers_count' property to Repository
Add initial version of getemojis
Publish version 1.21.0
Merge branch 'develop'
Update readme for #203
Fix tests for Python 2.5 and 2.6
Finish .../stats/... (#203)
Fix copyright headers
First step of implementation of Repository.get_stats_xxx (#203)
Fix doc
Fix tests broken by previous commit
Push to master to reset statistics
Add 'author' to 'Repository.get_commits' (#204)
Implement equality comparison of CompletableGithubObject (#201)
Acknowledge lack of test coverage in the old Download API
"Accept strings as well as Label objects (#202)  This should be more generic, but it's a wig work to do it everywhere. Let's keep that in mind for V2."
Twitt about releases
Publish version 1.20.0
Merge branch 'develop'
Remove tests for deleted methods!
Add a link to DevAssistant (#197)
Remove dead link (#198)
Update the list of unsupported APIs  We have some work to do!
Remove Repository.create_download and NamedUser.create_gist
Fix public/private in Repository.edit (#199)
Fix (?) Travis for Python 2.5 and 2.6
Merge branch 'topic/RaiseLaterInCaseOfBadData' into develop
Raise exception only when user *accesses* an attribute with a bad value (#195)
Factorize
Factorize the creation of attributes (preparation for #195)
Use ValuedAttribute and NotSet.value (preparation for #195)
Fix typo
Github.get_hook (#196)
Publish version 1.19.0
Merge branch 'develop'
Make Rate.reset an UTC datetime
Small updates of doc
Add many missing attributes
Homogenize AllTests.py
./manage.sh fix_headers
Github.get_rate_limit
Acknowledge branch coverage lack
Update readme
Merge branch 'topic/ApiStatus' into develop
Get status of Github API (#188)
Add default parameters to greatly reduce code redoundancy
Fix doc generation
Small fixes and todos
Don't assume there is a 'message' field in case of error
Merge branch 'topic/ConditionalRequest' into develop  Conflicts: 	README.rst
Say thank you to stargazers
Update readme
Adapt to Python 2.5 (again:))
Adapt to Python 2.5
Implement object persistence  This follows my proposal for #193. Largely inspired by AKFish's work.
Fix line ending
Move the DEBUG_ON_RESPONSE call to Requester.__requestEncode
Move method update to CompletableGithubObject
#193: Fix test coverage
#193: Add a param to Requester.requestXxx for request headers
#193: Add remarks
"#193: Don't use a try-except for a usual execution flow in GithubObject.update  (and factorize assignment of headers in _storeAndUseAttributes, as done for rawData)"
Separate tests for conditional requests (#193)
Remove _record_.py (#193)  According to https://github.com/jacquev6/PyGithub/commit/0f74e4389b3c0fa57a83083ecfbbf5c331022674#commitcomment-3919786
Fix remarks on #189 to #193
"Review of #189: pep8, copyrights, style, remarks  For remarks, run: git grep ""#189"" They are only my first thoughts while reviewing this pull request, and should be reviewed themselves."
Review of #189: use dict.get  http://docs.python.org/2/library/stdtypes.html#dict.get
Merge branch 'develop' into topic/ConditionalRequest  Conflicts: 	.gitignore 	github/Requester.py
"Fix merge of #192  One branch modified signature of constructors, another branch added a call to a constructor."
Merge branch 'topic/RememberHeaders' into develop (#192)  Conflicts: 	github/Issue.py 	github/MainClass.py 	github/PaginatedList.py 	github/Repository.py 	github/Requester.py
Don't fix headers in /build
"First review of #192 (pep8, headers... nothing important)  ./manage.sh check ./manage.sh fix_headers"
Add test case for conditional request
Add test record helper
Fix update
Github.get_repos (to get all public repositories)
NamedUser.has_in_following
Use POST /repos/:owner/:repo/hooks/:id/tests instead of POST /repos/:owner/:repo/hooks/:id/test
Use POST /gists/:id/forks instead of POST /gists/:id/fork
Fix date of 1.18.0
Fix date of 1.18.0
Implement conditional request
Handle response code 304
Add NotModifiedException class
Add update() method
Publish version 1.18.0
Implement data persistence
pep8
Merge branch 'develop'
Run compare_to_api_ref_doc.py
Fix copyrights (#181 #182 #184 #186 #187)
Assert response headers
Enable debug in TestCase
Add debug / test mechanism
Update readme and doc for #184
Make PaginatedList.reversed return a new list (follow-up #184)  This will avoid surprises if both the list and its reversed version are iterated.
Merge branch 'topic/ReversePagination' into develop
Update copyright information
Clean up
Remove helper method in Legacy.py
Remove helper method in PaginatedList.py
Update UserKey.py
Update Team.py
Update Repository.py
Update PullRequest.py
Update Organization.py
Update Notification.py
Update NamedUser.py
Update Milestone.py
Update Label.py
Update IssueEvent.py
Update IssueComment.py
Update Issue.py
Update Hook.py
Update GitTree
Update GitTag.py
Update GitRef.py
Update GitBlob.py
Update Gist*.py
Update Download.py
Update ContentFile.py
Update Comparision.py
Update CommitComment.py
Update Commit.py and GitCommit.py
Update AuthorizationApplication.py
Update Authorization.py
Update AuthenticatedUser.py
Update RepositoryKey.py
Change CompletableGithubObject.__init__ without breaking build.
Clean up. NonCompletableGithubObject refactoring resolved.
Update Plan.py
Update PulllRequestPart.py
Fix PullRequestMergeStatus.py
Update Hook.py
Fix CommitStats.py
Update Permissions.py
Update Notification.py
Update IssuePullRequest.py
Update HookDescription.py.
Update GitTree.py
Update GitObject.py
Update GitignoreTemplate.py
Update GitAuthor.py
Update Gist.py
Update File.py
Update Branch.py
Update Event.py
Update CommitStatus.py
Update Tag.py
Change NonCompletableGithubObject without breaking build.
Change GithubObject.__init__ without breaking build.
Update .gitignore to ignore eproject settings and custom build batch files
Update readme
Add test coverage for #182
Merge branch 'topic/HandleNonJsonResponses' into develop
Improve coverage for #187
Update readme
Merge branch 'topic/AddParamsToRepositoryGetCommits' into develop
Improve coverage
Update readme
Merge branch 'topic/ImproveRateLimiting' into develop
Be explicit about test coverage lacking in Notification.py
Fix readme :-D
Split manage.sh test
Merge branch 'topic/KnowYourParent' into develop
Update readme
Merge branch 'develop' into topic/KnowYourParent
"Adding since, until parameters to Repository.getCommits()"
"Minor enhancements to rate limiting information  If rate limiting information hasn't been retrieved already, it will be checked rather than just assuming 5000 requests remaining of 5000.  Add an additional attribute `rate_limiting_resettime` to reflect github's new X-RateLimit-Reset header. This integer value is a unix timestamp.  RateLimiting unit test updated accordingly."
