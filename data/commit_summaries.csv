pypi 2.1.0 introduced a breaking change to the Repository.create_pull method. This PR updates the example provided in the docs: https://pypi.readthedocs.io/en/latest/examples/PullRequest.html#create-a-new-pull-request Add missing GitHub classes to docs (#2783) Fix mypy error with urllib3>=2.0.0a1 by ignoring (#2779) Release 2.1.1 (#2777) Fix rst format in doc/changes.rst (#2776) Require urllib 1.26.0 or greater
Add is_alphanumeric attribute to Autolink and Repository.create_autolink. Merge WorkflowJob type stub back to source (#2653) and GistFile type stub back to source (#2651). Merge Deployment.pyi back to source (#2687) and GistHistoryState.pyi back to source (#2685). Merge Download type stub back to source (#2684) and Milestone type stub back to source (#2682).
Merge DeploymentStatus type stub back to source. Merge TimelineEvent type stub back to source. Merge PullRequestReview type stub back to source. Merge GistComment type stub back to source. Merge License type stub back to source. Merge File type stub back to source. Merge RepositoryKey type stub back to source. Merge Label type stub back to source.
"Merge PullRequestStatus type stub back to source (#2646), Merge Permissions type stub back to source (#2647), Merge RequiredStatusChecks type stub back to source (#2645), Merge Referrer type stub back to source (#2645), Merge StatsCodeFrequency type stub back to source (#2638), Merge Plan type stub back to source (#2637), Merge ContentFile type stub back to source (#2635), Merge RequiredStatusChecks type stub back to source (#2647), Merge Referrer"
Merge Comparison StatusCommit type stub back to source (#2633) Co-authored by Enrico Minack. Merge Code* type stub back to source (#2615) Co-authored by Enrico Minack. Merge CheckSuite type stub back to source (#2606) Co-authored by Enrico Minack. Merge CheckRun type stub back to source (#2605) Co-authored by Enrico Minack.
"GitHub has released a new version of its REST API, which is now available for both Windows and macOS. The new version of the REST API is available at https://docs. Github.com/api/rest/guides/best-practices/best-practices-for-integrators-for-api-with-with-with-limits-to-default-default-branchs-for-rest-with-with-with-with-limits-for-api-with-with-with-with-with-limits-for-rest-guides-for-integrators-for-"
Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth). Github and GithubIntegration now both support the same (full) set of Requester arguments. Creating a Github instance for a Github App Installation coming from GithubIntegration uses the same Requester arguments (except for auth).
"Add support for new create_fork arguments (#2493). Add new name, title and path attributes to WorkflowRun (#2397). Fix broken urls in docstrings (#2393) Add new fork_display arguments (#2493). Add new create_fork arguments (#2493) Co-authored-by: Nicolas Schweitzer nicolas.schweitzer@amadeus.com> Add parameters to Repository.get_workflow_runs (#2408) Co-authored-by: Glenn McDonald testworks"
"Github Integration has added expiration argument back to create_jwt, which pulls in cryptogaphy package. It also added crypto extras to pyjwt, which pulls in cryptogaphy package. It also moved CI to Python 3.11 release and 3.12 dev, Merged pull request #2425 from bluek1te/master Pass requester base URL to integration and added RLock from requester."
"GitHub has added support for repository autolink references and added class Artifact to support Python 3.11, drop EOL 3.6 and relax stale to 180 days. It also added support for Python 3.11, drop EOL 3.6 and relax stale to 180 days. It also added support for 'visibility' preview for repositories and 'visibility' preview for repositories objects."
GitHub has added support for Python 3.10 and added
GitHub has fixed a bug that could cause users to get an error when they try to log into the platform. The bug was reported when users tried to log into the platform using Workflow. The error could be caused by the default values being transformed into a s when logging. The error could also be caused by the request headers being sanitised.
"A new commit has been released to add support for repository deleting secrets and remove client_id/client_secret authentication. It has also added support for exporting headers in Github. The headers that led to an exception are also useful, firstly pass them into the adapter, and then export them in a property. Test one specific use case to make sure of coverage."
"Python 3.5 support has been dropped, and the minimum required version has been bumped from 3.6 to 3.6+. Python 3.5 support has been dropped in preparation for starting to use 3.6+ only features. Revert ""Pin requests to 2.25 as well (#1757)"" and ensure httpretty is more recent than 1.0.3 This reverts commit d159425f36dc7f68766cc980e262e9287e5f111c."
Fixes #1507 added support for Repository.get_workflow_runs parameters (#1682) * Added support for Repository.get_workflow_runs parameters (#1682) * Added support for Repository.get_workflow_runs parameters (#1708) * Delete comment reactions * Add test case * update ignore-word-list * Delete issue reactions * Delete issue comment reactions * Delete pull request comment reactions * check status Merge pull request #1712 from s-t-e-v-e-n-k/inputgittree
Sphinx has been updated to version 1.52 with support for workflow dispatch event and more flexible header splitting. It has also added support for deployment statuses and added support for workflow dispatch event. It has also removed docstrings & comments from tests and modified logic to explain why encode ignores its argument.
"GitHub has fixed a bug that caused Repository.update_file() content to accept bytes. The typing information for the update_file() method's content parameter states it will only accept str, whereas it will accept both str and bytes. The typing two unit tests for NamedUser.get_repos() did not check all arguments, and this was the only method in the file that wasn't completly covered."
GitHub has released version 1.51 which includes a new feature that allows users to get the project column by id. The new feature will allow users to get the project column by id by fetching the project column by id from the project column. The feature will be available on GitHub's Repository and NamedUser.
"GitHub has released a new version of PullRequest, adding support for the maintainer_can_modify attribute in PullRequest. The maintainer_can_modify attribute will now be handled by the maintainer in PullRequest. It will also be handled by the maintainer_can_modify attribute in PaginatedList. PaginatedList does not support len() of PaginatedList. PaginatedList does not support lentest so LabelLimit stop mentioning it in the docstring."
"GitHub has added a new test environment for pytest to make it easier to build documentation locally. It also added a new class, Deployment to describe a deployment performed utilising GitHub. It added three methods onto Repository to list them and create them. It also added missing import to tests to patch replay data with permission data."
"A few test classes were failing to call tearDown() of the superclass, which meant the file descriptors of their replydata files were leaking. Make sure to call it, and switch every other callsite exposed superclasses by name to using argument-less super() Revert an AllTests change that snuck in during release. black Assert more attributes Membership (#1391) To increase code coverage, assert more attributes in Membership."
GitHub has added support for retrieving Github timeline events using a mock-up of a GitHub timeline. The mock-up can be accessed by clicking on the GitHub icon in the top-right corner of a GitHub page. It can also be accessed by clicking on the GitHub icon in the top-left corner of a GitHub page. The mock-up can also be accessed by clicking on the GitHub icon in the top-right corner of a GitHub page.
"GitHub has fixed a bug in the repository.get_pull_request_comments() method that returned the wrong type. The method was not tested directly, and the code was currently required only, so the method was not tested. The bug was fixed in the repository.get_dir_contents() and Repository.get_dir_contents() methods. It was also fixed in the repository.get_contents() and Repository.get_dir_contents() methods."
GitHub has added a new test requirement to handle  Unicode strings when recording responses. It added a new test for assignee removal/addition support to PRs. It also added a new test for assignee removal/addition support to PRs. It also added a new test for assignee removal/addition support to PRs and a new test for assignee removal/addition support to PRs.
Python 3 has been updated to add support for vulnerability alert and automated security fixes APIs. It has also been updated to add support for vulnerability alert and automated security fixes APIs. It has also been updated to remove a bunch of call sites that behaved differently between Python 2 and 3. It has also been updated to remove some uses of atLeastPython.
PyGithub has added support for pending team invitations. It has also added a new API call to Organization that allows fetching teams by slug. It has also added support for custom base_url in GithubIntegration class (#1093). It has also fixed an issue where the role parameter is set to NotSet by default but the assertion only allowed str and rena indicated.
Adding a coherent retry functionality into requests via urllib3 retry object. Adding a coherent retry functionality into requests via urllib3 retry object. Adding a coherent retry functionality into requests via urllib3 retry object. Adding a coherent retry functionality into requests via urllib3 retry object. Adding a coherent retry functionality into requests via urllib3 retry object.
"When there is no link header sent, this signifies that this is the only page of results. If data is empty, or only contains a list of items, we should count them, but this can be defeated. If data is empty, or only contains a list of items, we should count them, but this can be defeated."
"PyGithub support for projects has been added to PyGithub/PyGithub/issues/606) (#606). Currently, PyGithub/PyGithub/issues/606) does not support modifying projects, columns or cards. (I only need this for reporting purposes. Of course once I'm done done others are more than welcome to add additional interface to be merged into PyGithub/PyGithub/issues/606) (#606)."
GitHub has added support for required approving review count in the Branch Protection API. The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged. The GitHub API currently has a beta extension to the Branch Protection API that allows inspection and setting of the number of required approving reviews required for a PR to be merged.
The latest release of PyGithub has fixed a bug that caused it to break the get_archive_link feature. The issue was caused by a bug in the get_archive_link API. The bug was fixed by adding the allow_redirects option to the allow_redirects method of the repository class in the edit method of the repository class.
GitHub has fixed a bug in the HTTP Publish 202 HEAD and GET methods. The bug was caused by GitHub not being able to process the chrunching of statistics for every repository I tested in around 2 seconds. GitHub has also fixed a bug in the HTTP Publish 202 HEAD and GET methods.
"PyGithub has released a new version of PullRequest, adding support for team privacy. It has also added support for PullRequest reviewer requests. The preview period of the PullRequest review API ended May 9, 2017 so remove the custom Accept headers for the relevant methods. The return type of PullRequest.get_reviewer_requests() is a PaginatedList containing PullRequestReviewerRequest."
GitHub has fixed a bug that caused PullRequestComment.in_reply_to_id to require replay data. The issue was caused when the PullRequestComment.in_reply_to_id parameter was added to the PullRequestComment.in_reply_to_id parameter to create a team. The team privacy parameter was added to the PullRequestComment.in_reply_to_id parameter to add additional parameter to test.
GitHub has added support for filtering team members by role. It has also added support for filtering team members by role. It has also added support for adding membership with role. It has also added support for adding membership with role on remote-tracking branch 'origin/master'. It has also added support for the edit and delete hook functions Use a more modern sphinx theme Get organization from the team.
"PyPI version 1.37 has been updated to fix a typo in design.md that caused changelog generation 'n' wasn't getting interpretted as a new line. PyPI now uses datetime object to fit better with v3 API using ISO8601. Date object still allowed for backward compatibility. Fix date format for milestone creation (#593) Remove the default ""null"" input send during GET request (#691)."
GitHub has added support for changing PR head commit and added support for custom commit arguments. It also dropped support for EOL Python 2.5-2.6 and 3.2-3.3 and added Reactions feature. It also added a unit test for tree attribute of Git and added the ability to access PR Release Asset API.
Python 3.6 has been added toPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWiki
GitHub integrations support HTTP 302 redirect in Organization.has_in_members Add details of repo type for get_repos documentation Taken from https://developer.com/v3/repos/#list-organization-repositories Merge pull request #469 from tmshn/support-multiple assignees Support multiple assignees on Issue & PullRequest Merge pull request #499 from gamefiend/qhm-docs An easier to see link to the documentation in response to issue #480.
"Merge pull request #492 from Sylvus/master Added support for subscribers_count Updated documentation Added a subscribers count field Added ""add_to_assignees"" & ""remove_from_assignees"" method to Issue object. Merge pull request #479 from benwhitney/html_url_release add_url to GitRelease Merge pull request #476 from jwilk/unused-imports Removed unused imports Removed unused imports Since 1d9ad14fa918, the setup script no longer uses subprocess, shutil and os modules."
PyGithub has added the ability to set permission for team repos. It also added the ability to set permission for content dirs. Merge pull request #445 from PyGithub/nicer-repr Nicer __repr__ for GithubObjects test against python 3.5 sort params and make them work on py3 adds a nicer __repr__ Merge pull request #442 from jaredsmith/master Properly handle HTTP Proxy authentication with Python 3 Add missing space Properly handle HTTP Proxy authentication with Python 3 Merge pull request #438 from fukatani/fix-typo-repo Fix small typo.
PyGithub/travis Merge branch 'enix223-master' Merge branch'master' of Releases.com/enix223/PyGithub into enix223-master update doc url everywhere20) fix a couple typos to be clearer. Merge pull request #417 from edunham/explain-authed-user Document how one gets an AuthenticatedUser object Document how one gets an AuthenticatedUser object pull request #413 from proyvind/proyvind-architects Document how one gets an AuthenticatedUser object pull request #413 from proyvind/proyvind-architects
Merge pull request #403 from mat128/handle_redirects Merge pull request #412 from jeffreymelvin-wf/expose_previous_filename_for_renamed_files Add previous_filename property to File. Merge pull request #395 from jlafleche/jlf/fixExceptionPickling Fix for pickling exception when deserializing GithubException. Merge pull request #384 from virtuald/patch-1 add support for the head parameter in Repository.get_pulls.
"Merge pull request #364 from tapilab/master fix misspelling: https://status.com/PyGithub/PyGithub/issues/363 fix misspelling: https://status.com/PyGithub/PyGithub/issues/363 Merge pull request #360 from allevin/master add support for the ""base"" parameter in the repository get_pulls() method. Adding base parameter to get_pulls() method. Merge pull request #355 from kevinsl/master add support for the direction parameter in Repository.get_pulls."
Merge pull request #346 from danvk/paginated-headers Thread headers through PaginatedList headers through PaginatedList Merge pull request #346 from umeboshimaster support long in get_repo support long by get_repo Merge pull request #336 from crwilcox/master Fixes #336 allowing strings in the labels list. Add test for #fix Fixes #336 by allowing strings in the labels list.
"Merge pull request #309 from beugley/master Connect through a proxy with authentication code improvement. Get proxy info from http_proxy first, HTTP_PROXY second Connect through a proxy with authentication Fixed documentation link Merge pull request #305 from Jucyio/develop Add support to create Repository objects lazily in MainClass. Merge pull request #307 from Jucyio/tokentest Support recording tests when using an OAuth token."
GitHub has fixed a bug that could cause users to be unable to access preview versions of the server-side API doc. The bug was fixed by adding a sort option to get_pulls. It also fixed a bug that could cause users to be unable to access preview versions of the server-side API doc. It also fixed a bug that could cause users to be unable to access preview versions of the server-side API doc.
"Fixed typo in Merge pull request #255 from frewsxcv/patch-1 Enable automated testing on Python 3.4 Enable automated testing on Python 3.4 Fix doc links (#248) Merge/patch-1 documentation typos Publish typos version 1.25.0 pep8 This is strange, maybe Cygwin's version is stricter. Merge branch 'pr247' into develop merge of #247 - Prepare Gists tests - re-add Gist.user to not break client code."
"Typos Publish version 1.24.0 has been released to fix a bug in the Python 3 branch 'pr224'. The code didn't work if it couldn't find a property in the file that is lexic greater than the new attribute. It now accepts _identity as an ""end point"" to insert before, and empty lines in _initAttributes as they mark the end of the method."
Merge branch 'pr220' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213' into 'pr212' Merge branch 'pr213
PukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWikiPukiWiki
Raise exception only when user *accesses* an attribute with a bad value (#195) Factorize Factorize the creation of attributes (preparation for #195) Use ValuedAttribute and NotSet.value (preparation for #195) Fix typo Github.get_hook (#196) Publish version 1.19.0 branch 'develop' Make Rate.reset an UTC datetime Small updates of doc Add many missing attributes Homogenize AllTests.py./manage.sh fix_headers Github.get_rate_limit Acknowledge branch coverage lack Update readme Merge branch 'topic/ApiStatus' into develop
Python has been updated to support object persistence in Python 2.5. It has been added to the 'Adapt to Python 2.5' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python' section of the 'Python'
"Merge branch 'topic/remembers' into develop (#192). Conflicts:/Issue.py Publish/MainClass.py/PaginatedList.py/Repository.py/Requester.py Don't fix headers in /build First review of #192 (pep8, headers...nothing important). Add test case for conditional request Add test record helper Fix update Github.get_repos (to get all public repositories) NamedUser.has_in_following Use POST /repos/:owner/:repo/hooks/:id/tests instead of POST /repos/:"
Fix copyrights (#1812 #184 #186 #187) assert response headers Enable in TestCase Add helper method in PaginatedList.py Remove helper method in PaginatedList.py Update UserKey.py Update Team.py Update Repository.py Update PullRequest.py Update Organization.py Update Notification.py Update NamedUser.py Update Milestone.py Update Label.py
"An update to the GitTree, GitTree Update, GitRef, GitBlob, GitBlob Update Gist, GitBlob Update CommitComment, GitBlob Update Commit, CommitComment.py, and GitBlob Update AuthorizationApplication has been released. It resolves the issue of non-CompletableGithubObject. It also resolves the issue of non-CompletableGithubObject. It also resolves the issue of non-CompletableGithubObject. It also resolves the issue of non-CompletableGithubObject."
Fix PullMergeRequestStatus.py Update Hook.py Fix CommitStats.py Update Permissions.py Update Notification.py Update IssuePullRequest.py Update HookDescription.py. Update GitTree.py Update GitObject.py Update Gitignore.py Update GitAuthor.py Update Gist.py Update File.py Update Branch.py Update Event.py Update CommitStatus.py Update Tag.py Change NonCompletableGithubObject without breaking build. Change GithubObject.__init__ without breaking build.
"PaginatedListBase.__grow does an over newElements over newElements when using += and then returns them. When using a generator, newElements would be empty when they are returned. Now testing a case where no last iteration is returned. Also fixing a regression where no last iteration is returned."
Merge branch 'topic/CompareToReferenceDoc' into develop update readme with missing URLs. Fix links to ref in :calls: sections Check links to ref in :calls: sections Generate doc/apis.rst instead of checking it Fix our doc to match URLs described in Github API v3 ref doc Ignore local clone of reference doc Add todos Draft a script comparing URLs called in PyGithub to Github API v3 reference doc.
Merge branch 'topic/CustomPerPageWithoutUrlParam' into develop Add a (redoundant) test for pull #176 bugfix: using custom per_page in repo.get_comments Fix pep8 and copyrights branch 'topic/Redirect' into develop Add test for pull request #174 handle 302 responses in get_dir_contents requests Implement GET /users (issue #173) Merge pull request #171 fromqt/doc Replace doc url PullRequestStatus docstring Don't think this anchor is needed Fix Event url Event docstring Label docstring Milestone docstring Update Notification Organization docstring
"Merge pull request #167 from srijan/develop Updates api reference url in docstrings for repository keys Updates api reference url in docstrings for repository keys Publish version 1.15.0 Merge branch 'develop' Add two new types of exceptions (issue #152) De-activate our only intergration test, to pass on Travis-CI AuthenticatedUser.get_user_issues and Organization.get_issues (issue #166)."
Publish version 1.14.1 Prepare version 1.14.1 Merge branch 'topic/AddDefaultUserAgent' into develop. This reverts commit ff0cf4150295bfdc6d3d4f09f57878dbd9095b16. Talk about #160 Fixed pep8 Incremented version. Added default user agent. Publish version 1.14.0 Prepare version 1.14.0 Merge branch 'topic/SpecificExceptions' into develop. This reverts commit ff0cf4150295bfdc6d3d4f09f57878dbd9095b16.
The latest version of Python has been released with a number of bug fixes. The latest version of Python has been released with a number of bug fixes. The latest version of Python has been released with a number of bug fixes. The latest version of Python has been released with a number of bug fixes.
The output of dicts has changed Fix tests for Python 3.2 on Windows Reduce 2to3 differences Fix doc for raw_data (issue #144) Fix doc of properties of class Github branch 'topic/Notifications' into develop Merge branch 'topic/ExposeRawData' into develop Complete doc/apis.rst (pull #148) Fix doc Restore 100% test coverage Improve test coverage (pull #148) Move get_notification(s) to AuthenticatedUser (pull #148) Fix documentation (pull #148) I had to separate class NotificationSubject in its own file.
Expose raw data of objects (Issue #144) dos2unix Use assertTrue and assertFalse where applicable Merge branch 'topic/PaginatedListPerPage' into develop Add Github.per_page to tweak PaginatedList (Issue #145) Merge branch 'topic/FixPythonVersions' into develop Fix for Python 2.5 Avoid confusion between Github/ and Github.py on case-insensitive file systems (#143) Merge branch'master' into develop Publish version 1.12.2 Remove a deprecation warning (Issue #142) Todo Publish version 1.12.1 Publish version 1.12.0 Merge branch 'develop' Improve publish.sh
Fix scopesme Change home page Improve documentation branch 'develop' into topic/On Conflicts: ReadMe.md doc/ChangeLog.md doc/ReferenceOfApis.md doc/ReferenceOfApis.md doc/ReferenceOfApis.md doc/ReferenceOfApis.md doc/ReferenceOfApis.md doc/ReferenceOfApis.md doc/ReferenceOfApis.md doc/ReferenceOfApis.md doc/ReferenceOfApis.md doc/ReferenceOfApis.md doc/ReferenceOfA
"Add a failing test for pull #133 fix failing get_page function * if firstParams was None, PaginatedList was calling dict(None) which fails with a TypeError. If firstParams is None, just use an empty, which dict() handles properly. If firstParams is None, just use an empty, which dict() handles properly."
Merge branch 'develop' into topic/ExperimentOn Conflicts: ReadMe.md doc/ChangeLog.md setup.py Publish version 1.10.0 Prepare version 1.10.0 + pep8 Merge branch 'develop' into topic/ExperimentOn Conflicts: ReadMe.md doc/ChangeLog.md setup.py Publish version 1.10.0 Prepare version 1.10.0 + pep8 Merge branch 'develop' into topic/ExperimentOn Conflicts: ReadMe.md doc/ChangeLog.md setup.py Publish version 1.10.0 Prepare version 1.10.0 + pep8 Merge branch 'develop' into topic/Experiment
Improve Simplify Use version from setup.py in documentation. Simplify Re-Experiment doc Change ReadMe and ChangeLog to reorganiseText Do not push docs Add disclaimer Draft a script for publishing the doc Fix Update generateDocstrings.py Merge branch 'develop' into topic/OndevelopConflicts: Merge/Github.py/GithubObject.py Readme Contributing: pull requests on develop Simplify branch 'topic/Python3' into develop (issue #93) Measure coverage simply in publish.sh Add the Python 3 classifier Further simplify Reference issue #93
Restore Python 2.5 Add Python 3.1 Restore Python 2.5 and 2.6 Fixes for Python 3: setup.py install will call 2to3 We temporary loose coverage measurement...again! Enable Python 3 in Travis Restore Python 2.5 and 2.6 Small fixes tests pass after 2to3 Use absolute imports. May help with Python 3 Remove unused file Minor fixes Publish version 1.9.1 Fix assertion failure on big Merge (issue #116) Publish version 1.9.0 branch 'develop' Prepare version 1.9.0 Add a customizable User-Agent.
Python 2.8.1 Merge branch 'develop' into topic/UnauthenticatedLimitedRateRequests Merge pull request #114 from tymofij/patch-1 typo in ReadMe.md added client_id and client_secret auth option. Merge pull request #110 from Zearin/feature/encoding_comment Add encoding comment to source files Add 'assignee' attribute to PullRequest It seems as though this may have been added to the API and was not being included in the PullRequest object.
"PyGithub is now a public projects with several public contibutors, I have to abandon my very personal coding conventions. Merge branch 'topic/Logging' into develop (pull #88). Some tests ran after.test fail with a Logging-related exception. Test the logging facility Improve generated docstrings (slightly) Log raw requests using Python logging module Gather things that show up when googling PyGithub Merge branch 'topic/EnableTravisCi' into develop (pull #88)."
"Use the./setup.py test convention Fix tests on Python 2.5 Enable Travis CI First draft of generated documentation (issue #82) 1)./generateDocstrings.py 2) cd doc 3) make 4) open doc/build/html/index.html Add __repr__ to _NotSetType We don't want "".GithubObject._NotSetType instance at 0x037B1A48>"" in our generated documentation. sphinx-quickstart Add a temporary script to create docstrings (help for issue #82) Publish version 1.7 Merge branch 'develop"
Merge remote-tracking branch 'forks/servalproject/master' into develop. Merge remote-tracking branch 'forks/servalproject/master' into develop. Merge remote-tracking branch 'forks/servalproject/master' into develop. Merge remote-tracking branch 'forks/servalproject/master' into develop. Merge remote-tracking branch 'forks/servalproject/master' into develop. Merge remote-tracking branch 'forks/servalproject/master' into develop. Merge remote-tracking branch 'forks/servalproject/master' into develop.
"Merge branch 'topic/Timeout' into develop Conflicts:/Requester.py Remove duplicated default value Add a note about Upverter (issue #63) Merge remote-tracking branch 'origin/topic/DeleteRepository' into develop Add notice about timeout to documentation. Add timeout option Repository.delete Fix record/replay in test framework Publish version 1.4 Fix publish script dos2unix, chmod +x Fix publication date Merge branch 'topic/ConnectToGithubEnterprise' into develop Update documentation Test GET on url returned by Github Enterprise Record/replay protocol, host, port"
"GitHub has released a new version of its legacy search API, GitAuthor.timezone, which will allow users to search by datetime. The new API will allow users to search for a collection by keyword. It will also allow users to search for a collection by topic. It will also allow users to search for a collection by legacy search method."
GitHub has added a legacy Add (failing) test for legacy search API (issue #49) to improve legacy APIs. It also added a legacy Add 4 (failing) test for legacy search API (issue #49) and a legacy Add (failing) integration test for issue #50 (labels with spaces in name). The label's _identity attribute is URL encoded. GitHub will return a 422 error stating that the label doesn't exist.
"Fix generation of reference of APIs Make generated code closer to correct code Factorize checking of status Set attributes of executable files Readme Remove last silly 'todo's (issue #34) List client projects (issue #25) Prepare version 1.0 Test more exceptions Simplify understanding of GithubExceptions by displaying the error message from Github Remove silly 'todo's in replay data Use datetime where it makes sence (issue #41) Implement wildcards (""*"" and ""none"") for milestone and assignee in Repository.get_issues Structure more parameters."
Some 'todo's Refactor switches' in templates have been removed. The 'todo's Refactor switches' were removed after a user complained that the 'todo's Refactor switches' were not working. The 'todo's Refactor switches' were removed after a user complained that the 'todo's Refactor switches' were not working. The 'todo's Refactor switches' were removed after a user complained that the 'todo's Refactor switches' were not working.
"Re-implement url parameters and test them (issue #36) Merge pull request #39 from BeaverSoftware/master Custom commit message created by PyGithub Automatic implementation of url_parameters Manual implementation of some url parameters Split template for GithubObject Remove some generated code excluded by mistake Remove some easy or obsolete 'todo's See issues #2 #4 #18 #35 #36 #37 Use Linux line-endings when recording integration tests on Windows Fix issue #33 and add an integration test Revert ""Remove one argument of Requester.request""."
Remove one argument of Requester.request Fix many attribute types De-hard-code repository in RepositoryKey. Why is RepositoryKey the *only* class where PATCH and DELETE do not work on self.url? Reduce complex parameter differences between generated code and correct code Move 'todo's out of generated code Do not assert that we know all the attributes we receive Merge branch 'topic/RewriteWithGeneratedCode' of Test.com:jacquev6/PyGithub into topic/RewriteWithGeneratedCode Finally achieve 100% coverage!
Test Repository.create_git_* Improve coverage of Organization Test Organization members Test Team Improve test coverage Heavy of integration tests Refactor tests of Repository Test NamedUser.create_gist withour description Restore coverage of Event Refactor tests of NamedUser Use setUp in test for NamedUser Improve coverage of AuthenticatedUser Test the new Repository.full_name attribute Test Issue.getComments Test three authentication schemes Allow test without pre-set-up Github.
Implement the three authentication schemes commit 'c93f9cc8484b7' into topic/RewriteWithdCode Conflicts: test/IntegrationTest.py Test Download and CommitComment Test Authorization Test AuthenticatedUser watching Generate more coverage information Remove noise in human readable description Retrieve rate limiting information Improve test coverage of AuthenticatedUser Improve test coverage of NamedUser Test IssueEvent attributes Test IssueComment Test Issue Test Milestone Test labels (new special case in Repository.get_label...) Rename some tests Test Gist Remove __completed from non-completable classes Remove completion of Hook Test Hooks
Test attributes of commit comments Test attributes of NamedUser Test Issue attributes Improve message when we check that we know all attributes Test attributes of Milestone Use NoCompletion when creating an object from the result of a request Improve management of lazy completion Remove repeated code Remove complete-ability from git objects Be explicit about complete-ability Create a GitTreeElement class Test Repository.git_create_blob Assert that we know all attributes.
Re-order tests Test GitTag attributes Change sys.path to import the development version in tests! Todo Test GitRef attributes Test Branch and Commit attributes Modularize integration tests Fix code generation and tests after reorganization Rename new tests as only tests Remove old tests Move files around Separate asserts on type and assignments of values of attributes Remove completion functions from GitAuthor More assertions Structure some attributes Re-order tests Test GitBlob attributes Fix urls for git objects
Standardize detection of replay problems Further simplify record mode Explanation about a todo Test attributes of GitTree (needs a manual change in url in Repository.get_git_tree) Test attributes of Repository Check types of received attributes Use a small eval instead of a big exec Do not try to __complete objects without url Add a Plan class Ensure that recorded calls are all replayed Cover AuthenticatedUser.edit Fix recording First recording for new integration tests Improve coverage Start to rewrite integration test Remove an old todo Repository.get_languages Fix testRepositoryDetails Fix testRepositoryCompare Fix testKeys Fix test
"Fix testGists Remove underscores in keys in description, to allow hunting underscores in values Simplify definition of list types documentation of two methods Fix testEvents Fix testGistsAll, improve testEvents Restore Pass parameters to __requester.request Fix testCreateForkForOrganization Restore some tests and explain why others are failing Fix testDownloads (get_element) Deactivate failing tests Fix some tests (create_activate) Fix testComment (create_xxx, delete, edit) Simplify Refactor templates Put private methods after public ones Fix testColaborators (add_element, remove_element, has_element) Do not"
Reduce human readable description fix testOrganizationDetails! Fix attributes of complex type fix testUserDetails! Fix references to current class Fix.get_user( login ) Fix completion and lazyness GithubObject.edit restore testAuthenticatedUser Small on lazy completion GithubObject.__complete Dependencies restore testAuthenticatedDetails! On the way to code generation instead of meta-Named (lots of useless eratic history squashed together in one commit) branch 'develop' Publish version 0.6 Merge branch 'topic/issue_21' into develop.
"Merge branch 'develop', version 0.5 Merge branch 'topic/CompleteImplementation' into develop Finaly do a poor implementation of Github. Merge branch 'topic/RestoreTests' into develop Improve integration tests coverage Cosmetic change in integration test Commit replay data for integration test Fix integration tests Restore test coverage Fix unit tests Fix documentation Merge branch 'topic/CompleteImplementation' into develop Repository.compare AuthenticatedUser.get_issues Repository.create_git_tree with'recursive' Optional parameter for Repository.create_git_tree."
Dos2unix Be explicit about argumentChecker object Merge branch 'topic/MoveGithubObjects' into develop Separate the three distributed classes Move GithubObject Simplify internal imports Make sure only three class definitions are distributed Move classes around branch 'topic/SplitGithubObjects' into develop Spliting GithubObjects.py Spliting GithubObjects.py Spliting GithubObjects.py Spliting GithubObjects.py Spliting GithubObjects.py Spliting GithubObjects.py Spliting GithubObjects.py Spliting GithubObjects.py Spliting GithubObjects.py Spliting GithubObjects.py Spliting GithubObjects.py Split
"Merge.com has released a new version of Merge.com which includes a new feature to split GithubObjects.py. The feature allows users to split GithubObjects.py into GithubObjects.py, GithubObjects.py and GithubObjects.py. Merge.com has also added a new feature to split GithubObjects.py into GithubObjects.py, GithubObjects.py and GithubObjects.py. Merge.com has also added a new feature to split GithubObjects.py into GithubObjects.py, GithubObjects.py and GithubObjects.py."
Fix and add integration tests about events Events: step 1 Regenerate reference of classes Restore test coverage Hook testing Hooks: step 2 Hooks: step 1 Todos for hooks and events Typo... Merge branch 'topic/Coverage' into develop RepositoryDetails AuthenticatedDetails Downloads Team.edit RepositoryKeys PullRequests Commit comments Improve integration test Merge branch 'topic/Restore TestCoverage' into develop Restore test coverage
New IntegrationTest -> IntegrationTest Gists CreateRepo testIssuesAndMilestones Coverage More NamedUser coverage Reorder integration test Emails Git objects CreateForkForOrganization Integration test UserKey Watching and Following Organization.edit Analyse integration test coverage. Improve coverage of Organization More integration test More integration test Do not break the integration test if some test was never recorded On the way to modular integration test Merge branch 'topic/AddAuthorizationsAndKeys' into develop
Typo Publish version 0.3 Merge branch 'develop' Conflicts: setup.py Merge branch 'topic/AddPullRequests' into develop Postpone merge of pull requests Pull/merge requests Todos for pull requests Merge branch 'topic/FixBugWithRepositoryOwner' into develop Fix bug with repository owner when owner is Authenticated Anticipate version 0.3 De-duplicate documentation Merge branch 'topic/Generation' into develop
Improve documentation generation Improve documentation generation Experiment with auto-documentation Move things around Reorder classes in documentation Experiment with auto-documentation Merge branch 'topic/RefactorList' into develop Improve speed of replayed integration test Re-code Apply attributeModifiers to ElementGetable too Replace modifyAttributes by attributeModifiers On the way to remove modifyAttributes from ElementCreatable and ListGetable Explicit arguments in ElementGetable Typo branch 'topic/Refactor MergeLists' into develop Put the singular name in ExternalListOfXxx instead of list capacities Restore unit tests Create a fork in integration tests Merge branch 'topic
"Repository: tags, branches, commits I had to rework because it does not work as documented Repository.xxx_downloadissues has nothing to do in this topic branch Repository.get_languages Todos to finish Repository branch 'topic/FinishUser' into develop AuthenticatedUser.xxx_emails Todos to finish User Merge branch 'topic/Refactor' into develop SeveralElementsAddable and SeveralElements Rename Use type policies in ExternalListOfObjects Rename Refactor Add an example of has_in_xxx in integration test Show coverage of integration test as well Refactor: ExternalListOfObjects -> Several"
Todos Reorganize Rename Reorganize Naming Remove useless ObjectGetter It was replaced by ListOfObjects with ElementGetable some time ago dos2unix Refactor attribute definition attribute definition Merge branch 'topic/AddIssues' into develop IssueComment Restore test coverage Issue.xxx_labels Repository issues Milestone.get_labels Postpone events Labels Milestones Todos for issues Fix version 0.2 :-$ Publish version 0.2
"GitTree.create_update and /repos/:user/:repo/git/trees/:sha?recursive=1 Repository.create_git_tag and.get_git_tag Fix integration tests after rebase Remove useless lines from IntegrationTest Test Repository.create_git_ blob, tree, commit, ref and GitRef.edit Repository.create_git_blob (and.create_git_blob, not tested) Repository.create_git_tree (and.create_git_tree, not tested) Documentation Fix after rebase Edit"
Repository.get_git_ref Add GitRef Documentation Todos for git objects Todos for git objects Merge branch 'topic/PlaybackIntegrationTest' into develop Record and replay integration tests! On the way to repaly-able integration tests Merge branch 'topic/ModularLists' into develop ListOfObjects -> ListAttribute Remove ListOfReferences Refactor unit-tests Refactor unit-tests Refactor Refactor Refactor Refactor Refactor Remove default ListGetable capacity from lists Lists with ElementGetable capacity
"Refactor Refactor Refactor Todos Merge branch 'topic/CreateWithCheckedPositionalArguments' into develop Improve arguments checking for create_xxx and edit Merge branch 'topic/GetObjectFromIdentity' into develop Implement Owner.get_repo as an ObjectGetter ObjectGetter Road Publish version 0.1 Adapt documentation for vincent-jacques.net Fix default value Small Use urllib.urlencode Add type parameter to get_repos Documentation Improve coverage, fix bugs Documentation"
"Refactor, improve test coverage Planned releases releases Implement Fix unit tests Remove trailing spaces Fix integration test Add parameters to url Extract Requester from Github Raise on 404 error when getting data Add unit tests for requests Upload to the Python Package Index Documentation Documentation RoadMap Doc A NamedUser can indeed be the authenticated user"
"Refactor Code reordering dos2unix Rework naming Refactoring attribute policies - step 4 Refactoring attribute policies - step 3 Refactoring attribute policies - step 2 Refactoring attribute policies - step 1 Refactor Organization.has_in_members,.has_in_public_members, Repository.has_in_collaborators, AuthenticatedUser.has_in_following,.has_in_watched Implement has_in_for extended list attributes Fix return values in unit tests. Be explicit about data and status expectations add_, remove_ -> add_to_,"
"Reimplements AuthenticatedUser with httplib instead of urllib2 This will allow real access to HTTP headers and status AuthenticatedUser.add_following and.remove_following Use status requests for DELETE Use a real identity attribute instead of ugly hack Fix previous commit Prepare for requests interrested only in headers PUT and DELETE list elements Documentation Repository.edit Organization.edit User.edit Typo Repository.get_collaborators,.get_contributors,.get_watchers,.get_forks Organization.get_repos User.get_followers and.get_"
Resets on reference Add private attributes of Organization Refactor integration test Add organizations ExtendedScalarAttributes in Repository Remove print Repository Documentation Implement extended attribute Small Improve integration tests Implement list of objects as attributes Improve dir ( GithubObject ) Retrieve user by login First integration test Privatize Github.rawRequest Use real base url Delete objects Refactor + typo Split tests
